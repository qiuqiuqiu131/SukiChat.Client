<UserControl
    x:Class="ChatClient.Desktop.Views.ChatPages.ChatViews.ChatLeftPanelView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    xmlns:chatViews="clr-namespace:ChatClient.Desktop.Views.ChatPages.ChatViews"
    xmlns:circleImage="clr-namespace:ChatClient.Avalonia.Controls.CircleImage;assembly=ChatClient.Avalonia"
    xmlns:converter="clr-namespace:ChatClient.Avalonia.Converter;assembly=ChatClient.Avalonia"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="clr-namespace:ChatClient.Tool.Data;assembly=ChatClient.Tool"
    xmlns:group="clr-namespace:ChatClient.Tool.Data.Group;assembly=ChatClient.Tool"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:searchBox="clr-namespace:ChatClient.Avalonia.Controls.SearchBox;assembly=ChatClient.Avalonia"
    xmlns:suki="https://github.com/kikipoulet/SukiUI"
    xmlns:vm="clr-namespace:ChatClient.Desktop.ViewModels.ChatPages.ChatViews"
    xmlns:userControls="clr-namespace:ChatClient.Desktop.Views.UserControls"
    xmlns:chatUi="clr-namespace:ChatClient.Avalonia.Controls.Chat.ChatUI;assembly=ChatClient.Avalonia"
    xmlns:badge="clr-namespace:ChatClient.Avalonia.Controls.Badge;assembly=ChatClient.Avalonia"
    xmlns:friend="clr-namespace:ChatClient.Tool.Data.Friend;assembly=ChatClient.Tool"
    d:DesignHeight="650"
    d:DesignWidth="300"
    x:DataType="vm:ChatLeftPanelViewModel"
    FontSize="15"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converter:ChatMessageToStringConverter x:Key="ChatMessageToStringConverter" />
        <converter:DateTimeConverter x:Key="DateTimeConverter" />
        <DataTemplate x:Key="FriendMenu" DataType="friend:FriendRelationDto">
            <ContextMenu Padding="0,0,10,0" Closed="OnContextMenuClosed">
                <MenuItem
                    Click="OnFriendTopMenuItemClick"
                    Header="取消置顶"
                    IsVisible="{Binding IsTop}">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="ArrowExpandDown" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Click="OnFriendTopMenuItemClick"
                    Header="置顶聊天"
                    IsVisible="{Binding !IsTop}">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="ArrowCollapseUp" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Click="OnFriendCopyIdClick" Header="复制ID">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="ContentCopy" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Click="OnFriendDisturbMenuItemClick"
                    Header="接受消息提醒"
                    IsVisible="{Binding CantDisturb}">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="BellOutline" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Click="OnFriendDisturbMenuItemClick"
                    Header="消息免打扰"
                    IsVisible="{Binding !CantDisturb}">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="BellOffOutline" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Click="OnFriendOpenDialogClick"
                    Header="打开独立窗口">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="CheckboxMultipleBlankOutline" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Margin="5" />
                <MenuItem Click="OnFriendClearMenuItemClick" Header="删除聊天">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="DeleteOutline" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </DataTemplate>
        <DataTemplate x:Key="GroupMenu" DataType="group:GroupRelationDto">
            <ContextMenu Padding="0,0,10,0" Closed="OnContextMenuClosed">
                <MenuItem
                    Click="OnGroupTopMenuItemClick"
                    Header="取消置顶"
                    IsVisible="{Binding IsTop}">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="ArrowExpandDown" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Click="OnGroupTopMenuItemClick"
                    Header="置顶聊天"
                    IsVisible="{Binding !IsTop}">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="ArrowCollapseUp" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Click="OnGroupCopyIdClick" Header="复制群ID">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="ContentCopy" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Click="OnGroupDisturbMenuItemClick"
                    Header="接收消息提醒"
                    IsVisible="{Binding CantDisturb}">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="BellOutline" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Click="OnGroupDisturbMenuItemClick"
                    Header="消息免打扰"
                    IsVisible="{Binding !CantDisturb}">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="BellOffOutline" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Click="OnGroupOpenDialogClick"
                    Header="打开独立窗口">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="CheckboxMultipleBlankOutline" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Margin="5" />
                <MenuItem Click="OnGroupClearMenuItemClick" Header="删除聊天">
                    <MenuItem.Icon>
                        <avalonia:MaterialIcon Kind="DeleteOutline" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </DataTemplate>
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="RadioButton.IsTop">
            <Setter Property="Background" Value="{DynamicResource SukiPrimaryColor15}" />
            <Style Selector="^ /template/ Border">
                <Setter Property="Opacity" Value="0.5" />
            </Style>
            <Style Selector="^:pointerover">
                <Setter Property="BorderBrush" Value="{DynamicResource SukiPrimaryColor25}" />
                <Style Selector="^ /template/ Border">
                    <Setter Property="Opacity" Value="0.5" />
                    <Setter Property="Background" Value="{DynamicResource SukiPrimaryColor25}" />
                    <Setter Property="CornerRadius" Value="8" />
                </Style>
                <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="CornerRadius" Value="8" />
                </Style>
            </Style>
            <Style Selector="^:checked">
                <Setter Property="BorderBrush" Value="{DynamicResource SukiPrimaryColor50}" />
                <Style Selector="^ /template/ Border">
                    <Setter Property="Opacity" Value="0.5" />
                    <Setter Property="Background" Value="{DynamicResource SukiPrimaryColor75}" />
                    <Setter Property="CornerRadius" Value="13" />
                </Style>
                <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="CornerRadius" Value="13" />
                </Style>
            </Style>
        </Style>
    </UserControl.Styles>
    <UserControl.DataTemplates>
        <DataTemplate DataType="friend:FriendChatDto">
            <RadioButton
                Height="65"
                Margin="0"
                Classes="Chat Content Enter"
                Classes.IsTop="{Binding FriendRelatoinDto.IsTop}"
                Click="Button_OnClick"
                DoubleTapped="OnDoubleTapped"
                Command="{Binding ((vm:ChatLeftPanelViewModel)DataContext).FriendSelectionChangedCommand, RelativeSource={RelativeSource AncestorType=ItemsControl, Mode=FindAncestor}}"
                CommandParameter="{Binding}"
                CornerRadius="0"
                GroupName="ChatLeft"
                PointerPressed="Button_OnPointerPressed"
                RenderTransformOrigin="0.5,0.5">
                <Grid Name="Root_Grid" ColumnDefinitions="42,*">
                    <!--  头像  -->
                    <circleImage:CircleImage Image="{Binding FriendRelatoinDto.UserDto.HeadImage}" Size="42" />
                    <!--  简略信息  -->
                    <Grid
                        Grid.Column="1"
                        Margin="10,4,0,4"
                        RowDefinitions="1.2*,1*">
                        <Grid Grid.Row="0" ColumnDefinitions="*,auto">
                            <Grid Grid.Column="0">
                                <TextBlock
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource SukiText}"
                                    IsVisible="{Binding FriendRelatoinDto.Remark, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                    Text="{Binding FriendRelatoinDto.Remark}"
                                    TextTrimming="CharacterEllipsis" />
                                <TextBlock
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource SukiText}"
                                    IsVisible="{Binding FriendRelatoinDto.Remark, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                    Text="{Binding FriendRelatoinDto.UserDto.Name}"
                                    TextTrimming="CharacterEllipsis" />
                            </Grid>
                            <TextBlock
                                Name="Time_Text"
                                Grid.Column="1"
                                Margin="0,5"
                                Classes="Small"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                FontSize="11"
                                Foreground="{DynamicResource SukiText}"
                                Opacity="0.7"
                                Text="{Binding LastChatMessages.Time, Converter={StaticResource DateTimeConverter}}" />
                        </Grid>
                        <Grid Grid.Row="1" ColumnDefinitions="*,auto">
                            <Panel
                                IsVisible="{Binding LastChatMessages,Converter={x:Static ObjectConverters.IsNotNull}}">
                                <TextBlock
                                    Margin="0,0,15,0"
                                    VerticalAlignment="Center"
                                    IsVisible="{Binding !LastChatMessages.IsRetracted}"
                                    FontSize="12"
                                    Classes="Small"
                                    Foreground="{DynamicResource SukiText}"
                                    Opacity="0.7"
                                    Text="{Binding LastChatMessages.ChatMessages, Converter={StaticResource ChatMessageToStringConverter}}"
                                    TextTrimming="CharacterEllipsis" />
                                <TextBlock IsVisible="{Binding LastChatMessages.IsRetracted}" Margin="0,0,15,0"
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           Classes="Small"
                                           Foreground="{DynamicResource SukiText}"
                                           Opacity="0.7"
                                           TextTrimming="CharacterEllipsis">
                                    <Run
                                        Text="{Binding LastChatMessages.IsUser,Converter={chatUi:RetractedMessageConverter}}" />
                                    <Run Text="撤回一条消息" />
                                </TextBlock>
                            </Panel>
                            <Panel Grid.Column="1">
                                <Panel
                                    IsVisible="{Binding UnReadMessageCount, Converter={converter:IntEqualityConverter Value=0}}">
                                    <avalonia:MaterialIcon
                                        Width="16"
                                        Height="16"
                                        IsVisible="{Binding FriendRelatoinDto.CantDisturb}"
                                        Kind="BellOffOutline"
                                        Opacity="0.6" />
                                </Panel>
                                <badge:Badge HorizontalAlignment="Right"
                                             Classes.Danger="{Binding FriendRelatoinDto.CantDisturb,Converter={x:Static BoolConverters.Not}}"
                                             Classes.Gray="{Binding FriendRelatoinDto.CantDisturb}"
                                             Header="{Binding UnReadMessageCount}"
                                             OverflowCount="99"
                                             IsVisible="{Binding UnReadMessageCount, Converter={converter:IntEqualityConverter Equal=False, Value=0}}" />
                            </Panel>
                        </Grid>
                    </Grid>
                </Grid>
            </RadioButton>
        </DataTemplate>
        <DataTemplate DataType="group:GroupChatDto">
            <RadioButton
                Height="65"
                Margin="0"
                Classes="Chat Content Enter"
                Classes.IsTop="{Binding GroupRelationDto.IsTop}"
                Click="Button_OnClick"
                DoubleTapped="OnDoubleTapped"
                Command="{Binding ((vm:ChatLeftPanelViewModel)DataContext).GroupSelectionChangedCommand, RelativeSource={RelativeSource AncestorType=ItemsControl, Mode=FindAncestor}}"
                CommandParameter="{Binding}"
                CornerRadius="0"
                GroupName="ChatLeft"
                PointerPressed="Button_OnPointerPressed"
                RenderTransformOrigin="0.5,0.5">
                <Grid Name="Root_Grid" ColumnDefinitions="42,*">
                    <!--  头像  -->
                    <circleImage:CircleImage Image="{Binding GroupRelationDto.GroupDto.HeadImage}" Size="42" />
                    <!--  简略信息  -->
                    <Grid
                        Grid.Column="1"
                        Margin="10,4,0,4"
                        RowDefinitions="1.2*,1*">
                        <Grid Grid.Row="0" ColumnDefinitions="*,auto">
                            <Grid Grid.Column="0">
                                <TextBlock
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource SukiText}"
                                    IsVisible="{Binding GroupRelationDto.Remark, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                    Text="{Binding GroupRelationDto.Remark}"
                                    TextTrimming="CharacterEllipsis" />
                                <TextBlock
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource SukiText}"
                                    IsVisible="{Binding GroupRelationDto.Remark, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                    Text="{Binding GroupRelationDto.GroupDto.Name}"
                                    TextTrimming="CharacterEllipsis" />
                            </Grid>
                            <TextBlock
                                Name="Time_Text"
                                Grid.Column="1"
                                Margin="0,5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Classes="Small"
                                FontSize="11"
                                Foreground="{DynamicResource SukiText}"
                                Opacity="0.6"
                                Text="{Binding LastChatMessages.Time, Converter={StaticResource DateTimeConverter}}" />
                        </Grid>
                        <Grid Grid.Row="1" ColumnDefinitions="*,auto">
                            <Panel Grid.Column="0"
                                   IsVisible="{Binding LastChatMessages, Converter={x:Static ObjectConverters.IsNotNull}}">
                                <Panel IsVisible="{Binding !LastChatMessages.IsSystem}">
                                    <TextBlock
                                        Margin="0,0,15,0"
                                        VerticalAlignment="Center"
                                        FontSize="12"
                                        Classes="Small"
                                        Foreground="{DynamicResource SukiText}"
                                        IsVisible="{Binding !LastChatMessages.IsRetracted}"
                                        Opacity="0.7"
                                        TextTrimming="CharacterEllipsis">
                                        <Run Text="{Binding LastChatMessages.Owner.NickName}" />
                                        <Run Text=":" />
                                        <Run
                                            Text="{Binding LastChatMessages.ChatMessages, Mode=OneWay, Converter={StaticResource ChatMessageToStringConverter}}" />
                                    </TextBlock>
                                    <TextBlock
                                        Margin="0,0,15,0"
                                        VerticalAlignment="Center"
                                        FontSize="12"
                                        Classes="Small"
                                        Foreground="{DynamicResource SukiText}"
                                        IsVisible="{Binding LastChatMessages.IsRetracted}"
                                        Opacity="0.7"
                                        TextTrimming="CharacterEllipsis">
                                        <Run Text="{Binding LastChatMessages.Owner.NickName}" />
                                        <Run Text=":" />
                                        <Run
                                            Text="撤回一条消息" />
                                    </TextBlock>
                                </Panel>
                                <TextBlock
                                    Margin="0,0,15,0"
                                    VerticalAlignment="Center"
                                    FontSize="12"
                                    Classes="Small"
                                    Foreground="{DynamicResource SukiText}"
                                    IsVisible="{Binding LastChatMessages.IsSystem}"
                                    Opacity="0.7"
                                    TextTrimming="CharacterEllipsis">
                                    <Run
                                        Text="{Binding LastChatMessages.ChatMessages, Mode=OneWay, Converter={StaticResource ChatMessageToStringConverter}}" />
                                </TextBlock>
                            </Panel>
                            <Panel Grid.Column="1">
                                <Panel
                                    IsVisible="{Binding UnReadMessageCount, Converter={converter:IntEqualityConverter Value=0}}">
                                    <avalonia:MaterialIcon
                                        Width="16"
                                        Height="16"
                                        IsVisible="{Binding GroupRelationDto.CantDisturb}"
                                        Kind="BellOffOutline"
                                        Opacity="0.6" />
                                </Panel>
                                <badge:Badge HorizontalAlignment="Right"
                                             Classes.Danger="{Binding GroupRelationDto.CantDisturb,Converter={x:Static BoolConverters.Not}}"
                                             Classes.Gray="{Binding GroupRelationDto.CantDisturb}"
                                             Header="{Binding UnReadMessageCount}"
                                             OverflowCount="99"
                                             IsVisible="{Binding UnReadMessageCount, Converter={converter:IntEqualityConverter Equal=False, Value=0}}" />
                            </Panel>
                        </Grid>
                    </Grid>
                </Grid>
            </RadioButton>
        </DataTemplate>
    </UserControl.DataTemplates>
    <chatViews:ChatLeftPanelView.FriendItemsSource>
        <Binding Path="ChatViewModel.Friends" />
    </chatViews:ChatLeftPanelView.FriendItemsSource>
    <chatViews:ChatLeftPanelView.GroupItemsSource>
        <Binding Path="ChatViewModel.Groups" />
    </chatViews:ChatLeftPanelView.GroupItemsSource>
    <chatViews:ChatLeftPanelView.OpenFriendChatDialog>
        <Binding Path="FriendOpenDialogCommand" />
    </chatViews:ChatLeftPanelView.OpenFriendChatDialog>
    <chatViews:ChatLeftPanelView.OpenGroupChatDialog>
        <Binding Path="GroupOpenDialogCommand" />
    </chatViews:ChatLeftPanelView.OpenGroupChatDialog>
    <Grid Margin="0" RowDefinitions="70,*" Background="Transparent">
        <!--  顶部  -->
        <suki:GlassCard
            Grid.Row="0"
            Height="70"
            Margin="0,0,0,0"
            Padding="8"
            BorderThickness="0,0,0,1.5"
            CornerRadius="2">
            <DockPanel LastChildFill="True">
                <Button
                    Name="PART_AddButton"
                    Width="27"
                    Height="27"
                    Margin="7,3,0,1"
                    Padding="0"
                    VerticalAlignment="Bottom"
                    Background="{DynamicResource SukiBorderBrush}"
                    Classes="Add"
                    Click="PART_AddButton_OnClick"
                    CornerRadius="8"
                    DockPanel.Dock="Right">
                    <avalonia:MaterialIcon HorizontalAlignment="Center" Kind="Plus" />
                </Button>
                <searchBox:SearchBox Name="SearchBox" SearchText="{Binding SearchText,Mode=TwoWay}" WaterMask="搜索" />
            </DockPanel>
        </suki:GlassCard>

        <suki:GlassCard
            Grid.Row="1"
            Margin="0"
            Padding="0"
            CornerRadius="0"
            Opacity="0.5" />
        <!--  好友列表  -->
        <ScrollViewer
            Grid.Row="1"
            x:Name="ScrollViewer"
            HorizontalScrollBarVisibility="Disabled"
            VerticalScrollBarVisibility="Hidden">
            <ScrollViewer.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding ElementName="SearchBox" Path="!IsFocus" />
                    <Binding Path="SearchText" Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                </MultiBinding>
            </ScrollViewer.IsVisible>
            <ItemsControl
                Margin="0,0,0,100"
                x:Name="Items"
                suki:ItemsControlExtensions.AnimatedScroll="True">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Styles>
                    <Style Selector="RadioButton.Content">
                        <Style Selector="^ Grid#Root_Grid">
                            <Setter Property="Margin" Value="6,5,6,5" />
                            <Setter Property="Transitions">
                                <Transitions>
                                    <ThicknessTransition
                                        Easing="SineEaseInOut"
                                        Property="Margin"
                                        Duration="0:0:0.25" />
                                </Transitions>
                            </Setter>
                        </Style>
                    </Style>

                    <Style Selector="RadioButton.Content:checked">
                        <Style Selector="^ Grid#Root_Grid">
                            <Setter Property="Margin" Value="17,5,17,5" />
                        </Style>
                    </Style>
                </ItemsControl.Styles>
            </ItemsControl>
        </ScrollViewer>
        <!-- 搜索 -->
        <ScrollViewer
            Grid.Row="1"
            PointerPressed="SearchScrollViewer_OnPointerPressed"
            Background="Transparent"
            HorizontalScrollBarVisibility="Disabled"
            VerticalScrollBarVisibility="Hidden">
            <ScrollViewer.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.Or}">
                    <Binding ElementName="SearchBox" Path="IsFocus" />
                    <Binding Path="SearchText" Converter="{x:Static StringConverters.IsNotNullOrEmpty}" />
                </MultiBinding>
            </ScrollViewer.IsVisible>
            <StackPanel Orientation="Vertical" suki:StackPanelExtensions.AnimatedScroll="True">
                <Panel>
                    <TextBlock HorizontalAlignment="Left" Text="本地搜索" Opacity="0.7" Classes="Small"
                               IsVisible="{Binding AllSearchDto, Converter={x:Static ObjectConverters.IsNull}}"
                               FontSize="12.5" Margin="15,10,0,5" />
                    <Panel IsVisible="{Binding AllSearchDto,Converter={x:Static ObjectConverters.IsNotNull}}">
                        <userControls:LeftSearchView DataContext="{Binding AllSearchDto}"
                                                     CardClick="LeftSearchView_OnCardClick"
                                                     SearchMore="{Binding ((vm:ChatLeftPanelViewModel)DataContext).SearchMoreCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=chatViews:ChatLeftPanelView}}" />
                    </Panel>
                </Panel>
                <Border Height="1" Background="{DynamicResource SukiBorderBrush}" Margin="5,10" />
                <suki:GlassCard IsInteractive="True"
                                Classes="search"
                                PointerPressed="LeftSearchView_OnCardClick"
                                CornerRadius="5"
                                Padding="0"
                                Margin="5">
                    <suki:GlassCard.Styles>
                        <Style Selector="suki|GlassCard.search">
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                        <Style Selector="suki|GlassCard.search:pointerover">
                            <Setter Property="Background" Value="{DynamicResource GlassBorderBrush}" />
                        </Style>
                    </suki:GlassCard.Styles>
                    <Interaction.Behaviors>
                        <EventTriggerBehavior EventName="PointerPressed">
                            <InvokeCommandAction Command="{Binding AddNewFriendCommand}" />
                        </EventTriggerBehavior>
                    </Interaction.Behaviors>
                    <Grid ColumnDefinitions="42,*" Margin="10,6">
                        <Panel Width="42" Height="42">
                            <Ellipse Width="42" Height="42" VerticalAlignment="Center" HorizontalAlignment="Center"
                                     Fill="{DynamicResource SukiPrimaryColor50}" />
                            <PathIcon Data="{x:Static suki:Icons.Search}" Width="20" Height="20" Opacity="0.7"
                                      VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Panel>
                        <Grid Grid.Column="1" RowDefinitions="1.2*,*" Margin="12,0">
                            <TextBlock Grid.Row="0" Text="进入全网搜索" />
                            <TextBlock Grid.Row="1" Text="查找群聊、用户等" Classes="Small" FontSize="12.5" Opacity="0.7" />
                        </Grid>
                    </Grid>
                </suki:GlassCard>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>