<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:overlaySplitView="clr-namespace:ChatClient.Avalonia.Controls.OverlaySplitView;assembly=ChatClient.Avalonia"
             xmlns:suki="https://github.com/kikipoulet/SukiUI"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:regions="http://prismlibrary.com/"
             xmlns:uiEntity="clr-namespace:ChatClient.Tool.UIEntity;assembly=ChatClient.Tool"
             xmlns:chatRightCenterPanel="clr-namespace:ChatClient.Desktop.ViewModels.ChatPages.ChatViews.ChatRightCenterPanel"
             xmlns:input="clr-namespace:ChatClient.Desktop.Views.ChatPages.ChatViews.Input"
             xmlns:groupChatUi="clr-namespace:ChatClient.Desktop.Views.UserControls.GroupChatUI"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:DataType="chatRightCenterPanel:ChatGroupPanelViewModel"
             x:Class="ChatClient.Desktop.Views.ChatPages.ChatViews.ChatRightCenterPanel.ChatGroupPanelView">
    <UserControl.Styles>
        <Style Selector="ScrollBar[AllowAutoHide=True] Border#ThumbBarVertical">
            <Setter Property="Background" Value="{DynamicResource SukiControlBorderBrush}" />
            <Setter Property="Width" Value="4" />
        </Style>
    </UserControl.Styles>
    <Grid RowDefinitions="70,*">
        <!-- 顶部栏 -->
        <suki:GlassCard Grid.Row="0"
                        CornerRadius="0"
                        Padding="0"
                        Margin="0"
                        BorderThickness="0,0,0,1.5"
                        BorderBrush="{DynamicResource SukiBorderBrush}">
            <DockPanel Margin="0" LastChildFill="True">
                <StackPanel Margin="0,0,10,5"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal"
                            DockPanel.Dock="Right">
                    <StackPanel.Styles>
                        <Style Selector="Button.Basic">
                            <Setter Property="Padding" Value="5" />
                            <Style Selector="^ avalonia|MaterialIcon">
                                <Setter Property="Foreground" Value="{DynamicResource SukiText}" />
                            </Style>
                            <Style Selector="^:pointerover">
                                <Setter Property="Background" Value="Transparent" />
                                <Style Selector="^ avalonia|MaterialIcon">
                                    <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" />
                                </Style>
                            </Style>
                            <Style Selector="^:pressed /template/ Border">
                                <Setter Property="Background" Value="Transparent" />
                                <Style Selector="^ avalonia|MaterialIcon">
                                    <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" />
                                </Style>
                            </Style>
                        </Style>
                    </StackPanel.Styles>
                    <Button Classes="Basic" Click="ShowRightView">
                        <avalonia:MaterialIcon Kind="DotsHorizontal" Width="23" Height="23" />
                    </Button>
                </StackPanel>
                <StackPanel VerticalAlignment="Bottom"
                            HorizontalAlignment="Left"
                            Margin="13,5,0,0"
                            Orientation="Horizontal">
                    <Grid Margin="10,0,0,10">
                        <Grid.Styles>
                            <Style Selector="TextBlock:pointerover">
                                <Setter Property="Background" Value="{DynamicResource SukiBorderBrush}" />
                            </Style>
                        </Grid.Styles>
                        <TextBlock
                            IsVisible="{Binding SelectedGroup.GroupRelationDto.Remark,Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                            Text="{Binding SelectedGroup.GroupRelationDto.Remark}"
                            PointerPressed="HeadName_OnPointerPressed"
                            VerticalAlignment="Center"
                            Padding="3,0"
                            LetterSpacing="1"
                            FontWeight="SemiBold"
                            FontSize="16"
                            Foreground="{DynamicResource SukiText}" />
                        <TextBlock
                            IsVisible="{Binding SelectedGroup.GroupRelationDto.Remark,Converter={x:Static StringConverters.IsNullOrEmpty}}"
                            Text="{Binding SelectedGroup.GroupRelationDto.GroupDto.Name}"
                            VerticalAlignment="Center"
                            PointerPressed="HeadName_OnPointerPressed"
                            Padding="3,0"
                            FontWeight="SemiBold"
                            LetterSpacing="1"
                            FontSize="16"
                            Foreground="{DynamicResource SukiText}" />
                    </Grid>
                    <TextBlock
                        Text="{Binding SelectedGroup.GroupRelationDto.GroupDto.GroupMembers.Count,StringFormat=({0})}"
                        Margin="0,0,0,10"
                        VerticalAlignment="Center"
                        FontWeight="SemiBold"
                        LetterSpacing="1"
                        FontSize="16"
                        Foreground="{DynamicResource SukiText}" />
                </StackPanel>
            </DockPanel>
        </suki:GlassCard>
        <overlaySplitView:OverlaySplitView Grid.Row="1"
                                           Name="OverlaySplitView"
                                           IsPaneOpen="False">
            <!-- 侧边栏 -->
            <overlaySplitView:OverlaySplitView.PaneContent>
                <Panel ClipToBounds="True">
                    <suki:SukiBackground Name="PART_Background"
                                         Margin="-150"
                                         AnimationEnabled="True"
                                         Style="{Binding ThemeStyle.BackgroundStyle}"
                                         TransitionTime="1"
                                         TransitionsEnabled="True"
                                         ForceSoftwareRendering="True" />
                    <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled">
                        <ContentControl
                            regions:RegionManager.RegionName="{x:Static uiEntity:RegionNames.ChatSideRegion}"
                            regions:RegionManager.RegionManager="{Binding RegionManager}" />
                    </ScrollViewer>
                </Panel>
            </overlaySplitView:OverlaySplitView.PaneContent>

            <!-- 聊天部分 -->
            <Grid RowDefinitions="*,40">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="1.2" />
                        <RowDefinition MinHeight="150" MaxHeight="350" Height="200" />
                    </Grid.RowDefinitions>

                    <!-- 聊天内容 -->
                    <groupChatUi:GroupChatUI Name="ChatUI"
                                             Margin="0"
                                             HeadClick="ChatUI_OnHeadClick"
                                             Notification="ChatUI_OnNotification"
                                             MessageBoxShow="ChatUI_OnMessageBoxShow"
                                             ContextMenuShow="ChatUI_OnContextMenuShow"
                                             ShareMessageCommand="{Binding ShareMessageCommand}"
                                             RetractMessageCommand="{Binding RetractMessageCommand}"
                                             DeleteMessageCommand="{Binding DeleteMessageCommand}"
                                             FileRestoreCommand="{Binding }"
                                             FileMessageClickCommand="{Binding FileMessageClickCommand}"
                                             UserImageSource="{Binding User.HeadImage}" />

                    <Border Grid.Row="1" Background="{DynamicResource SukiBorderBrush}" />

                    <!-- 输入框 -->
                    <Grid Grid.Row="2">
                        <Border BorderThickness="0"
                                Opacity="{DynamicResource GlassOpacity}"
                                Background="{DynamicResource SukiGlassCardBackground}" />
                        <input:ChatInputPanelView
                            DataContext="{Binding ChatInputPanelViewModel }" />
                    </Grid>

                    <GridSplitter Grid.Row="1" Background="Transparent" Margin="0,-2.5" />
                </Grid>

                <!-- 底部按钮 -->
                <Grid Grid.Row="1" Margin="0,0,0,0">
                    <Border BorderThickness="0"
                            Opacity="{DynamicResource GlassOpacity}"
                            Background="{DynamicResource SukiGlassCardBackground}" />
                    <Button
                        IsVisible="{Binding SendMessageButtonVisible}"
                        Content="发送"
                        Classes="Flat"
                        CornerRadius="6"
                        FontSize="13"
                        Padding="23,5,23,5"
                        Margin="10,0,15,10"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Command="{Binding ChatInputPanelViewModel.SendMessageCommand}" />
                </Grid>
            </Grid>
        </overlaySplitView:OverlaySplitView>
    </Grid>
</UserControl>