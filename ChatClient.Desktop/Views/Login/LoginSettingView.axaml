<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:theme="https://github.com/kikipoulet/SukiUI"
             xmlns:behaviors="clr-namespace:ChatClient.Avalonia.Behaviors;assembly=ChatClient.Avalonia"
             xmlns:circleImage="clr-namespace:ChatClient.Avalonia.Controls.CircleImage;assembly=ChatClient.Avalonia"
             xmlns:converter="clr-namespace:ChatClient.Avalonia.Converter;assembly=ChatClient.Avalonia"
             xmlns:sukiColor="clr-namespace:SukiUI.ColorTheme;assembly=SukiUI"
             xmlns:login="clr-namespace:ChatClient.Desktop.ViewModels.Login"
             mc:Ignorable="d"
             d:DesignHeight="440"
             d:DesignWidth="315"
             x:DataType="login:LoginSettingViewModel"
             x:Class="ChatClient.Desktop.Views.Login.LoginSettingView">
    <UserControl.Transitions>
        <Transitions>
            <DoubleTransition Property="Opacity" Duration="0:0:0.3" />
        </Transitions>
    </UserControl.Transitions>

    <UserControl.Styles>
        <Style Selector="ScrollBar[AllowAutoHide=True] Border#ThumbBarVertical">
            <Setter Property="Background" Value="{DynamicResource SukiControlBorderBrush}" />
            <Setter Property="Width" Value="5" />
        </Style>
    </UserControl.Styles>

    <Grid RowDefinitions="25,*" Background="Transparent" PointerPressed="InputElement_OnPointerPressed">
        <Panel Height="25" Margin="0,2" Background="Transparent">
            <Interaction.Behaviors>
                <behaviors:WindowDragBehavior />
            </Interaction.Behaviors>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5,0">
                <Panel Margin="4" IsVisible="{Binding !IsConnected.IsConnected}" ToolTip.ShowDelay="250"
                       ToolTip.Placement="Bottom" ToolTip.VerticalOffset="5"
                       ToolTip.HorizontalOffset="-10">
                    <ToolTip.Tip>
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <PathIcon Data="{x:Static theme:Icons.CircleWarning}"
                                      Width="17.5" Height="17.5"
                                      Opacity="0.9"
                                      Foreground="{x:Static sukiColor:NotificationColor.ErrorIconForeground}" />
                            <TextBlock Text="网络连接断开" FontSize="13" Opacity="0.75" Foreground="Red" />
                        </StackPanel>
                    </ToolTip.Tip>
                    <avalonia:MaterialIcon
                        Width="17"
                        Height="17"
                        Foreground="{x:Static sukiColor:NotificationColor.ErrorIconForeground}"
                        Kind="WifiStrengthAlertOutline" />
                </Panel>
                <Button Name="PART_CloseButton"
                        HorizontalAlignment="Right"
                        Classes="Basic Rounded WindowControlsButton Close">
                    <Interaction.Behaviors>
                        <EventTriggerBehavior EventName="Click">
                            <CallMethodAction TargetObject="{Binding $parent[theme:SukiWindow]}"
                                              MethodName="Close" />
                        </EventTriggerBehavior>
                    </Interaction.Behaviors>
                    <PathIcon Data="{x:Static theme:Icons.WindowClose}" Height="8" Width="8" />
                </Button>
            </StackPanel>
        </Panel>
        <DockPanel LastChildFill="True" Grid.Row="1" VerticalAlignment="Stretch"
                   HorizontalAlignment="Stretch">
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5" HorizontalAlignment="Center" DockPanel.Dock="Top">
                <avalonia:MaterialIcon Kind="AccountMultipleOutline" Margin="-5,0,5,0"
                                       Width="20" Height="20" />
                <TextBlock Text="登录管理" HorizontalAlignment="Center" FontSize="17.5" />
            </StackPanel>

            <Button Classes="Basic user" Padding="14,6"
                    Margin="0,10" DockPanel.Dock="Bottom"
                    Command="{Binding ReturnCommand}">
                <Button.Styles>
                    <Style Selector="Button.user TextBlock#text">
                        <Setter Property="Opacity" Value="1" />
                    </Style>
                    <Style Selector="Button.user:pointerover TextBlock#text">
                        <Setter Property="Opacity" Value="0.7" />
                    </Style>
                </Button.Styles>
                <TextBlock Name="text" Text="返回" FontSize="15">
                    <TextBlock.Transitions>
                        <Transitions>
                            <DoubleTransition Property="Opacity" Duration="0:0:0.2" />
                        </Transitions>
                    </TextBlock.Transitions>
                </TextBlock>
            </Button>

            <Panel>
                <StackPanel Orientation="Vertical"
                            Opacity="0.6"
                            Spacing="5"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            IsVisible="{Binding UserList.Count,Converter={converter:IntEqualityConverter Value=0, Equal=True}}">
                    <avalonia:MaterialIcon Width="40" Height="40" Kind="ArchiveOutline" />
                    <TextBlock Text="暂无登录记录" HorizontalAlignment="Center" VerticalAlignment="Center" />
                </StackPanel>

                <ScrollViewer
                    IsVisible="{Binding UserList.Count,Converter={converter:IntEqualityConverter Value=0, Equal=False}}"
                    Classes="Fill" HorizontalScrollBarVisibility="Disabled"
                    VerticalScrollBarVisibility="Visible">
                    <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding UserList}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" ItemHeight="90" ItemWidth="90"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <theme:GlassCard Width="85" Height="85" IsAnimated="True" IsInteractive="True"
                                                 CornerRadius="8" Padding="5" ToolTip.ShowDelay="500">
                                    <ToolTip.Tip>
                                        <StackPanel Orientation="Vertical" Spacing="2.5">
                                            <TextBlock FontSize="12.5" HorizontalAlignment="Center"
                                                       Text="{Binding ID,StringFormat='账号ID: {0}'}" />
                                            <TextBlock FontSize="12.5" HorizontalAlignment="Center"
                                                       Text="{Binding LastLoginTime,StringFormat='上次登录: {0}'}" />
                                        </StackPanel>
                                    </ToolTip.Tip>
                                    <theme:GlassCard.Styles>
                                        <Style Selector="theme|GlassCard.remove Button#removeButton">
                                            <Setter Property="IsVisible" Value="False" />
                                        </Style>
                                        <Style Selector="theme|GlassCard:pointerover.remove Button#removeButton">
                                            <Setter Property="IsVisible" Value="True" />
                                        </Style>
                                    </theme:GlassCard.Styles>
                                    <Panel>
                                        <circleImage:CircleImage VerticalAlignment="Center" Image="{Binding Head}"
                                                                 Size="70" />
                                        <Button Classes="Void" Name="removeButton" HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Command="{Binding ((login:LoginSettingViewModel)DataContext).RemoveLoginCommand,RelativeSource={RelativeSource AncestorType=ItemsControl,Mode=FindAncestor}}"
                                                CommandParameter="{Binding }"
                                                Margin="-2">
                                            <PathIcon Width="15" Height="15" Foreground="{DynamicResource SukiLowText}"
                                                      Data="{x:Static theme:Icons.CircleClose}" />
                                        </Button>
                                    </Panel>
                                </theme:GlassCard>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Panel>
        </DockPanel>
    </Grid>
</UserControl>