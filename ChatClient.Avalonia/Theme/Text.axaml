<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:suki="https://github.com/kikipoulet/SukiUI"
        xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia">
    <Design.PreviewWith>
        <TextBox Text="TextBox" Classes="Trans" Watermark="输入内容" />
    </Design.PreviewWith>

    <Styles.Resources>
        <MenuFlyout x:Key="DefaultTextBoxContextFlyout" Placement="Bottom">
            <MenuItem x:Name="TextBoxContextFlyoutCutItem"
                      Command="{Binding $parent[TextBox].Cut}"
                      Header="剪切"
                      InputGesture="{x:Static TextBox.CutGesture}"
                      IsEnabled="{Binding $parent[TextBox].CanCut}">
                <MenuItem.Icon>
                    <avalonia:MaterialIcon Kind="ContentCut">
                        <avalonia:MaterialIcon.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="-90" />
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </TransformGroup>
                        </avalonia:MaterialIcon.RenderTransform>
                    </avalonia:MaterialIcon>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="TextBoxContextFlyoutCopyItem"
                      Command="{Binding $parent[TextBox].Copy}"
                      Header="复制"
                      InputGesture="{x:Static TextBox.CopyGesture}"
                      IsEnabled="{Binding $parent[TextBox].CanCopy}">
                <MenuItem.Icon>
                    <avalonia:MaterialIcon Kind="ContentCopy" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="TextBoxContextFlyoutPasteItem"
                      Command="{Binding $parent[TextBox].Paste}"
                      Header="粘贴"
                      InputGesture="{x:Static TextBox.PasteGesture}"
                      IsEnabled="{Binding $parent[TextBox].CanPaste}">
                <MenuItem.Icon>
                    <avalonia:MaterialIcon Kind="ContentPaste" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="TextBoxContextFlyoutSelectAllItem"
                      Command="{Binding $parent[TextBox].SelectAll}"
                      Header="选择全部"
                      IsEnabled="{Binding $parent[TextBox].Text,Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                <MenuItem.Icon>
                    <avalonia:MaterialIcon Kind="CheckboxMarkedCircleOutline" />
                </MenuItem.Icon>
            </MenuItem>
        </MenuFlyout>
    </Styles.Resources>

    <Style Selector="TextBlock">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style Selector="TextBox">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style Selector="TextBox.Trans">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="{DynamicResource SukiControlBorderBrush}" />
        <Setter Property="CornerRadius" Value="{DynamicResource SmallCornerRadius}" />
        <Setter Property="Background" Value="{DynamicResource SukiBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SukiText}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SukiPrimaryColor75}" />
        <Setter Property="Padding" Value="6,8,5,6" />
        <Setter Property="ContextFlyout" Value="{StaticResource DefaultTextBoxContextFlyout}" />

        <Setter Property="Template">
            <ControlTemplate>

                <Border Background="#00000000">
                    <Border.Resources>
                        <suki:StringToDoubleConverter x:Key="StringToDoubleC" />
                    </Border.Resources>
                    <Panel>
                        <Border Name="borderbottom"
                                Margin="1,-1,1,-1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                Padding="{TemplateBinding Padding}"
                                ClipToBounds="True"
                                CornerRadius="1">
                            <Border.Transitions>
                                <Transitions>
                                    <BrushTransition Property="BorderBrush" Duration="0:0:0.2" />
                                </Transitions>
                            </Border.Transitions>


                            <DataValidationErrors>
                                <Grid ColumnDefinitions="Auto,*,Auto">
                                    <Panel>
                                        <TextBlock Margin="3,1,3,0"
                                                   FontSize="14"
                                                   Foreground="{DynamicResource SukiLowText}"
                                                   Text="{TemplateBinding suki:TextBoxExtensions.Prefix}" />
                                    </Panel>
                                    <TextBlock Grid.Column="1" Name="watermark"
                                               FontSize="{TemplateBinding FontSize}"
                                               IsVisible="{TemplateBinding Text,
                                                                                       Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                               Opacity="0.5"
                                               VerticalAlignment="Center"
                                               Text="{TemplateBinding Watermark}"
                                               TextAlignment="{TemplateBinding TextAlignment}"
                                               TextWrapping="{TemplateBinding TextWrapping}" />
                                    <TextPresenter Grid.Column="1" Name="PART_TextPresenter"
                                                   Margin="0,0,0,0"
                                                   CaretBrush="{DynamicResource SukiLowText}"
                                                   CaretIndex="{TemplateBinding CaretIndex}"
                                                   PasswordChar="{TemplateBinding PasswordChar}"
                                                   RevealPassword="{TemplateBinding RevealPassword}"
                                                   SelectionBrush="{TemplateBinding SelectionBrush}"
                                                   SelectionEnd="{TemplateBinding SelectionEnd}"
                                                   SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                                   SelectionStart="{TemplateBinding SelectionStart}"
                                                   Text="{TemplateBinding Text,
                                                                                      Mode=TwoWay}"
                                                   TextAlignment="{TemplateBinding TextAlignment}"
                                                   TextBlock.FontSize="{TemplateBinding FontSize}"
                                                   TextBlock.Foreground="{TemplateBinding Foreground}"
                                                   TextWrapping="{TemplateBinding TextWrapping}"
                                                   VerticalAlignment="Center" />
                                </Grid>
                            </DataValidationErrors>
                        </Border>
                    </Panel>
                </Border>

            </ControlTemplate>
        </Setter>
    </Style>

    <Style Selector="TextBox.Trans:pointerover /template/ Border#borderbottom">
        <Setter Property="BorderBrush" Value="{DynamicResource SukiBorderBrush}" />
    </Style>

    <Style Selector="TextBox.Trans:pointerover">
        <Setter Property="Cursor" Value="IBeam"></Setter>
    </Style>

    <Style Selector="TextBox.Trans:focus /template/ Border#borderbottom">
        <Setter Property="BorderBrush" Value="{DynamicResource SukiPrimaryColor}" />

    </Style>
    <Style Selector="TextBox.Trans /template/ DockPanel">
        <Setter Property="Cursor" Value="IBeam" />
    </Style>
    <Style Selector="TextBox.Trans:disabled">
        <Setter Property="Foreground" Value="{DynamicResource SukiDisabledText}" />
    </Style>


    <Style Selector="TextBox.Editable">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource SukiControlBorderBrush}" />
        <Setter Property="CornerRadius" Value="{DynamicResource SmallCornerRadius}" />
        <Setter Property="Background" Value="{DynamicResource SukiBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SukiText}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SukiPrimaryColor75}" />
        <Setter Property="ContextFlyout" Value="{StaticResource DefaultTextBoxContextFlyout}" />

        <Setter Property="Template">
            <ControlTemplate>

                <Border Padding="0" Margin="0">
                    <Border.Resources>
                        <suki:StringToDoubleConverter x:Key="StringToDoubleC" />
                    </Border.Resources>
                    <Panel>
                        <suki:GlassCard Name="border"
                                        Padding="0"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Classes="Discrete"
                                        CornerRadius="{TemplateBinding CornerRadius}">
                            <suki:GlassCard.Transitions>
                                <Transitions>
                                    <BrushTransition Property="BorderBrush" Duration="0:0:0.2" />
                                </Transitions>
                            </suki:GlassCard.Transitions>
                        </suki:GlassCard>
                        <Border Name="borderbottom"
                                Margin="1,-1,1,-1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                ClipToBounds="True"
                                CornerRadius="1">
                            <Border.Transitions>
                                <Transitions>
                                    <BrushTransition Property="BorderBrush" Duration="0:0:0.2" />
                                </Transitions>
                            </Border.Transitions>


                            <DockPanel Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                                <TextBlock Name="floatingWatermark"
                                           DockPanel.Dock="Top"
                                           Text="{TemplateBinding Watermark}">
                                    <TextBlock.IsVisible>
                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                            <Binding Path="UseFloatingWatermark"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Converter="{x:Static StringConverters.IsNotNullOrEmpty}"
                                                     Path="Text"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </TextBlock.IsVisible>
                                </TextBlock>

                                <DataValidationErrors>
                                    <ScrollViewer Grid.Column="1"
                                                  HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                                  VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
                                        <Panel>
                                            <TextBlock Name="watermark"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       IsVisible="{TemplateBinding Text,
                                                                                       Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                                       Opacity="0.5"
                                                       Text="{TemplateBinding Watermark}"
                                                       TextAlignment="{TemplateBinding TextAlignment}"
                                                       TextWrapping="{TemplateBinding TextWrapping}" />
                                            <TextPresenter Name="PART_TextPresenter"
                                                           Margin="0,0,0,0"
                                                           CaretBrush="{DynamicResource SukiLowText}"
                                                           CaretIndex="{TemplateBinding CaretIndex}"
                                                           PasswordChar="{TemplateBinding PasswordChar}"
                                                           RevealPassword="{TemplateBinding RevealPassword}"
                                                           SelectionBrush="{TemplateBinding SelectionBrush}"
                                                           SelectionEnd="{TemplateBinding SelectionEnd}"
                                                           SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                                           SelectionStart="{TemplateBinding SelectionStart}"
                                                           Text="{TemplateBinding Text,
                                                                                      Mode=TwoWay}"
                                                           TextAlignment="{TemplateBinding TextAlignment}"
                                                           TextBlock.FontSize="{TemplateBinding FontSize}"
                                                           TextBlock.Foreground="{TemplateBinding Foreground}"
                                                           TextWrapping="{TemplateBinding TextWrapping}" />
                                        </Panel>
                                    </ScrollViewer>
                                </DataValidationErrors>

                            </DockPanel>
                        </Border>
                    </Panel>
                </Border>

            </ControlTemplate>
        </Setter>
    </Style>
</Styles>