// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/ChatRelationProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ChatServer.Common.Protobuf {

  /// <summary>Holder for reflection information generated from Proto/ChatRelationProtocol.proto</summary>
  public static partial class ChatRelationProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/ChatRelationProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChatRelationProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBQcm90by9DaGF0UmVsYXRpb25Qcm90b2NvbC5wcm90bxIaQ2hhdFNlcnZl",
            "ci5Db21tb24uUHJvdG9idWYaHFByb3RvL0NoYXRCYXNlUHJvdG9jb2wucHJv",
            "dG8ieAoXRnJpZW5kUmVxdWVzdEZyb21DbGllbnQSEgoKdXNlckZyb21JZBgB",
            "IAEoCRIUCgx1c2VyVGFyZ2V0SWQYAiABKAkSDQoFZ3JvdXAYAyABKAkSEwoL",
            "cmVxdWVzdFRpbWUYBCABKAkSDwoHbWVzc2FnZRgFIAEoCSLNAQofRnJpZW5k",
            "UmVxdWVzdEZyb21DbGllbnRSZXNwb25zZRI8CghyZXNwb25zZRgBIAEoCzIq",
            "LkNoYXRTZXJ2ZXIuQ29tbW9uLlByb3RvYnVmLkNvbW1vblJlc3BvbnNlEhEK",
            "CXJlcXVlc3RJZBgCIAEoBRJECgdyZXF1ZXN0GAMgASgLMjMuQ2hhdFNlcnZl",
            "ci5Db21tb24uUHJvdG9idWYuRnJpZW5kUmVxdWVzdEZyb21DbGllbnQSEwoL",
            "cmVxdWVzdFRpbWUYBCABKAkifAoXRnJpZW5kUmVxdWVzdEZyb21TZXJ2ZXIS",
            "EQoJcmVxdWVzdElkGAEgASgFEhIKCnVzZXJGcm9tSWQYAiABKAkSFAoMdXNl",
            "clRhcmdldElkGAMgASgJEhMKC3JlcXVlc3RUaW1lGAQgASgJEg8KB21lc3Nh",
            "Z2UYBSABKAkiYgoYRnJpZW5kUmVzcG9uc2VGcm9tQ2xpZW50EhEKCXJlcXVl",
            "c3RJZBgBIAEoBRIOCgZhY2NlcHQYAiABKAgSDQoFZ3JvdXAYAyABKAkSFAoM",
            "cmVzcG9uc2VUaW1lGAQgASgJImAKIEZyaWVuZFJlc3BvbnNlRnJvbUNsaWVu",
            "dFJlc3BvbnNlEjwKCHJlc3BvbnNlGAEgASgLMiouQ2hhdFNlcnZlci5Db21t",
            "b24uUHJvdG9idWYuQ29tbW9uUmVzcG9uc2UiUwoYRnJpZW5kUmVzcG9uc2VG",
            "cm9tU2VydmVyEhEKCXJlcXVlc3RJZBgBIAEoBRIOCgZhY2NlcHQYAiABKAgS",
            "FAoMcmVzcG9uc2VUaW1lGAMgASgJIqQBChBOZXdGcmllbmRNZXNzYWdlEg4K",
            "BnVzZXJJZBgBIAEoCRIQCghmcmluZWRJZBgCIAEoCRIQCghncm91cGluZxgD",
            "IAEoCRIUCgxyZWxhdGlvblRpbWUYBCABKAkSDgoGcmVtYXJrGAUgASgJEhMK",
            "C2NhbnREaXN0dXJiGAYgASgIEg0KBWlzVG9wGAcgASgIEhIKCmxhc3RDaGF0",
            "SWQYCCABKAUihQEKG1VwZGF0ZUZyaWVuZFJlbGF0aW9uUmVxdWVzdBIOCgZ1",
            "c2VySWQYASABKAkSEAoIZnJpZW5kSWQYAiABKAkSEAoIZ3JvdXBpbmcYAyAB",
            "KAkSDgoGcmVtYXJrGAQgASgJEhMKC2NhbnREaXN0dXJiGAUgASgIEg0KBWlz",
            "VG9wGAYgASgIInYKFFVwZGF0ZUZyaWVuZFJlbGF0aW9uEjwKCHJlc3BvbnNl",
            "GAEgASgLMiouQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYuQ29tbW9uUmVz",
            "cG9uc2USDgoGdXNlcklkGAIgASgJEhAKCGZyaWVuZElkGAMgASgJIjcKE0Rl",
            "bGV0ZUZyaWVuZFJlcXVlc3QSDgoGdXNlcklkGAEgASgJEhAKCGZyaWVuZElk",
            "GAIgASgJIpUBChNEZWxldGVGcmllbmRNZXNzYWdlEjwKCHJlc3BvbnNlGAEg",
            "ASgLMiouQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYuQ29tbW9uUmVzcG9u",
            "c2USDgoGdXNlcklkGAIgASgJEhAKCGZyaWVuZElkGAMgASgJEhAKCGRlbGV0",
            "ZUlkGAQgASgFEgwKBHRpbWUYBSABKAkiVwoTRnJpZW5kRGVsZXRlTWVzc2Fn",
            "ZRIQCghkZWxldGVJZBgBIAEoBRIOCgZ1c2VySWQYAiABKAkSEAoIZnJpZW5k",
            "SWQYAyABKAkSDAoEdGltZRgEIAEoCSI2ChJDcmVhdGVHcm91cFJlcXVlc3QS",
            "DgoGdXNlcklkGAEgASgJEhAKCGZyaWVuZElkGAMgAygJIoUBChNDcmVhdGVH",
            "cm91cFJlc3BvbnNlEjwKCHJlc3BvbnNlGAEgASgLMiouQ2hhdFNlcnZlci5D",
            "b21tb24uUHJvdG9idWYuQ29tbW9uUmVzcG9uc2USDwoHZ3JvdXBJZBgCIAEo",
            "CRIMCgR0aW1lGAMgASgJEhEKCWdyb3VwTmFtZRgEIAEoCSJ9ChBQdWxsR3Jv",
            "dXBNZXNzYWdlEg8KB2dyb3VwSWQYASABKAkSEgoKdXNlcklkRnJvbRgCIAEo",
            "CRIUCgx1c2VySWRUYXJnZXQYAyABKAkSDgoGc3RhdHVzGAQgASgFEhAKCGdy",
            "b3VwaW5nGAUgASgJEgwKBHRpbWUYBiABKAkiTgoaSm9pbkdyb3VwUmVxdWVz",
            "dEZyb21DbGllbnQSDgoGdXNlcklkGAEgASgJEg8KB2dyb3VwSWQYAiABKAkS",
            "DwoHbWVzc2FnZRgDIAEoCSKUAQoiSm9pbkdyb3VwUmVxdWVzdFJlc3BvbnNl",
            "RnJvbVNlcnZlchI8CghyZXNwb25zZRgBIAEoCzIqLkNoYXRTZXJ2ZXIuQ29t",
            "bW9uLlByb3RvYnVmLkNvbW1vblJlc3BvbnNlEg8KB2dyb3VwSWQYAiABKAkS",
            "EQoJcmVxdWVzdElkGAMgASgFEgwKBHRpbWUYBCABKAkibwoaSm9pbkdyb3Vw",
            "UmVxdWVzdEZyb21TZXJ2ZXISEQoJcmVxdWVzdElkGAEgASgFEg4KBnVzZXJJ",
            "ZBgCIAEoCRIPCgdncm91cElkGAMgASgJEgwKBHRpbWUYBCABKAkSDwoHbWVz",
            "c2FnZRgFIAEoCSJQChtKb2luR3JvdXBSZXNwb25zZUZyb21DbGllbnQSEQoJ",
            "cmVxdWVzdElkGAEgASgFEg4KBnVzZXJJZBgCIAEoCRIOCgZhY2NlcHQYAyAB",
            "KAgipAEKI0pvaW5Hcm91cFJlc3BvbnNlUmVzcG9uc2VGcm9tU2VydmVyEjwK",
            "CHJlc3BvbnNlGAEgASgLMiouQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYu",
            "Q29tbW9uUmVzcG9uc2USEQoJcmVxdWVzdElkGAIgASgFEg4KBnVzZXJJZBgD",
            "IAEoCRIMCgR0aW1lGAQgASgJEg4KBmFjY2VwdBgFIAEoCCJ4ChtKb2luR3Jv",
            "dXBSZXNwb25zZUZyb21TZXJ2ZXISEQoJcmVxdWVzdElkGAEgASgFEhIKCnVz",
            "ZXJJZEZyb20YAiABKAkSFAoMdXNlcklkVGFyZ2V0GAMgASgJEg4KBmFjY2Vw",
            "dBgEIAEoCBIMCgR0aW1lGAUgASgJIkUKFE5ld01lbWJlckpvaW5NZXNzYWdl",
            "Eg4KBnVzZXJJZBgBIAEoCRIPCgdncm91cElkGAIgASgJEgwKBHRpbWUYAyAB",
            "KAkilQEKGlVwZGF0ZUdyb3VwUmVsYXRpb25SZXF1ZXN0Eg4KBnVzZXJJZBgB",
            "IAEoCRIPCgdncm91cElkGAIgASgJEhAKCGdyb3VwaW5nGAMgASgJEhAKCG5p",
            "Y2tOYW1lGAQgASgJEg4KBnJlbWFyaxgFIAEoCRITCgtjYW50RGlzdHVyYhgG",
            "IAEoCBINCgVpc1RvcBgHIAEoCCJ0ChNVcGRhdGVHcm91cFJlbGF0aW9uEjwK",
            "CHJlc3BvbnNlGAEgASgLMiouQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYu",
            "Q29tbW9uUmVzcG9uc2USDgoGdXNlcklkGAIgASgJEg8KB2dyb3VwSWQYAyAB",
            "KAkiMwoQUXVpdEdyb3VwUmVxdWVzdBIOCgZ1c2VySWQYASABKAkSDwoHZ3Jv",
            "dXBJZBgCIAEoCSKPAQoQUXVpdEdyb3VwTWVzc2FnZRI8CghyZXNwb25zZRgB",
            "IAEoCzIqLkNoYXRTZXJ2ZXIuQ29tbW9uLlByb3RvYnVmLkNvbW1vblJlc3Bv",
            "bnNlEg4KBnVzZXJJZBgCIAEoCRIPCgdncm91cElkGAMgASgJEg4KBnF1aXRJ",
            "ZBgEIAEoBRIMCgR0aW1lGAUgASgJIjYKE0Rpc2JhbmRHcm91cFJlcXVlc3QS",
            "DgoGdXNlcklkGAEgASgJEg8KB2dyb3VwSWQYAiABKAkipwEKE0Rpc2JhbmRH",
            "cm91cE1lc3NhZ2USPAoIcmVzcG9uc2UYASABKAsyKi5DaGF0U2VydmVyLkNv",
            "bW1vbi5Qcm90b2J1Zi5Db21tb25SZXNwb25zZRIOCgZ1c2VySWQYAiABKAkS",
            "DwoHZ3JvdXBJZBgDIAEoCRIQCghtZW1iZXJJZBgEIAEoCRIRCglkaXNCYW5k",
            "SWQYBSABKAUSDAoEdGltZRgGIAEoCSJIChNSZW1vdmVNZW1iZXJSZXF1ZXN0",
            "Eg4KBnVzZXJJZBgBIAEoCRIPCgdncm91cElkGAIgASgJEhAKCG1lbWJlcklk",
            "GAMgASgJIqYBChNSZW1vdmVNZW1iZXJNZXNzYWdlEjwKCHJlc3BvbnNlGAEg",
            "ASgLMiouQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYuQ29tbW9uUmVzcG9u",
            "c2USDgoGdXNlcklkGAIgASgJEg8KB2dyb3VwSWQYAyABKAkSEAoIbWVtYmVy",
            "SWQYBCABKAkSEAoIcmVtb3ZlSWQYBSABKAUSDAoEdGltZRgGIAEoCSJ6ChJH",
            "cm91cERlbGV0ZU1lc3NhZ2USEAoIZGVsZXRlSWQYASABKAUSDwoHZ3JvdXBJ",
            "ZBgCIAEoCRIRCglvcGVyYXRlSWQYAyABKAkSEAoIbWVtYmVySWQYBCABKAkS",
            "DAoEdGltZRgFIAEoCRIOCgZtZXRob2QYBiABKAUiTQoaR3JvdXBNZW1lYmVy",
            "UmVtb3ZlZE1lc3NhZ2USDwoHZ3JvdXBJZBgBIAEoCRIQCghtZW1iZXJJZBgC",
            "IAEoCRIMCgR0aW1lGAMgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ChatServer.Common.Protobuf.ChatBaseProtocolReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendRequestFromClient), global::ChatServer.Common.Protobuf.FriendRequestFromClient.Parser, new[]{ "UserFromId", "UserTargetId", "Group", "RequestTime", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendRequestFromClientResponse), global::ChatServer.Common.Protobuf.FriendRequestFromClientResponse.Parser, new[]{ "Response", "RequestId", "Request", "RequestTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendRequestFromServer), global::ChatServer.Common.Protobuf.FriendRequestFromServer.Parser, new[]{ "RequestId", "UserFromId", "UserTargetId", "RequestTime", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendResponseFromClient), global::ChatServer.Common.Protobuf.FriendResponseFromClient.Parser, new[]{ "RequestId", "Accept", "Group", "ResponseTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendResponseFromClientResponse), global::ChatServer.Common.Protobuf.FriendResponseFromClientResponse.Parser, new[]{ "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendResponseFromServer), global::ChatServer.Common.Protobuf.FriendResponseFromServer.Parser, new[]{ "RequestId", "Accept", "ResponseTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.NewFriendMessage), global::ChatServer.Common.Protobuf.NewFriendMessage.Parser, new[]{ "UserId", "FrinedId", "Grouping", "RelationTime", "Remark", "CantDisturb", "IsTop", "LastChatId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateFriendRelationRequest), global::ChatServer.Common.Protobuf.UpdateFriendRelationRequest.Parser, new[]{ "UserId", "FriendId", "Grouping", "Remark", "CantDisturb", "IsTop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateFriendRelation), global::ChatServer.Common.Protobuf.UpdateFriendRelation.Parser, new[]{ "Response", "UserId", "FriendId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.DeleteFriendRequest), global::ChatServer.Common.Protobuf.DeleteFriendRequest.Parser, new[]{ "UserId", "FriendId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.DeleteFriendMessage), global::ChatServer.Common.Protobuf.DeleteFriendMessage.Parser, new[]{ "Response", "UserId", "FriendId", "DeleteId", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendDeleteMessage), global::ChatServer.Common.Protobuf.FriendDeleteMessage.Parser, new[]{ "DeleteId", "UserId", "FriendId", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.CreateGroupRequest), global::ChatServer.Common.Protobuf.CreateGroupRequest.Parser, new[]{ "UserId", "FriendId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.CreateGroupResponse), global::ChatServer.Common.Protobuf.CreateGroupResponse.Parser, new[]{ "Response", "GroupId", "Time", "GroupName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.PullGroupMessage), global::ChatServer.Common.Protobuf.PullGroupMessage.Parser, new[]{ "GroupId", "UserIdFrom", "UserIdTarget", "Status", "Grouping", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.JoinGroupRequestFromClient), global::ChatServer.Common.Protobuf.JoinGroupRequestFromClient.Parser, new[]{ "UserId", "GroupId", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.JoinGroupRequestResponseFromServer), global::ChatServer.Common.Protobuf.JoinGroupRequestResponseFromServer.Parser, new[]{ "Response", "GroupId", "RequestId", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.JoinGroupRequestFromServer), global::ChatServer.Common.Protobuf.JoinGroupRequestFromServer.Parser, new[]{ "RequestId", "UserId", "GroupId", "Time", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.JoinGroupResponseFromClient), global::ChatServer.Common.Protobuf.JoinGroupResponseFromClient.Parser, new[]{ "RequestId", "UserId", "Accept" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.JoinGroupResponseResponseFromServer), global::ChatServer.Common.Protobuf.JoinGroupResponseResponseFromServer.Parser, new[]{ "Response", "RequestId", "UserId", "Time", "Accept" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.JoinGroupResponseFromServer), global::ChatServer.Common.Protobuf.JoinGroupResponseFromServer.Parser, new[]{ "RequestId", "UserIdFrom", "UserIdTarget", "Accept", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.NewMemberJoinMessage), global::ChatServer.Common.Protobuf.NewMemberJoinMessage.Parser, new[]{ "UserId", "GroupId", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateGroupRelationRequest), global::ChatServer.Common.Protobuf.UpdateGroupRelationRequest.Parser, new[]{ "UserId", "GroupId", "Grouping", "NickName", "Remark", "CantDisturb", "IsTop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateGroupRelation), global::ChatServer.Common.Protobuf.UpdateGroupRelation.Parser, new[]{ "Response", "UserId", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.QuitGroupRequest), global::ChatServer.Common.Protobuf.QuitGroupRequest.Parser, new[]{ "UserId", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.QuitGroupMessage), global::ChatServer.Common.Protobuf.QuitGroupMessage.Parser, new[]{ "Response", "UserId", "GroupId", "QuitId", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.DisbandGroupRequest), global::ChatServer.Common.Protobuf.DisbandGroupRequest.Parser, new[]{ "UserId", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.DisbandGroupMessage), global::ChatServer.Common.Protobuf.DisbandGroupMessage.Parser, new[]{ "Response", "UserId", "GroupId", "MemberId", "DisBandId", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.RemoveMemberRequest), global::ChatServer.Common.Protobuf.RemoveMemberRequest.Parser, new[]{ "UserId", "GroupId", "MemberId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.RemoveMemberMessage), global::ChatServer.Common.Protobuf.RemoveMemberMessage.Parser, new[]{ "Response", "UserId", "GroupId", "MemberId", "RemoveId", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupDeleteMessage), global::ChatServer.Common.Protobuf.GroupDeleteMessage.Parser, new[]{ "DeleteId", "GroupId", "OperateId", "MemberId", "Time", "Method" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupMemeberRemovedMessage), global::ChatServer.Common.Protobuf.GroupMemeberRemovedMessage.Parser, new[]{ "GroupId", "MemberId", "Time" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户发送 好友请求
  /// </summary>
  public sealed partial class FriendRequestFromClient : pb::IMessage<FriendRequestFromClient> {
    private static readonly pb::MessageParser<FriendRequestFromClient> _parser = new pb::MessageParser<FriendRequestFromClient>(() => new FriendRequestFromClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendRequestFromClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestFromClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestFromClient(FriendRequestFromClient other) : this() {
      userFromId_ = other.userFromId_;
      userTargetId_ = other.userTargetId_;
      group_ = other.group_;
      requestTime_ = other.requestTime_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestFromClient Clone() {
      return new FriendRequestFromClient(this);
    }

    /// <summary>Field number for the "userFromId" field.</summary>
    public const int UserFromIdFieldNumber = 1;
    private string userFromId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserFromId {
      get { return userFromId_; }
      set {
        userFromId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userTargetId" field.</summary>
    public const int UserTargetIdFieldNumber = 2;
    private string userTargetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserTargetId {
      get { return userTargetId_; }
      set {
        userTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 3;
    private string group_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Group {
      get { return group_; }
      set {
        group_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requestTime" field.</summary>
    public const int RequestTimeFieldNumber = 4;
    private string requestTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestTime {
      get { return requestTime_; }
      set {
        requestTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendRequestFromClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendRequestFromClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserFromId != other.UserFromId) return false;
      if (UserTargetId != other.UserTargetId) return false;
      if (Group != other.Group) return false;
      if (RequestTime != other.RequestTime) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserFromId.Length != 0) hash ^= UserFromId.GetHashCode();
      if (UserTargetId.Length != 0) hash ^= UserTargetId.GetHashCode();
      if (Group.Length != 0) hash ^= Group.GetHashCode();
      if (RequestTime.Length != 0) hash ^= RequestTime.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserFromId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserTargetId);
      }
      if (Group.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Group);
      }
      if (RequestTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestTime);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserFromId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTargetId);
      }
      if (Group.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Group);
      }
      if (RequestTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestTime);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendRequestFromClient other) {
      if (other == null) {
        return;
      }
      if (other.UserFromId.Length != 0) {
        UserFromId = other.UserFromId;
      }
      if (other.UserTargetId.Length != 0) {
        UserTargetId = other.UserTargetId;
      }
      if (other.Group.Length != 0) {
        Group = other.Group;
      }
      if (other.RequestTime.Length != 0) {
        RequestTime = other.RequestTime;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserFromId = input.ReadString();
            break;
          }
          case 18: {
            UserTargetId = input.ReadString();
            break;
          }
          case 26: {
            Group = input.ReadString();
            break;
          }
          case 34: {
            RequestTime = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FriendRequestFromClientResponse : pb::IMessage<FriendRequestFromClientResponse> {
    private static readonly pb::MessageParser<FriendRequestFromClientResponse> _parser = new pb::MessageParser<FriendRequestFromClientResponse>(() => new FriendRequestFromClientResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendRequestFromClientResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestFromClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestFromClientResponse(FriendRequestFromClientResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      requestId_ = other.requestId_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      requestTime_ = other.requestTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestFromClientResponse Clone() {
      return new FriendRequestFromClientResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private int requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 3;
    private global::ChatServer.Common.Protobuf.FriendRequestFromClient request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.FriendRequestFromClient Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "requestTime" field.</summary>
    public const int RequestTimeFieldNumber = 4;
    private string requestTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestTime {
      get { return requestTime_; }
      set {
        requestTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendRequestFromClientResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendRequestFromClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (RequestTime != other.RequestTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (RequestTime.Length != 0) hash ^= RequestTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (RequestId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RequestId);
      }
      if (request_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Request);
      }
      if (RequestTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (RequestTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendRequestFromClientResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::ChatServer.Common.Protobuf.FriendRequestFromClient();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.RequestTime.Length != 0) {
        RequestTime = other.RequestTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 16: {
            RequestId = input.ReadInt32();
            break;
          }
          case 26: {
            if (request_ == null) {
              Request = new global::ChatServer.Common.Protobuf.FriendRequestFromClient();
            }
            input.ReadMessage(Request);
            break;
          }
          case 34: {
            RequestTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器发送 转发 好友请求
  /// </summary>
  public sealed partial class FriendRequestFromServer : pb::IMessage<FriendRequestFromServer> {
    private static readonly pb::MessageParser<FriendRequestFromServer> _parser = new pb::MessageParser<FriendRequestFromServer>(() => new FriendRequestFromServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendRequestFromServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestFromServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestFromServer(FriendRequestFromServer other) : this() {
      requestId_ = other.requestId_;
      userFromId_ = other.userFromId_;
      userTargetId_ = other.userTargetId_;
      requestTime_ = other.requestTime_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestFromServer Clone() {
      return new FriendRequestFromServer(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private int requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "userFromId" field.</summary>
    public const int UserFromIdFieldNumber = 2;
    private string userFromId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserFromId {
      get { return userFromId_; }
      set {
        userFromId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userTargetId" field.</summary>
    public const int UserTargetIdFieldNumber = 3;
    private string userTargetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserTargetId {
      get { return userTargetId_; }
      set {
        userTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requestTime" field.</summary>
    public const int RequestTimeFieldNumber = 4;
    private string requestTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestTime {
      get { return requestTime_; }
      set {
        requestTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendRequestFromServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendRequestFromServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (UserFromId != other.UserFromId) return false;
      if (UserTargetId != other.UserTargetId) return false;
      if (RequestTime != other.RequestTime) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (UserFromId.Length != 0) hash ^= UserFromId.GetHashCode();
      if (UserTargetId.Length != 0) hash ^= UserTargetId.GetHashCode();
      if (RequestTime.Length != 0) hash ^= RequestTime.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequestId);
      }
      if (UserFromId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserTargetId);
      }
      if (RequestTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestTime);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (UserFromId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTargetId);
      }
      if (RequestTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestTime);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendRequestFromServer other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.UserFromId.Length != 0) {
        UserFromId = other.UserFromId;
      }
      if (other.UserTargetId.Length != 0) {
        UserTargetId = other.UserTargetId;
      }
      if (other.RequestTime.Length != 0) {
        RequestTime = other.RequestTime;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadInt32();
            break;
          }
          case 18: {
            UserFromId = input.ReadString();
            break;
          }
          case 26: {
            UserTargetId = input.ReadString();
            break;
          }
          case 34: {
            RequestTime = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户发送 好友请求 结果
  /// </summary>
  public sealed partial class FriendResponseFromClient : pb::IMessage<FriendResponseFromClient> {
    private static readonly pb::MessageParser<FriendResponseFromClient> _parser = new pb::MessageParser<FriendResponseFromClient>(() => new FriendResponseFromClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendResponseFromClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendResponseFromClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendResponseFromClient(FriendResponseFromClient other) : this() {
      requestId_ = other.requestId_;
      accept_ = other.accept_;
      group_ = other.group_;
      responseTime_ = other.responseTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendResponseFromClient Clone() {
      return new FriendResponseFromClient(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private int requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 2;
    private bool accept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accept {
      get { return accept_; }
      set {
        accept_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 3;
    private string group_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Group {
      get { return group_; }
      set {
        group_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "responseTime" field.</summary>
    public const int ResponseTimeFieldNumber = 4;
    private string responseTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseTime {
      get { return responseTime_; }
      set {
        responseTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendResponseFromClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendResponseFromClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (Accept != other.Accept) return false;
      if (Group != other.Group) return false;
      if (ResponseTime != other.ResponseTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (Accept != false) hash ^= Accept.GetHashCode();
      if (Group.Length != 0) hash ^= Group.GetHashCode();
      if (ResponseTime.Length != 0) hash ^= ResponseTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequestId);
      }
      if (Accept != false) {
        output.WriteRawTag(16);
        output.WriteBool(Accept);
      }
      if (Group.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Group);
      }
      if (ResponseTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResponseTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (Accept != false) {
        size += 1 + 1;
      }
      if (Group.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Group);
      }
      if (ResponseTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendResponseFromClient other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.Accept != false) {
        Accept = other.Accept;
      }
      if (other.Group.Length != 0) {
        Group = other.Group;
      }
      if (other.ResponseTime.Length != 0) {
        ResponseTime = other.ResponseTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadInt32();
            break;
          }
          case 16: {
            Accept = input.ReadBool();
            break;
          }
          case 26: {
            Group = input.ReadString();
            break;
          }
          case 34: {
            ResponseTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户发送 好友请求 结果
  /// </summary>
  public sealed partial class FriendResponseFromClientResponse : pb::IMessage<FriendResponseFromClientResponse> {
    private static readonly pb::MessageParser<FriendResponseFromClientResponse> _parser = new pb::MessageParser<FriendResponseFromClientResponse>(() => new FriendResponseFromClientResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendResponseFromClientResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendResponseFromClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendResponseFromClientResponse(FriendResponseFromClientResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendResponseFromClientResponse Clone() {
      return new FriendResponseFromClientResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendResponseFromClientResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendResponseFromClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendResponseFromClientResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器发送 好友请求 结果
  /// </summary>
  public sealed partial class FriendResponseFromServer : pb::IMessage<FriendResponseFromServer> {
    private static readonly pb::MessageParser<FriendResponseFromServer> _parser = new pb::MessageParser<FriendResponseFromServer>(() => new FriendResponseFromServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendResponseFromServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendResponseFromServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendResponseFromServer(FriendResponseFromServer other) : this() {
      requestId_ = other.requestId_;
      accept_ = other.accept_;
      responseTime_ = other.responseTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendResponseFromServer Clone() {
      return new FriendResponseFromServer(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private int requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 2;
    private bool accept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accept {
      get { return accept_; }
      set {
        accept_ = value;
      }
    }

    /// <summary>Field number for the "responseTime" field.</summary>
    public const int ResponseTimeFieldNumber = 3;
    private string responseTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseTime {
      get { return responseTime_; }
      set {
        responseTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendResponseFromServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendResponseFromServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (Accept != other.Accept) return false;
      if (ResponseTime != other.ResponseTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (Accept != false) hash ^= Accept.GetHashCode();
      if (ResponseTime.Length != 0) hash ^= ResponseTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequestId);
      }
      if (Accept != false) {
        output.WriteRawTag(16);
        output.WriteBool(Accept);
      }
      if (ResponseTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResponseTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (Accept != false) {
        size += 1 + 1;
      }
      if (ResponseTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendResponseFromServer other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.Accept != false) {
        Accept = other.Accept;
      }
      if (other.ResponseTime.Length != 0) {
        ResponseTime = other.ResponseTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadInt32();
            break;
          }
          case 16: {
            Accept = input.ReadBool();
            break;
          }
          case 26: {
            ResponseTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器发送 通知双方 好友添加成功
  /// </summary>
  public sealed partial class NewFriendMessage : pb::IMessage<NewFriendMessage> {
    private static readonly pb::MessageParser<NewFriendMessage> _parser = new pb::MessageParser<NewFriendMessage>(() => new NewFriendMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewFriendMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewFriendMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewFriendMessage(NewFriendMessage other) : this() {
      userId_ = other.userId_;
      frinedId_ = other.frinedId_;
      grouping_ = other.grouping_;
      relationTime_ = other.relationTime_;
      remark_ = other.remark_;
      cantDisturb_ = other.cantDisturb_;
      isTop_ = other.isTop_;
      lastChatId_ = other.lastChatId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewFriendMessage Clone() {
      return new NewFriendMessage(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frinedId" field.</summary>
    public const int FrinedIdFieldNumber = 2;
    private string frinedId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FrinedId {
      get { return frinedId_; }
      set {
        frinedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "grouping" field.</summary>
    public const int GroupingFieldNumber = 3;
    private string grouping_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Grouping {
      get { return grouping_; }
      set {
        grouping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relationTime" field.</summary>
    public const int RelationTimeFieldNumber = 4;
    private string relationTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelationTime {
      get { return relationTime_; }
      set {
        relationTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 5;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cantDisturb" field.</summary>
    public const int CantDisturbFieldNumber = 6;
    private bool cantDisturb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CantDisturb {
      get { return cantDisturb_; }
      set {
        cantDisturb_ = value;
      }
    }

    /// <summary>Field number for the "isTop" field.</summary>
    public const int IsTopFieldNumber = 7;
    private bool isTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTop {
      get { return isTop_; }
      set {
        isTop_ = value;
      }
    }

    /// <summary>Field number for the "lastChatId" field.</summary>
    public const int LastChatIdFieldNumber = 8;
    private int lastChatId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastChatId {
      get { return lastChatId_; }
      set {
        lastChatId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewFriendMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewFriendMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (FrinedId != other.FrinedId) return false;
      if (Grouping != other.Grouping) return false;
      if (RelationTime != other.RelationTime) return false;
      if (Remark != other.Remark) return false;
      if (CantDisturb != other.CantDisturb) return false;
      if (IsTop != other.IsTop) return false;
      if (LastChatId != other.LastChatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (FrinedId.Length != 0) hash ^= FrinedId.GetHashCode();
      if (Grouping.Length != 0) hash ^= Grouping.GetHashCode();
      if (RelationTime.Length != 0) hash ^= RelationTime.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (CantDisturb != false) hash ^= CantDisturb.GetHashCode();
      if (IsTop != false) hash ^= IsTop.GetHashCode();
      if (LastChatId != 0) hash ^= LastChatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (FrinedId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FrinedId);
      }
      if (Grouping.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Grouping);
      }
      if (RelationTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RelationTime);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Remark);
      }
      if (CantDisturb != false) {
        output.WriteRawTag(48);
        output.WriteBool(CantDisturb);
      }
      if (IsTop != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsTop);
      }
      if (LastChatId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(LastChatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (FrinedId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrinedId);
      }
      if (Grouping.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Grouping);
      }
      if (RelationTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelationTime);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (CantDisturb != false) {
        size += 1 + 1;
      }
      if (IsTop != false) {
        size += 1 + 1;
      }
      if (LastChatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastChatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewFriendMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.FrinedId.Length != 0) {
        FrinedId = other.FrinedId;
      }
      if (other.Grouping.Length != 0) {
        Grouping = other.Grouping;
      }
      if (other.RelationTime.Length != 0) {
        RelationTime = other.RelationTime;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.CantDisturb != false) {
        CantDisturb = other.CantDisturb;
      }
      if (other.IsTop != false) {
        IsTop = other.IsTop;
      }
      if (other.LastChatId != 0) {
        LastChatId = other.LastChatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            FrinedId = input.ReadString();
            break;
          }
          case 26: {
            Grouping = input.ReadString();
            break;
          }
          case 34: {
            RelationTime = input.ReadString();
            break;
          }
          case 42: {
            Remark = input.ReadString();
            break;
          }
          case 48: {
            CantDisturb = input.ReadBool();
            break;
          }
          case 56: {
            IsTop = input.ReadBool();
            break;
          }
          case 64: {
            LastChatId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 更新好友关系信息请求 
  /// </summary>
  public sealed partial class UpdateFriendRelationRequest : pb::IMessage<UpdateFriendRelationRequest> {
    private static readonly pb::MessageParser<UpdateFriendRelationRequest> _parser = new pb::MessageParser<UpdateFriendRelationRequest>(() => new UpdateFriendRelationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFriendRelationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendRelationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendRelationRequest(UpdateFriendRelationRequest other) : this() {
      userId_ = other.userId_;
      friendId_ = other.friendId_;
      grouping_ = other.grouping_;
      remark_ = other.remark_;
      cantDisturb_ = other.cantDisturb_;
      isTop_ = other.isTop_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendRelationRequest Clone() {
      return new UpdateFriendRelationRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 2;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "grouping" field.</summary>
    public const int GroupingFieldNumber = 3;
    private string grouping_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Grouping {
      get { return grouping_; }
      set {
        grouping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 4;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cantDisturb" field.</summary>
    public const int CantDisturbFieldNumber = 5;
    private bool cantDisturb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CantDisturb {
      get { return cantDisturb_; }
      set {
        cantDisturb_ = value;
      }
    }

    /// <summary>Field number for the "isTop" field.</summary>
    public const int IsTopFieldNumber = 6;
    private bool isTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTop {
      get { return isTop_; }
      set {
        isTop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFriendRelationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFriendRelationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (FriendId != other.FriendId) return false;
      if (Grouping != other.Grouping) return false;
      if (Remark != other.Remark) return false;
      if (CantDisturb != other.CantDisturb) return false;
      if (IsTop != other.IsTop) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (Grouping.Length != 0) hash ^= Grouping.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (CantDisturb != false) hash ^= CantDisturb.GetHashCode();
      if (IsTop != false) hash ^= IsTop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (FriendId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendId);
      }
      if (Grouping.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Grouping);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Remark);
      }
      if (CantDisturb != false) {
        output.WriteRawTag(40);
        output.WriteBool(CantDisturb);
      }
      if (IsTop != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsTop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (Grouping.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Grouping);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (CantDisturb != false) {
        size += 1 + 1;
      }
      if (IsTop != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFriendRelationRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      if (other.Grouping.Length != 0) {
        Grouping = other.Grouping;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.CantDisturb != false) {
        CantDisturb = other.CantDisturb;
      }
      if (other.IsTop != false) {
        IsTop = other.IsTop;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            FriendId = input.ReadString();
            break;
          }
          case 26: {
            Grouping = input.ReadString();
            break;
          }
          case 34: {
            Remark = input.ReadString();
            break;
          }
          case 40: {
            CantDisturb = input.ReadBool();
            break;
          }
          case 48: {
            IsTop = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 更新好友关系信息通知
  /// </summary>
  public sealed partial class UpdateFriendRelation : pb::IMessage<UpdateFriendRelation> {
    private static readonly pb::MessageParser<UpdateFriendRelation> _parser = new pb::MessageParser<UpdateFriendRelation>(() => new UpdateFriendRelation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFriendRelation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendRelation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendRelation(UpdateFriendRelation other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      userId_ = other.userId_;
      friendId_ = other.friendId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendRelation Clone() {
      return new UpdateFriendRelation(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 3;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFriendRelation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFriendRelation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (UserId != other.UserId) return false;
      if (FriendId != other.FriendId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (FriendId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FriendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFriendRelation other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            FriendId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 删除好友请求
  /// </summary>
  public sealed partial class DeleteFriendRequest : pb::IMessage<DeleteFriendRequest> {
    private static readonly pb::MessageParser<DeleteFriendRequest> _parser = new pb::MessageParser<DeleteFriendRequest>(() => new DeleteFriendRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFriendRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFriendRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFriendRequest(DeleteFriendRequest other) : this() {
      userId_ = other.userId_;
      friendId_ = other.friendId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFriendRequest Clone() {
      return new DeleteFriendRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 2;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFriendRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFriendRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (FriendId != other.FriendId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (FriendId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFriendRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            FriendId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 删除好友消息, 通知双方
  /// </summary>
  public sealed partial class DeleteFriendMessage : pb::IMessage<DeleteFriendMessage> {
    private static readonly pb::MessageParser<DeleteFriendMessage> _parser = new pb::MessageParser<DeleteFriendMessage>(() => new DeleteFriendMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFriendMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFriendMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFriendMessage(DeleteFriendMessage other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      userId_ = other.userId_;
      friendId_ = other.friendId_;
      deleteId_ = other.deleteId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFriendMessage Clone() {
      return new DeleteFriendMessage(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 3;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deleteId" field.</summary>
    public const int DeleteIdFieldNumber = 4;
    private int deleteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeleteId {
      get { return deleteId_; }
      set {
        deleteId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFriendMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFriendMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (UserId != other.UserId) return false;
      if (FriendId != other.FriendId) return false;
      if (DeleteId != other.DeleteId) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (DeleteId != 0) hash ^= DeleteId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (FriendId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FriendId);
      }
      if (DeleteId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DeleteId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (DeleteId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeleteId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFriendMessage other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      if (other.DeleteId != 0) {
        DeleteId = other.DeleteId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            FriendId = input.ReadString();
            break;
          }
          case 32: {
            DeleteId = input.ReadInt32();
            break;
          }
          case 42: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FriendDeleteMessage : pb::IMessage<FriendDeleteMessage> {
    private static readonly pb::MessageParser<FriendDeleteMessage> _parser = new pb::MessageParser<FriendDeleteMessage>(() => new FriendDeleteMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendDeleteMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendDeleteMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendDeleteMessage(FriendDeleteMessage other) : this() {
      deleteId_ = other.deleteId_;
      userId_ = other.userId_;
      friendId_ = other.friendId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendDeleteMessage Clone() {
      return new FriendDeleteMessage(this);
    }

    /// <summary>Field number for the "deleteId" field.</summary>
    public const int DeleteIdFieldNumber = 1;
    private int deleteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeleteId {
      get { return deleteId_; }
      set {
        deleteId_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 3;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendDeleteMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendDeleteMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeleteId != other.DeleteId) return false;
      if (UserId != other.UserId) return false;
      if (FriendId != other.FriendId) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeleteId != 0) hash ^= DeleteId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeleteId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DeleteId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (FriendId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FriendId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeleteId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeleteId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendDeleteMessage other) {
      if (other == null) {
        return;
      }
      if (other.DeleteId != 0) {
        DeleteId = other.DeleteId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeleteId = input.ReadInt32();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            FriendId = input.ReadString();
            break;
          }
          case 34: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端发送 创建群请求
  /// </summary>
  public sealed partial class CreateGroupRequest : pb::IMessage<CreateGroupRequest> {
    private static readonly pb::MessageParser<CreateGroupRequest> _parser = new pb::MessageParser<CreateGroupRequest>(() => new CreateGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGroupRequest(CreateGroupRequest other) : this() {
      userId_ = other.userId_;
      friendId_ = other.friendId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGroupRequest Clone() {
      return new CreateGroupRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_friendId_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> friendId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FriendId {
      get { return friendId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if(!friendId_.Equals(other.friendId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      hash ^= friendId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      friendId_.WriteTo(output, _repeated_friendId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      size += friendId_.CalculateSize(_repeated_friendId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      friendId_.Add(other.friendId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            friendId_.AddEntriesFrom(input, _repeated_friendId_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端发送 创建群请求响应
  /// </summary>
  public sealed partial class CreateGroupResponse : pb::IMessage<CreateGroupResponse> {
    private static readonly pb::MessageParser<CreateGroupResponse> _parser = new pb::MessageParser<CreateGroupResponse>(() => new CreateGroupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGroupResponse(CreateGroupResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      groupId_ = other.groupId_;
      time_ = other.time_;
      groupName_ = other.groupName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGroupResponse Clone() {
      return new CreateGroupResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 4;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (GroupId != other.GroupId) return false;
      if (Time != other.Time) return false;
      if (GroupName != other.GroupName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GroupName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            GroupName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 被拉入群通知
  /// </summary>
  public sealed partial class PullGroupMessage : pb::IMessage<PullGroupMessage> {
    private static readonly pb::MessageParser<PullGroupMessage> _parser = new pb::MessageParser<PullGroupMessage>(() => new PullGroupMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PullGroupMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullGroupMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullGroupMessage(PullGroupMessage other) : this() {
      groupId_ = other.groupId_;
      userIdFrom_ = other.userIdFrom_;
      userIdTarget_ = other.userIdTarget_;
      status_ = other.status_;
      grouping_ = other.grouping_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullGroupMessage Clone() {
      return new PullGroupMessage(this);
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userIdFrom" field.</summary>
    public const int UserIdFromFieldNumber = 2;
    private string userIdFrom_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserIdFrom {
      get { return userIdFrom_; }
      set {
        userIdFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userIdTarget" field.</summary>
    public const int UserIdTargetFieldNumber = 3;
    private string userIdTarget_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserIdTarget {
      get { return userIdTarget_; }
      set {
        userIdTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "grouping" field.</summary>
    public const int GroupingFieldNumber = 5;
    private string grouping_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Grouping {
      get { return grouping_; }
      set {
        grouping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 6;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PullGroupMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PullGroupMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (UserIdFrom != other.UserIdFrom) return false;
      if (UserIdTarget != other.UserIdTarget) return false;
      if (Status != other.Status) return false;
      if (Grouping != other.Grouping) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (UserIdFrom.Length != 0) hash ^= UserIdFrom.GetHashCode();
      if (UserIdTarget.Length != 0) hash ^= UserIdTarget.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Grouping.Length != 0) hash ^= Grouping.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (UserIdFrom.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserIdFrom);
      }
      if (UserIdTarget.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserIdTarget);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Status);
      }
      if (Grouping.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Grouping);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (UserIdFrom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdFrom);
      }
      if (UserIdTarget.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdTarget);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Grouping.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Grouping);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PullGroupMessage other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.UserIdFrom.Length != 0) {
        UserIdFrom = other.UserIdFrom;
      }
      if (other.UserIdTarget.Length != 0) {
        UserIdTarget = other.UserIdTarget;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Grouping.Length != 0) {
        Grouping = other.Grouping;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            UserIdFrom = input.ReadString();
            break;
          }
          case 26: {
            UserIdTarget = input.ReadString();
            break;
          }
          case 32: {
            Status = input.ReadInt32();
            break;
          }
          case 42: {
            Grouping = input.ReadString();
            break;
          }
          case 50: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端发送 加入群请求
  /// </summary>
  public sealed partial class JoinGroupRequestFromClient : pb::IMessage<JoinGroupRequestFromClient> {
    private static readonly pb::MessageParser<JoinGroupRequestFromClient> _parser = new pb::MessageParser<JoinGroupRequestFromClient>(() => new JoinGroupRequestFromClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinGroupRequestFromClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupRequestFromClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupRequestFromClient(JoinGroupRequestFromClient other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupRequestFromClient Clone() {
      return new JoinGroupRequestFromClient(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinGroupRequestFromClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinGroupRequestFromClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinGroupRequestFromClient other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端发送 加入群请求响应
  /// </summary>
  public sealed partial class JoinGroupRequestResponseFromServer : pb::IMessage<JoinGroupRequestResponseFromServer> {
    private static readonly pb::MessageParser<JoinGroupRequestResponseFromServer> _parser = new pb::MessageParser<JoinGroupRequestResponseFromServer>(() => new JoinGroupRequestResponseFromServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinGroupRequestResponseFromServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupRequestResponseFromServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupRequestResponseFromServer(JoinGroupRequestResponseFromServer other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      groupId_ = other.groupId_;
      requestId_ = other.requestId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupRequestResponseFromServer Clone() {
      return new JoinGroupRequestResponseFromServer(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 3;
    private int requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinGroupRequestResponseFromServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinGroupRequestResponseFromServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (GroupId != other.GroupId) return false;
      if (RequestId != other.RequestId) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (RequestId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RequestId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinGroupRequestResponseFromServer other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 24: {
            RequestId = input.ReadInt32();
            break;
          }
          case 34: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器发送 通知群主 有人申请加入群
  /// </summary>
  public sealed partial class JoinGroupRequestFromServer : pb::IMessage<JoinGroupRequestFromServer> {
    private static readonly pb::MessageParser<JoinGroupRequestFromServer> _parser = new pb::MessageParser<JoinGroupRequestFromServer>(() => new JoinGroupRequestFromServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinGroupRequestFromServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupRequestFromServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupRequestFromServer(JoinGroupRequestFromServer other) : this() {
      requestId_ = other.requestId_;
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      time_ = other.time_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupRequestFromServer Clone() {
      return new JoinGroupRequestFromServer(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private int requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinGroupRequestFromServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinGroupRequestFromServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (Time != other.Time) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequestId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Time);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinGroupRequestFromServer other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadInt32();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            GroupId = input.ReadString();
            break;
          }
          case 34: {
            Time = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端发送 加入群请求 结果
  /// </summary>
  public sealed partial class JoinGroupResponseFromClient : pb::IMessage<JoinGroupResponseFromClient> {
    private static readonly pb::MessageParser<JoinGroupResponseFromClient> _parser = new pb::MessageParser<JoinGroupResponseFromClient>(() => new JoinGroupResponseFromClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinGroupResponseFromClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupResponseFromClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupResponseFromClient(JoinGroupResponseFromClient other) : this() {
      requestId_ = other.requestId_;
      userId_ = other.userId_;
      accept_ = other.accept_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupResponseFromClient Clone() {
      return new JoinGroupResponseFromClient(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private int requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 3;
    private bool accept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accept {
      get { return accept_; }
      set {
        accept_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinGroupResponseFromClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinGroupResponseFromClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (UserId != other.UserId) return false;
      if (Accept != other.Accept) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Accept != false) hash ^= Accept.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequestId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (Accept != false) {
        output.WriteRawTag(24);
        output.WriteBool(Accept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Accept != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinGroupResponseFromClient other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Accept != false) {
        Accept = other.Accept;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadInt32();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 24: {
            Accept = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinGroupResponseResponseFromServer : pb::IMessage<JoinGroupResponseResponseFromServer> {
    private static readonly pb::MessageParser<JoinGroupResponseResponseFromServer> _parser = new pb::MessageParser<JoinGroupResponseResponseFromServer>(() => new JoinGroupResponseResponseFromServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinGroupResponseResponseFromServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupResponseResponseFromServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupResponseResponseFromServer(JoinGroupResponseResponseFromServer other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      requestId_ = other.requestId_;
      userId_ = other.userId_;
      time_ = other.time_;
      accept_ = other.accept_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupResponseResponseFromServer Clone() {
      return new JoinGroupResponseResponseFromServer(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private int requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 5;
    private bool accept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accept {
      get { return accept_; }
      set {
        accept_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinGroupResponseResponseFromServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinGroupResponseResponseFromServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (RequestId != other.RequestId) return false;
      if (UserId != other.UserId) return false;
      if (Time != other.Time) return false;
      if (Accept != other.Accept) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (Accept != false) hash ^= Accept.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (RequestId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RequestId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Time);
      }
      if (Accept != false) {
        output.WriteRawTag(40);
        output.WriteBool(Accept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (Accept != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinGroupResponseResponseFromServer other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.Accept != false) {
        Accept = other.Accept;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 16: {
            RequestId = input.ReadInt32();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 34: {
            Time = input.ReadString();
            break;
          }
          case 40: {
            Accept = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端发送 加入群请求 结果给请求者
  /// </summary>
  public sealed partial class JoinGroupResponseFromServer : pb::IMessage<JoinGroupResponseFromServer> {
    private static readonly pb::MessageParser<JoinGroupResponseFromServer> _parser = new pb::MessageParser<JoinGroupResponseFromServer>(() => new JoinGroupResponseFromServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinGroupResponseFromServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupResponseFromServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupResponseFromServer(JoinGroupResponseFromServer other) : this() {
      requestId_ = other.requestId_;
      userIdFrom_ = other.userIdFrom_;
      userIdTarget_ = other.userIdTarget_;
      accept_ = other.accept_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGroupResponseFromServer Clone() {
      return new JoinGroupResponseFromServer(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private int requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "userIdFrom" field.</summary>
    public const int UserIdFromFieldNumber = 2;
    private string userIdFrom_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserIdFrom {
      get { return userIdFrom_; }
      set {
        userIdFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userIdTarget" field.</summary>
    public const int UserIdTargetFieldNumber = 3;
    private string userIdTarget_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserIdTarget {
      get { return userIdTarget_; }
      set {
        userIdTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 4;
    private bool accept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accept {
      get { return accept_; }
      set {
        accept_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinGroupResponseFromServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinGroupResponseFromServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (UserIdFrom != other.UserIdFrom) return false;
      if (UserIdTarget != other.UserIdTarget) return false;
      if (Accept != other.Accept) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (UserIdFrom.Length != 0) hash ^= UserIdFrom.GetHashCode();
      if (UserIdTarget.Length != 0) hash ^= UserIdTarget.GetHashCode();
      if (Accept != false) hash ^= Accept.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequestId);
      }
      if (UserIdFrom.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserIdFrom);
      }
      if (UserIdTarget.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserIdTarget);
      }
      if (Accept != false) {
        output.WriteRawTag(32);
        output.WriteBool(Accept);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestId);
      }
      if (UserIdFrom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdFrom);
      }
      if (UserIdTarget.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdTarget);
      }
      if (Accept != false) {
        size += 1 + 1;
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinGroupResponseFromServer other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.UserIdFrom.Length != 0) {
        UserIdFrom = other.UserIdFrom;
      }
      if (other.UserIdTarget.Length != 0) {
        UserIdTarget = other.UserIdTarget;
      }
      if (other.Accept != false) {
        Accept = other.Accept;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadInt32();
            break;
          }
          case 18: {
            UserIdFrom = input.ReadString();
            break;
          }
          case 26: {
            UserIdTarget = input.ReadString();
            break;
          }
          case 32: {
            Accept = input.ReadBool();
            break;
          }
          case 42: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 通知群成员有新成员加入
  /// </summary>
  public sealed partial class NewMemberJoinMessage : pb::IMessage<NewMemberJoinMessage> {
    private static readonly pb::MessageParser<NewMemberJoinMessage> _parser = new pb::MessageParser<NewMemberJoinMessage>(() => new NewMemberJoinMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewMemberJoinMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMemberJoinMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMemberJoinMessage(NewMemberJoinMessage other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMemberJoinMessage Clone() {
      return new NewMemberJoinMessage(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewMemberJoinMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewMemberJoinMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewMemberJoinMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 更新群关系信息请求
  /// </summary>
  public sealed partial class UpdateGroupRelationRequest : pb::IMessage<UpdateGroupRelationRequest> {
    private static readonly pb::MessageParser<UpdateGroupRelationRequest> _parser = new pb::MessageParser<UpdateGroupRelationRequest>(() => new UpdateGroupRelationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateGroupRelationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupRelationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupRelationRequest(UpdateGroupRelationRequest other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      grouping_ = other.grouping_;
      nickName_ = other.nickName_;
      remark_ = other.remark_;
      cantDisturb_ = other.cantDisturb_;
      isTop_ = other.isTop_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupRelationRequest Clone() {
      return new UpdateGroupRelationRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "grouping" field.</summary>
    public const int GroupingFieldNumber = 3;
    private string grouping_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Grouping {
      get { return grouping_; }
      set {
        grouping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 4;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 5;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cantDisturb" field.</summary>
    public const int CantDisturbFieldNumber = 6;
    private bool cantDisturb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CantDisturb {
      get { return cantDisturb_; }
      set {
        cantDisturb_ = value;
      }
    }

    /// <summary>Field number for the "isTop" field.</summary>
    public const int IsTopFieldNumber = 7;
    private bool isTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTop {
      get { return isTop_; }
      set {
        isTop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateGroupRelationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateGroupRelationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (Grouping != other.Grouping) return false;
      if (NickName != other.NickName) return false;
      if (Remark != other.Remark) return false;
      if (CantDisturb != other.CantDisturb) return false;
      if (IsTop != other.IsTop) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Grouping.Length != 0) hash ^= Grouping.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (CantDisturb != false) hash ^= CantDisturb.GetHashCode();
      if (IsTop != false) hash ^= IsTop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Grouping.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Grouping);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NickName);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Remark);
      }
      if (CantDisturb != false) {
        output.WriteRawTag(48);
        output.WriteBool(CantDisturb);
      }
      if (IsTop != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsTop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Grouping.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Grouping);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (CantDisturb != false) {
        size += 1 + 1;
      }
      if (IsTop != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateGroupRelationRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Grouping.Length != 0) {
        Grouping = other.Grouping;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.CantDisturb != false) {
        CantDisturb = other.CantDisturb;
      }
      if (other.IsTop != false) {
        IsTop = other.IsTop;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            Grouping = input.ReadString();
            break;
          }
          case 34: {
            NickName = input.ReadString();
            break;
          }
          case 42: {
            Remark = input.ReadString();
            break;
          }
          case 48: {
            CantDisturb = input.ReadBool();
            break;
          }
          case 56: {
            IsTop = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 更新群关系信息通知
  /// </summary>
  public sealed partial class UpdateGroupRelation : pb::IMessage<UpdateGroupRelation> {
    private static readonly pb::MessageParser<UpdateGroupRelation> _parser = new pb::MessageParser<UpdateGroupRelation>(() => new UpdateGroupRelation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateGroupRelation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupRelation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupRelation(UpdateGroupRelation other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupRelation Clone() {
      return new UpdateGroupRelation(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateGroupRelation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateGroupRelation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateGroupRelation other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 退出群聊请求
  /// </summary>
  public sealed partial class QuitGroupRequest : pb::IMessage<QuitGroupRequest> {
    private static readonly pb::MessageParser<QuitGroupRequest> _parser = new pb::MessageParser<QuitGroupRequest>(() => new QuitGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuitGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitGroupRequest(QuitGroupRequest other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitGroupRequest Clone() {
      return new QuitGroupRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuitGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuitGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuitGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 退出群聊消息
  /// </summary>
  public sealed partial class QuitGroupMessage : pb::IMessage<QuitGroupMessage> {
    private static readonly pb::MessageParser<QuitGroupMessage> _parser = new pb::MessageParser<QuitGroupMessage>(() => new QuitGroupMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuitGroupMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitGroupMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitGroupMessage(QuitGroupMessage other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      quitId_ = other.quitId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitGroupMessage Clone() {
      return new QuitGroupMessage(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quitId" field.</summary>
    public const int QuitIdFieldNumber = 4;
    private int quitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuitId {
      get { return quitId_; }
      set {
        quitId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuitGroupMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuitGroupMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (QuitId != other.QuitId) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (QuitId != 0) hash ^= QuitId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupId);
      }
      if (QuitId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(QuitId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (QuitId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuitId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuitGroupMessage other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.QuitId != 0) {
        QuitId = other.QuitId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            GroupId = input.ReadString();
            break;
          }
          case 32: {
            QuitId = input.ReadInt32();
            break;
          }
          case 42: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 解散群聊请求
  /// </summary>
  public sealed partial class DisbandGroupRequest : pb::IMessage<DisbandGroupRequest> {
    private static readonly pb::MessageParser<DisbandGroupRequest> _parser = new pb::MessageParser<DisbandGroupRequest>(() => new DisbandGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisbandGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisbandGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisbandGroupRequest(DisbandGroupRequest other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisbandGroupRequest Clone() {
      return new DisbandGroupRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisbandGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisbandGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisbandGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 解散群聊消息
  /// </summary>
  public sealed partial class DisbandGroupMessage : pb::IMessage<DisbandGroupMessage> {
    private static readonly pb::MessageParser<DisbandGroupMessage> _parser = new pb::MessageParser<DisbandGroupMessage>(() => new DisbandGroupMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisbandGroupMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisbandGroupMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisbandGroupMessage(DisbandGroupMessage other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      memberId_ = other.memberId_;
      disBandId_ = other.disBandId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisbandGroupMessage Clone() {
      return new DisbandGroupMessage(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 4;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disBandId" field.</summary>
    public const int DisBandIdFieldNumber = 5;
    private int disBandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DisBandId {
      get { return disBandId_; }
      set {
        disBandId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 6;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisbandGroupMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisbandGroupMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (MemberId != other.MemberId) return false;
      if (DisBandId != other.DisBandId) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (DisBandId != 0) hash ^= DisBandId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupId);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberId);
      }
      if (DisBandId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DisBandId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (DisBandId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisBandId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisbandGroupMessage other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.DisBandId != 0) {
        DisBandId = other.DisBandId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            GroupId = input.ReadString();
            break;
          }
          case 34: {
            MemberId = input.ReadString();
            break;
          }
          case 40: {
            DisBandId = input.ReadInt32();
            break;
          }
          case 50: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 移除群成员请求
  /// </summary>
  public sealed partial class RemoveMemberRequest : pb::IMessage<RemoveMemberRequest> {
    private static readonly pb::MessageParser<RemoveMemberRequest> _parser = new pb::MessageParser<RemoveMemberRequest>(() => new RemoveMemberRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveMemberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveMemberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveMemberRequest(RemoveMemberRequest other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      memberId_ = other.memberId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveMemberRequest Clone() {
      return new RemoveMemberRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 3;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveMemberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveMemberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (MemberId != other.MemberId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveMemberRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            MemberId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 移除群成员消息
  /// </summary>
  public sealed partial class RemoveMemberMessage : pb::IMessage<RemoveMemberMessage> {
    private static readonly pb::MessageParser<RemoveMemberMessage> _parser = new pb::MessageParser<RemoveMemberMessage>(() => new RemoveMemberMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveMemberMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveMemberMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveMemberMessage(RemoveMemberMessage other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      memberId_ = other.memberId_;
      removeId_ = other.removeId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveMemberMessage Clone() {
      return new RemoveMemberMessage(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 4;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "removeId" field.</summary>
    public const int RemoveIdFieldNumber = 5;
    private int removeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemoveId {
      get { return removeId_; }
      set {
        removeId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 6;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveMemberMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveMemberMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (MemberId != other.MemberId) return false;
      if (RemoveId != other.RemoveId) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (RemoveId != 0) hash ^= RemoveId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupId);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberId);
      }
      if (RemoveId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RemoveId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (RemoveId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemoveId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveMemberMessage other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.RemoveId != 0) {
        RemoveId = other.RemoveId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            GroupId = input.ReadString();
            break;
          }
          case 34: {
            MemberId = input.ReadString();
            break;
          }
          case 40: {
            RemoveId = input.ReadInt32();
            break;
          }
          case 50: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupDeleteMessage : pb::IMessage<GroupDeleteMessage> {
    private static readonly pb::MessageParser<GroupDeleteMessage> _parser = new pb::MessageParser<GroupDeleteMessage>(() => new GroupDeleteMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupDeleteMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupDeleteMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupDeleteMessage(GroupDeleteMessage other) : this() {
      deleteId_ = other.deleteId_;
      groupId_ = other.groupId_;
      operateId_ = other.operateId_;
      memberId_ = other.memberId_;
      time_ = other.time_;
      method_ = other.method_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupDeleteMessage Clone() {
      return new GroupDeleteMessage(this);
    }

    /// <summary>Field number for the "deleteId" field.</summary>
    public const int DeleteIdFieldNumber = 1;
    private int deleteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeleteId {
      get { return deleteId_; }
      set {
        deleteId_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operateId" field.</summary>
    public const int OperateIdFieldNumber = 3;
    private string operateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperateId {
      get { return operateId_; }
      set {
        operateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 4;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 6;
    private int method_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Method {
      get { return method_; }
      set {
        method_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupDeleteMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupDeleteMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeleteId != other.DeleteId) return false;
      if (GroupId != other.GroupId) return false;
      if (OperateId != other.OperateId) return false;
      if (MemberId != other.MemberId) return false;
      if (Time != other.Time) return false;
      if (Method != other.Method) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeleteId != 0) hash ^= DeleteId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (OperateId.Length != 0) hash ^= OperateId.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (Method != 0) hash ^= Method.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeleteId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DeleteId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (OperateId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperateId);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Time);
      }
      if (Method != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Method);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeleteId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeleteId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (OperateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperateId);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (Method != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Method);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupDeleteMessage other) {
      if (other == null) {
        return;
      }
      if (other.DeleteId != 0) {
        DeleteId = other.DeleteId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.OperateId.Length != 0) {
        OperateId = other.OperateId;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.Method != 0) {
        Method = other.Method;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeleteId = input.ReadInt32();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            OperateId = input.ReadString();
            break;
          }
          case 34: {
            MemberId = input.ReadString();
            break;
          }
          case 42: {
            Time = input.ReadString();
            break;
          }
          case 48: {
            Method = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupMemeberRemovedMessage : pb::IMessage<GroupMemeberRemovedMessage> {
    private static readonly pb::MessageParser<GroupMemeberRemovedMessage> _parser = new pb::MessageParser<GroupMemeberRemovedMessage>(() => new GroupMemeberRemovedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMemeberRemovedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatRelationProtocolReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemeberRemovedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemeberRemovedMessage(GroupMemeberRemovedMessage other) : this() {
      groupId_ = other.groupId_;
      memberId_ = other.memberId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemeberRemovedMessage Clone() {
      return new GroupMemeberRemovedMessage(this);
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 2;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMemeberRemovedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMemeberRemovedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (MemberId != other.MemberId) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMemeberRemovedMessage other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            MemberId = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
