// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/ChatCommunicateProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ChatServer.Common.Protobuf {

  /// <summary>Holder for reflection information generated from Proto/ChatCommunicateProtocol.proto</summary>
  public static partial class ChatCommunicateProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/ChatCommunicateProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChatCommunicateProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNQcm90by9DaGF0Q29tbXVuaWNhdGVQcm90b2NvbC5wcm90bxIaQ2hhdFNl",
            "cnZlci5Db21tb24uUHJvdG9idWYaHFByb3RvL0NoYXRCYXNlUHJvdG9jb2wu",
            "cHJvdG8ikgEKEUZyaWVuZENoYXRNZXNzYWdlEhIKCnVzZXJGcm9tSWQYASAB",
            "KAkSFAoMdXNlclRhcmdldElkGAIgASgJEgwKBHRpbWUYAyABKAkSOQoIbWVz",
            "c2FnZXMYBCADKAsyJy5DaGF0U2VydmVyLkNvbW1vbi5Qcm90b2J1Zi5DaGF0",
            "TWVzc2FnZRIKCgJpZBgFIAEoBSJzChlGcmllbmRDaGF0TWVzc2FnZVJlc3Bv",
            "bnNlEjwKCHJlc3BvbnNlGAEgASgLMiouQ2hhdFNlcnZlci5Db21tb24uUHJv",
            "dG9idWYuQ29tbW9uUmVzcG9uc2USCgoCaWQYAiABKAUSDAoEdGltZRgDIAEo",
            "CSKMAQoQR3JvdXBDaGF0TWVzc2FnZRISCgp1c2VyRnJvbUlkGAEgASgJEg8K",
            "B2dyb3VwSWQYAiABKAkSDAoEdGltZRgDIAEoCRI5CghtZXNzYWdlcxgEIAMo",
            "CzInLkNoYXRTZXJ2ZXIuQ29tbW9uLlByb3RvYnVmLkNoYXRNZXNzYWdlEgoK",
            "AmlkGAUgASgFInIKGEdyb3VwQ2hhdE1lc3NhZ2VSZXNwb25zZRI8CghyZXNw",
            "b25zZRgBIAEoCzIqLkNoYXRTZXJ2ZXIuQ29tbW9uLlByb3RvYnVmLkNvbW1v",
            "blJlc3BvbnNlEgoKAmlkGAIgASgFEgwKBHRpbWUYAyABKAkiUwoURnJpZW5k",
            "V3JpdGluZ01lc3NhZ2USEgoKdXNlckZyb21JZBgBIAEoCRIUCgx1c2VyVGFy",
            "Z2V0SWQYAiABKAkSEQoJaXNXcml0aW5nGAMgASgIIsgBCgtDaGF0TWVzc2Fn",
            "ZRI4Cgh0ZXh0TWVzcxgBIAEoCzIkLkNoYXRTZXJ2ZXIuQ29tbW9uLlByb3Rv",
            "YnVmLlRleHRNZXNzSAASOgoJaW1hZ2VNZXNzGAIgASgLMiUuQ2hhdFNlcnZl",
            "ci5Db21tb24uUHJvdG9idWYuSW1hZ2VNZXNzSAASOAoIZmlsZU1lc3MYAyAB",
            "KAsyJC5DaGF0U2VydmVyLkNvbW1vbi5Qcm90b2J1Zi5GaWxlTWVzc0gAQgkK",
            "B2NvbnRlbnQiGAoIVGV4dE1lc3MSDAoEdGV4dBgBIAEoCSIvCglJbWFnZU1l",
            "c3MSEAoIZmlsZVBhdGgYASABKAkSEAoIZmlsZVNpemUYAiABKAUiQAoIRmls",
            "ZU1lc3MSEAoIZmlsZU5hbWUYASABKAkSEAoIZmlsZVNpemUYAiABKAUSEAoI",
            "ZmlsZVR5cGUYAyABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ChatServer.Common.Protobuf.ChatBaseProtocolReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendChatMessage), global::ChatServer.Common.Protobuf.FriendChatMessage.Parser, new[]{ "UserFromId", "UserTargetId", "Time", "Messages", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendChatMessageResponse), global::ChatServer.Common.Protobuf.FriendChatMessageResponse.Parser, new[]{ "Response", "Id", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupChatMessage), global::ChatServer.Common.Protobuf.GroupChatMessage.Parser, new[]{ "UserFromId", "GroupId", "Time", "Messages", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupChatMessageResponse), global::ChatServer.Common.Protobuf.GroupChatMessageResponse.Parser, new[]{ "Response", "Id", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendWritingMessage), global::ChatServer.Common.Protobuf.FriendWritingMessage.Parser, new[]{ "UserFromId", "UserTargetId", "IsWriting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatMessage), global::ChatServer.Common.Protobuf.ChatMessage.Parser, new[]{ "TextMess", "ImageMess", "FileMess" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.TextMess), global::ChatServer.Common.Protobuf.TextMess.Parser, new[]{ "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ImageMess), global::ChatServer.Common.Protobuf.ImageMess.Parser, new[]{ "FilePath", "FileSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FileMess), global::ChatServer.Common.Protobuf.FileMess.Parser, new[]{ "FileName", "FileSize", "FileType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端发送--好友聊天消息
  /// </summary>
  public sealed partial class FriendChatMessage : pb::IMessage<FriendChatMessage> {
    private static readonly pb::MessageParser<FriendChatMessage> _parser = new pb::MessageParser<FriendChatMessage>(() => new FriendChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessage(FriendChatMessage other) : this() {
      userFromId_ = other.userFromId_;
      userTargetId_ = other.userTargetId_;
      time_ = other.time_;
      messages_ = other.messages_.Clone();
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessage Clone() {
      return new FriendChatMessage(this);
    }

    /// <summary>Field number for the "userFromId" field.</summary>
    public const int UserFromIdFieldNumber = 1;
    private string userFromId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserFromId {
      get { return userFromId_; }
      set {
        userFromId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userTargetId" field.</summary>
    public const int UserTargetIdFieldNumber = 2;
    private string userTargetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserTargetId {
      get { return userTargetId_; }
      set {
        userTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ChatServer.Common.Protobuf.ChatMessage> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(34, global::ChatServer.Common.Protobuf.ChatMessage.Parser);
    private readonly pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage> messages_ = new pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage> Messages {
      get { return messages_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserFromId != other.UserFromId) return false;
      if (UserTargetId != other.UserTargetId) return false;
      if (Time != other.Time) return false;
      if(!messages_.Equals(other.messages_)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserFromId.Length != 0) hash ^= UserFromId.GetHashCode();
      if (UserTargetId.Length != 0) hash ^= UserTargetId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      hash ^= messages_.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserFromId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserTargetId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      messages_.WriteTo(output, _repeated_messages_codec);
      if (Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserFromId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTargetId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserFromId.Length != 0) {
        UserFromId = other.UserFromId;
      }
      if (other.UserTargetId.Length != 0) {
        UserTargetId = other.UserTargetId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      messages_.Add(other.messages_);
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserFromId = input.ReadString();
            break;
          }
          case 18: {
            UserTargetId = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
          case 40: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端返回--通知客户端好友聊天消息发送成功
  /// </summary>
  public sealed partial class FriendChatMessageResponse : pb::IMessage<FriendChatMessageResponse> {
    private static readonly pb::MessageParser<FriendChatMessageResponse> _parser = new pb::MessageParser<FriendChatMessageResponse>(() => new FriendChatMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendChatMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessageResponse(FriendChatMessageResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      id_ = other.id_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessageResponse Clone() {
      return new FriendChatMessageResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendChatMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendChatMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (Id != other.Id) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendChatMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端发送--群聊消息
  /// </summary>
  public sealed partial class GroupChatMessage : pb::IMessage<GroupChatMessage> {
    private static readonly pb::MessageParser<GroupChatMessage> _parser = new pb::MessageParser<GroupChatMessage>(() => new GroupChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessage(GroupChatMessage other) : this() {
      userFromId_ = other.userFromId_;
      groupId_ = other.groupId_;
      time_ = other.time_;
      messages_ = other.messages_.Clone();
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessage Clone() {
      return new GroupChatMessage(this);
    }

    /// <summary>Field number for the "userFromId" field.</summary>
    public const int UserFromIdFieldNumber = 1;
    private string userFromId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserFromId {
      get { return userFromId_; }
      set {
        userFromId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ChatServer.Common.Protobuf.ChatMessage> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(34, global::ChatServer.Common.Protobuf.ChatMessage.Parser);
    private readonly pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage> messages_ = new pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage> Messages {
      get { return messages_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserFromId != other.UserFromId) return false;
      if (GroupId != other.GroupId) return false;
      if (Time != other.Time) return false;
      if(!messages_.Equals(other.messages_)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserFromId.Length != 0) hash ^= UserFromId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      hash ^= messages_.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserFromId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserFromId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      messages_.WriteTo(output, _repeated_messages_codec);
      if (Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserFromId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserFromId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserFromId.Length != 0) {
        UserFromId = other.UserFromId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      messages_.Add(other.messages_);
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserFromId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
          case 40: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端返回--通知客户端群聊消息发送成功
  /// </summary>
  public sealed partial class GroupChatMessageResponse : pb::IMessage<GroupChatMessageResponse> {
    private static readonly pb::MessageParser<GroupChatMessageResponse> _parser = new pb::MessageParser<GroupChatMessageResponse>(() => new GroupChatMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupChatMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessageResponse(GroupChatMessageResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      id_ = other.id_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessageResponse Clone() {
      return new GroupChatMessageResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupChatMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupChatMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (Id != other.Id) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupChatMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 好友正在输入通知
  /// </summary>
  public sealed partial class FriendWritingMessage : pb::IMessage<FriendWritingMessage> {
    private static readonly pb::MessageParser<FriendWritingMessage> _parser = new pb::MessageParser<FriendWritingMessage>(() => new FriendWritingMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendWritingMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendWritingMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendWritingMessage(FriendWritingMessage other) : this() {
      userFromId_ = other.userFromId_;
      userTargetId_ = other.userTargetId_;
      isWriting_ = other.isWriting_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendWritingMessage Clone() {
      return new FriendWritingMessage(this);
    }

    /// <summary>Field number for the "userFromId" field.</summary>
    public const int UserFromIdFieldNumber = 1;
    private string userFromId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserFromId {
      get { return userFromId_; }
      set {
        userFromId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userTargetId" field.</summary>
    public const int UserTargetIdFieldNumber = 2;
    private string userTargetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserTargetId {
      get { return userTargetId_; }
      set {
        userTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isWriting" field.</summary>
    public const int IsWritingFieldNumber = 3;
    private bool isWriting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWriting {
      get { return isWriting_; }
      set {
        isWriting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendWritingMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendWritingMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserFromId != other.UserFromId) return false;
      if (UserTargetId != other.UserTargetId) return false;
      if (IsWriting != other.IsWriting) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserFromId.Length != 0) hash ^= UserFromId.GetHashCode();
      if (UserTargetId.Length != 0) hash ^= UserTargetId.GetHashCode();
      if (IsWriting != false) hash ^= IsWriting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserFromId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserTargetId);
      }
      if (IsWriting != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsWriting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserFromId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTargetId);
      }
      if (IsWriting != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendWritingMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserFromId.Length != 0) {
        UserFromId = other.UserFromId;
      }
      if (other.UserTargetId.Length != 0) {
        UserTargetId = other.UserTargetId;
      }
      if (other.IsWriting != false) {
        IsWriting = other.IsWriting;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserFromId = input.ReadString();
            break;
          }
          case 18: {
            UserTargetId = input.ReadString();
            break;
          }
          case 24: {
            IsWriting = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 聊天消息体
  /// </summary>
  public sealed partial class ChatMessage : pb::IMessage<ChatMessage> {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage(ChatMessage other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.TextMess:
          TextMess = other.TextMess.Clone();
          break;
        case ContentOneofCase.ImageMess:
          ImageMess = other.ImageMess.Clone();
          break;
        case ContentOneofCase.FileMess:
          FileMess = other.FileMess.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "textMess" field.</summary>
    public const int TextMessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.TextMess TextMess {
      get { return contentCase_ == ContentOneofCase.TextMess ? (global::ChatServer.Common.Protobuf.TextMess) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.TextMess;
      }
    }

    /// <summary>Field number for the "imageMess" field.</summary>
    public const int ImageMessFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.ImageMess ImageMess {
      get { return contentCase_ == ContentOneofCase.ImageMess ? (global::ChatServer.Common.Protobuf.ImageMess) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.ImageMess;
      }
    }

    /// <summary>Field number for the "fileMess" field.</summary>
    public const int FileMessFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.FileMess FileMess {
      get { return contentCase_ == ContentOneofCase.FileMess ? (global::ChatServer.Common.Protobuf.FileMess) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.FileMess;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      TextMess = 1,
      ImageMess = 2,
      FileMess = 3,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TextMess, other.TextMess)) return false;
      if (!object.Equals(ImageMess, other.ImageMess)) return false;
      if (!object.Equals(FileMess, other.FileMess)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.TextMess) hash ^= TextMess.GetHashCode();
      if (contentCase_ == ContentOneofCase.ImageMess) hash ^= ImageMess.GetHashCode();
      if (contentCase_ == ContentOneofCase.FileMess) hash ^= FileMess.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (contentCase_ == ContentOneofCase.TextMess) {
        output.WriteRawTag(10);
        output.WriteMessage(TextMess);
      }
      if (contentCase_ == ContentOneofCase.ImageMess) {
        output.WriteRawTag(18);
        output.WriteMessage(ImageMess);
      }
      if (contentCase_ == ContentOneofCase.FileMess) {
        output.WriteRawTag(26);
        output.WriteMessage(FileMess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.TextMess) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextMess);
      }
      if (contentCase_ == ContentOneofCase.ImageMess) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageMess);
      }
      if (contentCase_ == ContentOneofCase.FileMess) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FileMess);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.TextMess:
          if (TextMess == null) {
            TextMess = new global::ChatServer.Common.Protobuf.TextMess();
          }
          TextMess.MergeFrom(other.TextMess);
          break;
        case ContentOneofCase.ImageMess:
          if (ImageMess == null) {
            ImageMess = new global::ChatServer.Common.Protobuf.ImageMess();
          }
          ImageMess.MergeFrom(other.ImageMess);
          break;
        case ContentOneofCase.FileMess:
          if (FileMess == null) {
            FileMess = new global::ChatServer.Common.Protobuf.FileMess();
          }
          FileMess.MergeFrom(other.FileMess);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::ChatServer.Common.Protobuf.TextMess subBuilder = new global::ChatServer.Common.Protobuf.TextMess();
            if (contentCase_ == ContentOneofCase.TextMess) {
              subBuilder.MergeFrom(TextMess);
            }
            input.ReadMessage(subBuilder);
            TextMess = subBuilder;
            break;
          }
          case 18: {
            global::ChatServer.Common.Protobuf.ImageMess subBuilder = new global::ChatServer.Common.Protobuf.ImageMess();
            if (contentCase_ == ContentOneofCase.ImageMess) {
              subBuilder.MergeFrom(ImageMess);
            }
            input.ReadMessage(subBuilder);
            ImageMess = subBuilder;
            break;
          }
          case 26: {
            global::ChatServer.Common.Protobuf.FileMess subBuilder = new global::ChatServer.Common.Protobuf.FileMess();
            if (contentCase_ == ContentOneofCase.FileMess) {
              subBuilder.MergeFrom(FileMess);
            }
            input.ReadMessage(subBuilder);
            FileMess = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 文字消息
  /// </summary>
  public sealed partial class TextMess : pb::IMessage<TextMess> {
    private static readonly pb::MessageParser<TextMess> _parser = new pb::MessageParser<TextMess>(() => new TextMess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextMess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextMess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextMess(TextMess other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextMess Clone() {
      return new TextMess(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextMess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextMess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextMess other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 图片消息
  /// </summary>
  public sealed partial class ImageMess : pb::IMessage<ImageMess> {
    private static readonly pb::MessageParser<ImageMess> _parser = new pb::MessageParser<ImageMess>(() => new ImageMess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageMess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMess(ImageMess other) : this() {
      filePath_ = other.filePath_;
      fileSize_ = other.fileSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMess Clone() {
      return new ImageMess(this);
    }

    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 1;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fileSize" field.</summary>
    public const int FileSizeFieldNumber = 2;
    private int fileSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FileSize {
      get { return fileSize_; }
      set {
        fileSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageMess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageMess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FilePath != other.FilePath) return false;
      if (FileSize != other.FileSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (FileSize != 0) hash ^= FileSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilePath);
      }
      if (FileSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (FileSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageMess other) {
      if (other == null) {
        return;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.FileSize != 0) {
        FileSize = other.FileSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FilePath = input.ReadString();
            break;
          }
          case 16: {
            FileSize = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 文件消息
  /// </summary>
  public sealed partial class FileMess : pb::IMessage<FileMess> {
    private static readonly pb::MessageParser<FileMess> _parser = new pb::MessageParser<FileMess>(() => new FileMess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileMess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMess(FileMess other) : this() {
      fileName_ = other.fileName_;
      fileSize_ = other.fileSize_;
      fileType_ = other.fileType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMess Clone() {
      return new FileMess(this);
    }

    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 1;
    private string fileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fileSize" field.</summary>
    public const int FileSizeFieldNumber = 2;
    private int fileSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FileSize {
      get { return fileSize_; }
      set {
        fileSize_ = value;
      }
    }

    /// <summary>Field number for the "fileType" field.</summary>
    public const int FileTypeFieldNumber = 3;
    private string fileType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileType {
      get { return fileType_; }
      set {
        fileType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileMess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileMess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileName != other.FileName) return false;
      if (FileSize != other.FileSize) return false;
      if (FileType != other.FileType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (FileSize != 0) hash ^= FileSize.GetHashCode();
      if (FileType.Length != 0) hash ^= FileType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (FileSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FileSize);
      }
      if (FileType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FileType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (FileSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileSize);
      }
      if (FileType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileMess other) {
      if (other == null) {
        return;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.FileSize != 0) {
        FileSize = other.FileSize;
      }
      if (other.FileType.Length != 0) {
        FileType = other.FileType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
          case 16: {
            FileSize = input.ReadInt32();
            break;
          }
          case 26: {
            FileType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
