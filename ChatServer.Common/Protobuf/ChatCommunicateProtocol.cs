// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/ChatCommunicateProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ChatServer.Common.Protobuf {

  /// <summary>Holder for reflection information generated from Proto/ChatCommunicateProtocol.proto</summary>
  public static partial class ChatCommunicateProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/ChatCommunicateProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChatCommunicateProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNQcm90by9DaGF0Q29tbXVuaWNhdGVQcm90b2NvbC5wcm90bxIaQ2hhdFNl",
            "cnZlci5Db21tb24uUHJvdG9idWYaHFByb3RvL0NoYXRCYXNlUHJvdG9jb2wu",
            "cHJvdG8ivAEKEUZyaWVuZENoYXRNZXNzYWdlEhIKCnVzZXJGcm9tSWQYASAB",
            "KAkSFAoMdXNlclRhcmdldElkGAIgASgJEgwKBHRpbWUYAyABKAkSOQoIbWVz",
            "c2FnZXMYBCADKAsyJy5DaGF0U2VydmVyLkNvbW1vbi5Qcm90b2J1Zi5DaGF0",
            "TWVzc2FnZRIKCgJpZBgFIAEoBRITCgtJc1JldHJhY3RlZBgGIAEoCBITCgty",
            "ZXRyYWN0VGltZRgHIAEoCSJzChlGcmllbmRDaGF0TWVzc2FnZVJlc3BvbnNl",
            "EjwKCHJlc3BvbnNlGAEgASgLMiouQ2hhdFNlcnZlci5Db21tb24uUHJvdG9i",
            "dWYuQ29tbW9uUmVzcG9uc2USCgoCaWQYAiABKAUSDAoEdGltZRgDIAEoCSK2",
            "AQoQR3JvdXBDaGF0TWVzc2FnZRISCgp1c2VyRnJvbUlkGAEgASgJEg8KB2dy",
            "b3VwSWQYAiABKAkSDAoEdGltZRgDIAEoCRI5CghtZXNzYWdlcxgEIAMoCzIn",
            "LkNoYXRTZXJ2ZXIuQ29tbW9uLlByb3RvYnVmLkNoYXRNZXNzYWdlEgoKAmlk",
            "GAUgASgFEhMKC0lzUmV0cmFjdGVkGAYgASgIEhMKC3JldHJhY3RUaW1lGAcg",
            "ASgJInIKGEdyb3VwQ2hhdE1lc3NhZ2VSZXNwb25zZRI8CghyZXNwb25zZRgB",
            "IAEoCzIqLkNoYXRTZXJ2ZXIuQ29tbW9uLlByb3RvYnVmLkNvbW1vblJlc3Bv",
            "bnNlEgoKAmlkGAIgASgFEgwKBHRpbWUYAyABKAkiUwoURnJpZW5kV3JpdGlu",
            "Z01lc3NhZ2USEgoKdXNlckZyb21JZBgBIAEoCRIUCgx1c2VyVGFyZ2V0SWQY",
            "AiABKAkSEQoJaXNXcml0aW5nGAMgASgIIowCCgtDaGF0TWVzc2FnZRI4Cgh0",
            "ZXh0TWVzcxgBIAEoCzIkLkNoYXRTZXJ2ZXIuQ29tbW9uLlByb3RvYnVmLlRl",
            "eHRNZXNzSAASOgoJaW1hZ2VNZXNzGAIgASgLMiUuQ2hhdFNlcnZlci5Db21t",
            "b24uUHJvdG9idWYuSW1hZ2VNZXNzSAASOAoIZmlsZU1lc3MYAyABKAsyJC5D",
            "aGF0U2VydmVyLkNvbW1vbi5Qcm90b2J1Zi5GaWxlTWVzc0gAEkIKDXN5c3Rl",
            "bU1lc3NhZ2UYBCABKAsyKS5DaGF0U2VydmVyLkNvbW1vbi5Qcm90b2J1Zi5T",
            "eXN0ZW1NZXNzYWdlSABCCQoHY29udGVudCIYCghUZXh0TWVzcxIMCgR0ZXh0",
            "GAEgASgJIi8KCUltYWdlTWVzcxIQCghmaWxlUGF0aBgBIAEoCRIQCghmaWxl",
            "U2l6ZRgCIAEoBSJACghGaWxlTWVzcxIQCghmaWxlTmFtZRgBIAEoCRIQCghm",
            "aWxlU2l6ZRgCIAEoBRIQCghmaWxlVHlwZRgDIAEoCSJPCg1TeXN0ZW1NZXNz",
            "YWdlEj4KBmJsb2NrcxgBIAMoCzIuLkNoYXRTZXJ2ZXIuQ29tbW9uLlByb3Rv",
            "YnVmLlN5c3RlbU1lc3NhZ2VCbG9jayIwChJTeXN0ZW1NZXNzYWdlQmxvY2sS",
            "DAoEdGV4dBgBIAEoCRIMCgRib2xkGAIgASgIIlUKHVVwZGF0ZUZyaWVuZExh",
            "c3RDaGF0SWRSZXF1ZXN0Eg4KBnVzZXJJZBgBIAEoCRIQCghmcmllbmRJZBgC",
            "IAEoCRISCgpsYXN0Q2hhdElkGAMgASgFIlMKHFVwZGF0ZUdyb3VwTGFzdENo",
            "YXRJZFJlcXVlc3QSDgoGdXNlcklkGAEgASgJEg8KB2dyb3VwSWQYAiABKAkS",
            "EgoKbGFzdENoYXRJZBgDIAEoBSJeCh5VcGRhdGVGcmllbmRMYXN0Q2hhdElk",
            "UmVzcG9uc2USPAoIcmVzcG9uc2UYASABKAsyKi5DaGF0U2VydmVyLkNvbW1v",
            "bi5Qcm90b2J1Zi5Db21tb25SZXNwb25zZSJdCh1VcGRhdGVHcm91cExhc3RD",
            "aGF0SWRSZXNwb25zZRI8CghyZXNwb25zZRgBIAEoCzIqLkNoYXRTZXJ2ZXIu",
            "Q29tbW9uLlByb3RvYnVmLkNvbW1vblJlc3BvbnNlIlAKFkNoYXRHcm91cERl",
            "dGFpbE1lc3NhZ2USDgoGdXNlcklkGAEgASgJEhMKC2NoYXRHcm91cElkGAIg",
            "ASgFEhEKCWlzRGVsZXRlZBgDIAEoCCJUChhDaGF0UHJpdmF0ZURldGFpbE1l",
            "c3NhZ2USDgoGdXNlcklkGAEgASgJEhUKDWNoYXRQcml2YXRlSWQYAiABKAUS",
            "EQoJaXNEZWxldGVkGAMgASgIIj0KFkNoYXRHcm91cERlbGV0ZVJlcXVlc3QS",
            "DgoGdXNlcklkGAEgASgJEhMKC2NoYXRHcm91cElkGAIgASgFIlcKF0NoYXRH",
            "cm91cERlbGV0ZVJlc3BvbnNlEjwKCHJlc3BvbnNlGAEgASgLMiouQ2hhdFNl",
            "cnZlci5Db21tb24uUHJvdG9idWYuQ29tbW9uUmVzcG9uc2UiQQoYQ2hhdFBy",
            "aXZhdGVEZWxldGVSZXF1ZXN0Eg4KBnVzZXJJZBgBIAEoCRIVCg1jaGF0UHJp",
            "dmF0ZUlkGAIgASgFIlkKGUNoYXRQcml2YXRlRGVsZXRlUmVzcG9uc2USPAoI",
            "cmVzcG9uc2UYASABKAsyKi5DaGF0U2VydmVyLkNvbW1vbi5Qcm90b2J1Zi5D",
            "b21tb25SZXNwb25zZSJCChlDaGF0UHJpdmF0ZVJldHJhY3RSZXF1ZXN0Eg4K",
            "BnVzZXJJZBgBIAEoCRIVCg1jaGF0UHJpdmF0ZUlkGAIgASgFIoABChlDaGF0",
            "UHJpdmF0ZVJldHJhY3RNZXNzYWdlEjwKCHJlc3BvbnNlGAEgASgLMiouQ2hh",
            "dFNlcnZlci5Db21tb24uUHJvdG9idWYuQ29tbW9uUmVzcG9uc2USDgoGdXNl",
            "cklkGAIgASgJEhUKDWNoYXRQcml2YXRlSWQYAyABKAUiPgoXQ2hhdEdyb3Vw",
            "UmV0cmFjdFJlcXVlc3QSDgoGdXNlcklkGAEgASgJEhMKC2NoYXRHcm91cElk",
            "GAIgASgFInwKF0NoYXRHcm91cFJldHJhY3RNZXNzYWdlEjwKCHJlc3BvbnNl",
            "GAEgASgLMiouQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYuQ29tbW9uUmVz",
            "cG9uc2USDgoGdXNlcklkGAIgASgJEhMKC2NoYXRHcm91cElkGAMgASgFYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ChatServer.Common.Protobuf.ChatBaseProtocolReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendChatMessage), global::ChatServer.Common.Protobuf.FriendChatMessage.Parser, new[]{ "UserFromId", "UserTargetId", "Time", "Messages", "Id", "IsRetracted", "RetractTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendChatMessageResponse), global::ChatServer.Common.Protobuf.FriendChatMessageResponse.Parser, new[]{ "Response", "Id", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupChatMessage), global::ChatServer.Common.Protobuf.GroupChatMessage.Parser, new[]{ "UserFromId", "GroupId", "Time", "Messages", "Id", "IsRetracted", "RetractTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupChatMessageResponse), global::ChatServer.Common.Protobuf.GroupChatMessageResponse.Parser, new[]{ "Response", "Id", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FriendWritingMessage), global::ChatServer.Common.Protobuf.FriendWritingMessage.Parser, new[]{ "UserFromId", "UserTargetId", "IsWriting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatMessage), global::ChatServer.Common.Protobuf.ChatMessage.Parser, new[]{ "TextMess", "ImageMess", "FileMess", "SystemMessage" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.TextMess), global::ChatServer.Common.Protobuf.TextMess.Parser, new[]{ "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ImageMess), global::ChatServer.Common.Protobuf.ImageMess.Parser, new[]{ "FilePath", "FileSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.FileMess), global::ChatServer.Common.Protobuf.FileMess.Parser, new[]{ "FileName", "FileSize", "FileType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.SystemMessage), global::ChatServer.Common.Protobuf.SystemMessage.Parser, new[]{ "Blocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.SystemMessageBlock), global::ChatServer.Common.Protobuf.SystemMessageBlock.Parser, new[]{ "Text", "Bold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateFriendLastChatIdRequest), global::ChatServer.Common.Protobuf.UpdateFriendLastChatIdRequest.Parser, new[]{ "UserId", "FriendId", "LastChatId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateGroupLastChatIdRequest), global::ChatServer.Common.Protobuf.UpdateGroupLastChatIdRequest.Parser, new[]{ "UserId", "GroupId", "LastChatId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateFriendLastChatIdResponse), global::ChatServer.Common.Protobuf.UpdateFriendLastChatIdResponse.Parser, new[]{ "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateGroupLastChatIdResponse), global::ChatServer.Common.Protobuf.UpdateGroupLastChatIdResponse.Parser, new[]{ "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatGroupDetailMessage), global::ChatServer.Common.Protobuf.ChatGroupDetailMessage.Parser, new[]{ "UserId", "ChatGroupId", "IsDeleted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatPrivateDetailMessage), global::ChatServer.Common.Protobuf.ChatPrivateDetailMessage.Parser, new[]{ "UserId", "ChatPrivateId", "IsDeleted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatGroupDeleteRequest), global::ChatServer.Common.Protobuf.ChatGroupDeleteRequest.Parser, new[]{ "UserId", "ChatGroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatGroupDeleteResponse), global::ChatServer.Common.Protobuf.ChatGroupDeleteResponse.Parser, new[]{ "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatPrivateDeleteRequest), global::ChatServer.Common.Protobuf.ChatPrivateDeleteRequest.Parser, new[]{ "UserId", "ChatPrivateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatPrivateDeleteResponse), global::ChatServer.Common.Protobuf.ChatPrivateDeleteResponse.Parser, new[]{ "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatPrivateRetractRequest), global::ChatServer.Common.Protobuf.ChatPrivateRetractRequest.Parser, new[]{ "UserId", "ChatPrivateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatPrivateRetractMessage), global::ChatServer.Common.Protobuf.ChatPrivateRetractMessage.Parser, new[]{ "Response", "UserId", "ChatPrivateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatGroupRetractRequest), global::ChatServer.Common.Protobuf.ChatGroupRetractRequest.Parser, new[]{ "UserId", "ChatGroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.ChatGroupRetractMessage), global::ChatServer.Common.Protobuf.ChatGroupRetractMessage.Parser, new[]{ "Response", "UserId", "ChatGroupId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端发送--好友聊天消息
  /// </summary>
  public sealed partial class FriendChatMessage : pb::IMessage<FriendChatMessage> {
    private static readonly pb::MessageParser<FriendChatMessage> _parser = new pb::MessageParser<FriendChatMessage>(() => new FriendChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessage(FriendChatMessage other) : this() {
      userFromId_ = other.userFromId_;
      userTargetId_ = other.userTargetId_;
      time_ = other.time_;
      messages_ = other.messages_.Clone();
      id_ = other.id_;
      isRetracted_ = other.isRetracted_;
      retractTime_ = other.retractTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessage Clone() {
      return new FriendChatMessage(this);
    }

    /// <summary>Field number for the "userFromId" field.</summary>
    public const int UserFromIdFieldNumber = 1;
    private string userFromId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserFromId {
      get { return userFromId_; }
      set {
        userFromId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userTargetId" field.</summary>
    public const int UserTargetIdFieldNumber = 2;
    private string userTargetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserTargetId {
      get { return userTargetId_; }
      set {
        userTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ChatServer.Common.Protobuf.ChatMessage> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(34, global::ChatServer.Common.Protobuf.ChatMessage.Parser);
    private readonly pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage> messages_ = new pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage> Messages {
      get { return messages_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "IsRetracted" field.</summary>
    public const int IsRetractedFieldNumber = 6;
    private bool isRetracted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRetracted {
      get { return isRetracted_; }
      set {
        isRetracted_ = value;
      }
    }

    /// <summary>Field number for the "retractTime" field.</summary>
    public const int RetractTimeFieldNumber = 7;
    private string retractTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RetractTime {
      get { return retractTime_; }
      set {
        retractTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserFromId != other.UserFromId) return false;
      if (UserTargetId != other.UserTargetId) return false;
      if (Time != other.Time) return false;
      if(!messages_.Equals(other.messages_)) return false;
      if (Id != other.Id) return false;
      if (IsRetracted != other.IsRetracted) return false;
      if (RetractTime != other.RetractTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserFromId.Length != 0) hash ^= UserFromId.GetHashCode();
      if (UserTargetId.Length != 0) hash ^= UserTargetId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      hash ^= messages_.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsRetracted != false) hash ^= IsRetracted.GetHashCode();
      if (RetractTime.Length != 0) hash ^= RetractTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserFromId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserTargetId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      messages_.WriteTo(output, _repeated_messages_codec);
      if (Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Id);
      }
      if (IsRetracted != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsRetracted);
      }
      if (RetractTime.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RetractTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserFromId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTargetId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsRetracted != false) {
        size += 1 + 1;
      }
      if (RetractTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RetractTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserFromId.Length != 0) {
        UserFromId = other.UserFromId;
      }
      if (other.UserTargetId.Length != 0) {
        UserTargetId = other.UserTargetId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      messages_.Add(other.messages_);
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsRetracted != false) {
        IsRetracted = other.IsRetracted;
      }
      if (other.RetractTime.Length != 0) {
        RetractTime = other.RetractTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserFromId = input.ReadString();
            break;
          }
          case 18: {
            UserTargetId = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
          case 40: {
            Id = input.ReadInt32();
            break;
          }
          case 48: {
            IsRetracted = input.ReadBool();
            break;
          }
          case 58: {
            RetractTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端返回--通知客户端好友聊天消息发送成功
  /// </summary>
  public sealed partial class FriendChatMessageResponse : pb::IMessage<FriendChatMessageResponse> {
    private static readonly pb::MessageParser<FriendChatMessageResponse> _parser = new pb::MessageParser<FriendChatMessageResponse>(() => new FriendChatMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendChatMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessageResponse(FriendChatMessageResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      id_ = other.id_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendChatMessageResponse Clone() {
      return new FriendChatMessageResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendChatMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendChatMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (Id != other.Id) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendChatMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端发送--群聊消息
  /// </summary>
  public sealed partial class GroupChatMessage : pb::IMessage<GroupChatMessage> {
    private static readonly pb::MessageParser<GroupChatMessage> _parser = new pb::MessageParser<GroupChatMessage>(() => new GroupChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessage(GroupChatMessage other) : this() {
      userFromId_ = other.userFromId_;
      groupId_ = other.groupId_;
      time_ = other.time_;
      messages_ = other.messages_.Clone();
      id_ = other.id_;
      isRetracted_ = other.isRetracted_;
      retractTime_ = other.retractTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessage Clone() {
      return new GroupChatMessage(this);
    }

    /// <summary>Field number for the "userFromId" field.</summary>
    public const int UserFromIdFieldNumber = 1;
    private string userFromId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserFromId {
      get { return userFromId_; }
      set {
        userFromId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ChatServer.Common.Protobuf.ChatMessage> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(34, global::ChatServer.Common.Protobuf.ChatMessage.Parser);
    private readonly pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage> messages_ = new pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ChatServer.Common.Protobuf.ChatMessage> Messages {
      get { return messages_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "IsRetracted" field.</summary>
    public const int IsRetractedFieldNumber = 6;
    private bool isRetracted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRetracted {
      get { return isRetracted_; }
      set {
        isRetracted_ = value;
      }
    }

    /// <summary>Field number for the "retractTime" field.</summary>
    public const int RetractTimeFieldNumber = 7;
    private string retractTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RetractTime {
      get { return retractTime_; }
      set {
        retractTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserFromId != other.UserFromId) return false;
      if (GroupId != other.GroupId) return false;
      if (Time != other.Time) return false;
      if(!messages_.Equals(other.messages_)) return false;
      if (Id != other.Id) return false;
      if (IsRetracted != other.IsRetracted) return false;
      if (RetractTime != other.RetractTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserFromId.Length != 0) hash ^= UserFromId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      hash ^= messages_.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsRetracted != false) hash ^= IsRetracted.GetHashCode();
      if (RetractTime.Length != 0) hash ^= RetractTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserFromId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserFromId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      messages_.WriteTo(output, _repeated_messages_codec);
      if (Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Id);
      }
      if (IsRetracted != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsRetracted);
      }
      if (RetractTime.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RetractTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserFromId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserFromId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsRetracted != false) {
        size += 1 + 1;
      }
      if (RetractTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RetractTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserFromId.Length != 0) {
        UserFromId = other.UserFromId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      messages_.Add(other.messages_);
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsRetracted != false) {
        IsRetracted = other.IsRetracted;
      }
      if (other.RetractTime.Length != 0) {
        RetractTime = other.RetractTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserFromId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
          case 40: {
            Id = input.ReadInt32();
            break;
          }
          case 48: {
            IsRetracted = input.ReadBool();
            break;
          }
          case 58: {
            RetractTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端返回--通知客户端群聊消息发送成功
  /// </summary>
  public sealed partial class GroupChatMessageResponse : pb::IMessage<GroupChatMessageResponse> {
    private static readonly pb::MessageParser<GroupChatMessageResponse> _parser = new pb::MessageParser<GroupChatMessageResponse>(() => new GroupChatMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupChatMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessageResponse(GroupChatMessageResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      id_ = other.id_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupChatMessageResponse Clone() {
      return new GroupChatMessageResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupChatMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupChatMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (Id != other.Id) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupChatMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 好友正在输入通知
  /// </summary>
  public sealed partial class FriendWritingMessage : pb::IMessage<FriendWritingMessage> {
    private static readonly pb::MessageParser<FriendWritingMessage> _parser = new pb::MessageParser<FriendWritingMessage>(() => new FriendWritingMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendWritingMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendWritingMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendWritingMessage(FriendWritingMessage other) : this() {
      userFromId_ = other.userFromId_;
      userTargetId_ = other.userTargetId_;
      isWriting_ = other.isWriting_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendWritingMessage Clone() {
      return new FriendWritingMessage(this);
    }

    /// <summary>Field number for the "userFromId" field.</summary>
    public const int UserFromIdFieldNumber = 1;
    private string userFromId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserFromId {
      get { return userFromId_; }
      set {
        userFromId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userTargetId" field.</summary>
    public const int UserTargetIdFieldNumber = 2;
    private string userTargetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserTargetId {
      get { return userTargetId_; }
      set {
        userTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isWriting" field.</summary>
    public const int IsWritingFieldNumber = 3;
    private bool isWriting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWriting {
      get { return isWriting_; }
      set {
        isWriting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendWritingMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendWritingMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserFromId != other.UserFromId) return false;
      if (UserTargetId != other.UserTargetId) return false;
      if (IsWriting != other.IsWriting) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserFromId.Length != 0) hash ^= UserFromId.GetHashCode();
      if (UserTargetId.Length != 0) hash ^= UserTargetId.GetHashCode();
      if (IsWriting != false) hash ^= IsWriting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserFromId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserTargetId);
      }
      if (IsWriting != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsWriting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserFromId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserFromId);
      }
      if (UserTargetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTargetId);
      }
      if (IsWriting != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendWritingMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserFromId.Length != 0) {
        UserFromId = other.UserFromId;
      }
      if (other.UserTargetId.Length != 0) {
        UserTargetId = other.UserTargetId;
      }
      if (other.IsWriting != false) {
        IsWriting = other.IsWriting;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserFromId = input.ReadString();
            break;
          }
          case 18: {
            UserTargetId = input.ReadString();
            break;
          }
          case 24: {
            IsWriting = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 聊天消息体
  /// </summary>
  public sealed partial class ChatMessage : pb::IMessage<ChatMessage> {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage(ChatMessage other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.TextMess:
          TextMess = other.TextMess.Clone();
          break;
        case ContentOneofCase.ImageMess:
          ImageMess = other.ImageMess.Clone();
          break;
        case ContentOneofCase.FileMess:
          FileMess = other.FileMess.Clone();
          break;
        case ContentOneofCase.SystemMessage:
          SystemMessage = other.SystemMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "textMess" field.</summary>
    public const int TextMessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.TextMess TextMess {
      get { return contentCase_ == ContentOneofCase.TextMess ? (global::ChatServer.Common.Protobuf.TextMess) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.TextMess;
      }
    }

    /// <summary>Field number for the "imageMess" field.</summary>
    public const int ImageMessFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.ImageMess ImageMess {
      get { return contentCase_ == ContentOneofCase.ImageMess ? (global::ChatServer.Common.Protobuf.ImageMess) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.ImageMess;
      }
    }

    /// <summary>Field number for the "fileMess" field.</summary>
    public const int FileMessFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.FileMess FileMess {
      get { return contentCase_ == ContentOneofCase.FileMess ? (global::ChatServer.Common.Protobuf.FileMess) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.FileMess;
      }
    }

    /// <summary>Field number for the "systemMessage" field.</summary>
    public const int SystemMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.SystemMessage SystemMessage {
      get { return contentCase_ == ContentOneofCase.SystemMessage ? (global::ChatServer.Common.Protobuf.SystemMessage) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.SystemMessage;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      TextMess = 1,
      ImageMess = 2,
      FileMess = 3,
      SystemMessage = 4,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TextMess, other.TextMess)) return false;
      if (!object.Equals(ImageMess, other.ImageMess)) return false;
      if (!object.Equals(FileMess, other.FileMess)) return false;
      if (!object.Equals(SystemMessage, other.SystemMessage)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.TextMess) hash ^= TextMess.GetHashCode();
      if (contentCase_ == ContentOneofCase.ImageMess) hash ^= ImageMess.GetHashCode();
      if (contentCase_ == ContentOneofCase.FileMess) hash ^= FileMess.GetHashCode();
      if (contentCase_ == ContentOneofCase.SystemMessage) hash ^= SystemMessage.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (contentCase_ == ContentOneofCase.TextMess) {
        output.WriteRawTag(10);
        output.WriteMessage(TextMess);
      }
      if (contentCase_ == ContentOneofCase.ImageMess) {
        output.WriteRawTag(18);
        output.WriteMessage(ImageMess);
      }
      if (contentCase_ == ContentOneofCase.FileMess) {
        output.WriteRawTag(26);
        output.WriteMessage(FileMess);
      }
      if (contentCase_ == ContentOneofCase.SystemMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(SystemMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.TextMess) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextMess);
      }
      if (contentCase_ == ContentOneofCase.ImageMess) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageMess);
      }
      if (contentCase_ == ContentOneofCase.FileMess) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FileMess);
      }
      if (contentCase_ == ContentOneofCase.SystemMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.TextMess:
          if (TextMess == null) {
            TextMess = new global::ChatServer.Common.Protobuf.TextMess();
          }
          TextMess.MergeFrom(other.TextMess);
          break;
        case ContentOneofCase.ImageMess:
          if (ImageMess == null) {
            ImageMess = new global::ChatServer.Common.Protobuf.ImageMess();
          }
          ImageMess.MergeFrom(other.ImageMess);
          break;
        case ContentOneofCase.FileMess:
          if (FileMess == null) {
            FileMess = new global::ChatServer.Common.Protobuf.FileMess();
          }
          FileMess.MergeFrom(other.FileMess);
          break;
        case ContentOneofCase.SystemMessage:
          if (SystemMessage == null) {
            SystemMessage = new global::ChatServer.Common.Protobuf.SystemMessage();
          }
          SystemMessage.MergeFrom(other.SystemMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::ChatServer.Common.Protobuf.TextMess subBuilder = new global::ChatServer.Common.Protobuf.TextMess();
            if (contentCase_ == ContentOneofCase.TextMess) {
              subBuilder.MergeFrom(TextMess);
            }
            input.ReadMessage(subBuilder);
            TextMess = subBuilder;
            break;
          }
          case 18: {
            global::ChatServer.Common.Protobuf.ImageMess subBuilder = new global::ChatServer.Common.Protobuf.ImageMess();
            if (contentCase_ == ContentOneofCase.ImageMess) {
              subBuilder.MergeFrom(ImageMess);
            }
            input.ReadMessage(subBuilder);
            ImageMess = subBuilder;
            break;
          }
          case 26: {
            global::ChatServer.Common.Protobuf.FileMess subBuilder = new global::ChatServer.Common.Protobuf.FileMess();
            if (contentCase_ == ContentOneofCase.FileMess) {
              subBuilder.MergeFrom(FileMess);
            }
            input.ReadMessage(subBuilder);
            FileMess = subBuilder;
            break;
          }
          case 34: {
            global::ChatServer.Common.Protobuf.SystemMessage subBuilder = new global::ChatServer.Common.Protobuf.SystemMessage();
            if (contentCase_ == ContentOneofCase.SystemMessage) {
              subBuilder.MergeFrom(SystemMessage);
            }
            input.ReadMessage(subBuilder);
            SystemMessage = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 文字消息
  /// </summary>
  public sealed partial class TextMess : pb::IMessage<TextMess> {
    private static readonly pb::MessageParser<TextMess> _parser = new pb::MessageParser<TextMess>(() => new TextMess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextMess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextMess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextMess(TextMess other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextMess Clone() {
      return new TextMess(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextMess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextMess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextMess other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 图片消息
  /// </summary>
  public sealed partial class ImageMess : pb::IMessage<ImageMess> {
    private static readonly pb::MessageParser<ImageMess> _parser = new pb::MessageParser<ImageMess>(() => new ImageMess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageMess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMess(ImageMess other) : this() {
      filePath_ = other.filePath_;
      fileSize_ = other.fileSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMess Clone() {
      return new ImageMess(this);
    }

    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 1;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fileSize" field.</summary>
    public const int FileSizeFieldNumber = 2;
    private int fileSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FileSize {
      get { return fileSize_; }
      set {
        fileSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageMess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageMess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FilePath != other.FilePath) return false;
      if (FileSize != other.FileSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (FileSize != 0) hash ^= FileSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilePath);
      }
      if (FileSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (FileSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageMess other) {
      if (other == null) {
        return;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.FileSize != 0) {
        FileSize = other.FileSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FilePath = input.ReadString();
            break;
          }
          case 16: {
            FileSize = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 文件消息
  /// </summary>
  public sealed partial class FileMess : pb::IMessage<FileMess> {
    private static readonly pb::MessageParser<FileMess> _parser = new pb::MessageParser<FileMess>(() => new FileMess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileMess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMess(FileMess other) : this() {
      fileName_ = other.fileName_;
      fileSize_ = other.fileSize_;
      fileType_ = other.fileType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMess Clone() {
      return new FileMess(this);
    }

    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 1;
    private string fileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fileSize" field.</summary>
    public const int FileSizeFieldNumber = 2;
    private int fileSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FileSize {
      get { return fileSize_; }
      set {
        fileSize_ = value;
      }
    }

    /// <summary>Field number for the "fileType" field.</summary>
    public const int FileTypeFieldNumber = 3;
    private string fileType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileType {
      get { return fileType_; }
      set {
        fileType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileMess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileMess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileName != other.FileName) return false;
      if (FileSize != other.FileSize) return false;
      if (FileType != other.FileType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (FileSize != 0) hash ^= FileSize.GetHashCode();
      if (FileType.Length != 0) hash ^= FileType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (FileSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FileSize);
      }
      if (FileType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FileType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (FileSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileSize);
      }
      if (FileType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileMess other) {
      if (other == null) {
        return;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.FileSize != 0) {
        FileSize = other.FileSize;
      }
      if (other.FileType.Length != 0) {
        FileType = other.FileType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
          case 16: {
            FileSize = input.ReadInt32();
            break;
          }
          case 26: {
            FileType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 系统消息
  /// </summary>
  public sealed partial class SystemMessage : pb::IMessage<SystemMessage> {
    private static readonly pb::MessageParser<SystemMessage> _parser = new pb::MessageParser<SystemMessage>(() => new SystemMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemMessage(SystemMessage other) : this() {
      blocks_ = other.blocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemMessage Clone() {
      return new SystemMessage(this);
    }

    /// <summary>Field number for the "blocks" field.</summary>
    public const int BlocksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ChatServer.Common.Protobuf.SystemMessageBlock> _repeated_blocks_codec
        = pb::FieldCodec.ForMessage(10, global::ChatServer.Common.Protobuf.SystemMessageBlock.Parser);
    private readonly pbc::RepeatedField<global::ChatServer.Common.Protobuf.SystemMessageBlock> blocks_ = new pbc::RepeatedField<global::ChatServer.Common.Protobuf.SystemMessageBlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ChatServer.Common.Protobuf.SystemMessageBlock> Blocks {
      get { return blocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blocks_.Equals(other.blocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blocks_.WriteTo(output, _repeated_blocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blocks_.CalculateSize(_repeated_blocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemMessage other) {
      if (other == null) {
        return;
      }
      blocks_.Add(other.blocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SystemMessageBlock : pb::IMessage<SystemMessageBlock> {
    private static readonly pb::MessageParser<SystemMessageBlock> _parser = new pb::MessageParser<SystemMessageBlock>(() => new SystemMessageBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemMessageBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemMessageBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemMessageBlock(SystemMessageBlock other) : this() {
      text_ = other.text_;
      bold_ = other.bold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemMessageBlock Clone() {
      return new SystemMessageBlock(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bold" field.</summary>
    public const int BoldFieldNumber = 2;
    private bool bold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bold {
      get { return bold_; }
      set {
        bold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemMessageBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemMessageBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (Bold != other.Bold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Bold != false) hash ^= Bold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (Bold != false) {
        output.WriteRawTag(16);
        output.WriteBool(Bold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Bold != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemMessageBlock other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Bold != false) {
        Bold = other.Bold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 16: {
            Bold = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateFriendLastChatIdRequest : pb::IMessage<UpdateFriendLastChatIdRequest> {
    private static readonly pb::MessageParser<UpdateFriendLastChatIdRequest> _parser = new pb::MessageParser<UpdateFriendLastChatIdRequest>(() => new UpdateFriendLastChatIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFriendLastChatIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendLastChatIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendLastChatIdRequest(UpdateFriendLastChatIdRequest other) : this() {
      userId_ = other.userId_;
      friendId_ = other.friendId_;
      lastChatId_ = other.lastChatId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendLastChatIdRequest Clone() {
      return new UpdateFriendLastChatIdRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friendId" field.</summary>
    public const int FriendIdFieldNumber = 2;
    private string friendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendId {
      get { return friendId_; }
      set {
        friendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastChatId" field.</summary>
    public const int LastChatIdFieldNumber = 3;
    private int lastChatId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastChatId {
      get { return lastChatId_; }
      set {
        lastChatId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFriendLastChatIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFriendLastChatIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (FriendId != other.FriendId) return false;
      if (LastChatId != other.LastChatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (FriendId.Length != 0) hash ^= FriendId.GetHashCode();
      if (LastChatId != 0) hash ^= LastChatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (FriendId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendId);
      }
      if (LastChatId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LastChatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (FriendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendId);
      }
      if (LastChatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastChatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFriendLastChatIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.FriendId.Length != 0) {
        FriendId = other.FriendId;
      }
      if (other.LastChatId != 0) {
        LastChatId = other.LastChatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            FriendId = input.ReadString();
            break;
          }
          case 24: {
            LastChatId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateGroupLastChatIdRequest : pb::IMessage<UpdateGroupLastChatIdRequest> {
    private static readonly pb::MessageParser<UpdateGroupLastChatIdRequest> _parser = new pb::MessageParser<UpdateGroupLastChatIdRequest>(() => new UpdateGroupLastChatIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateGroupLastChatIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupLastChatIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupLastChatIdRequest(UpdateGroupLastChatIdRequest other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      lastChatId_ = other.lastChatId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupLastChatIdRequest Clone() {
      return new UpdateGroupLastChatIdRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastChatId" field.</summary>
    public const int LastChatIdFieldNumber = 3;
    private int lastChatId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastChatId {
      get { return lastChatId_; }
      set {
        lastChatId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateGroupLastChatIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateGroupLastChatIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (LastChatId != other.LastChatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (LastChatId != 0) hash ^= LastChatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (LastChatId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LastChatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (LastChatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastChatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateGroupLastChatIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.LastChatId != 0) {
        LastChatId = other.LastChatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 24: {
            LastChatId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateFriendLastChatIdResponse : pb::IMessage<UpdateFriendLastChatIdResponse> {
    private static readonly pb::MessageParser<UpdateFriendLastChatIdResponse> _parser = new pb::MessageParser<UpdateFriendLastChatIdResponse>(() => new UpdateFriendLastChatIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFriendLastChatIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendLastChatIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendLastChatIdResponse(UpdateFriendLastChatIdResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendLastChatIdResponse Clone() {
      return new UpdateFriendLastChatIdResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFriendLastChatIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFriendLastChatIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFriendLastChatIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateGroupLastChatIdResponse : pb::IMessage<UpdateGroupLastChatIdResponse> {
    private static readonly pb::MessageParser<UpdateGroupLastChatIdResponse> _parser = new pb::MessageParser<UpdateGroupLastChatIdResponse>(() => new UpdateGroupLastChatIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateGroupLastChatIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupLastChatIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupLastChatIdResponse(UpdateGroupLastChatIdResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupLastChatIdResponse Clone() {
      return new UpdateGroupLastChatIdResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateGroupLastChatIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateGroupLastChatIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateGroupLastChatIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// -- 删除消息体 -- //
  /// </summary>
  public sealed partial class ChatGroupDetailMessage : pb::IMessage<ChatGroupDetailMessage> {
    private static readonly pb::MessageParser<ChatGroupDetailMessage> _parser = new pb::MessageParser<ChatGroupDetailMessage>(() => new ChatGroupDetailMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatGroupDetailMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupDetailMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupDetailMessage(ChatGroupDetailMessage other) : this() {
      userId_ = other.userId_;
      chatGroupId_ = other.chatGroupId_;
      isDeleted_ = other.isDeleted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupDetailMessage Clone() {
      return new ChatGroupDetailMessage(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatGroupId" field.</summary>
    public const int ChatGroupIdFieldNumber = 2;
    private int chatGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChatGroupId {
      get { return chatGroupId_; }
      set {
        chatGroupId_ = value;
      }
    }

    /// <summary>Field number for the "isDeleted" field.</summary>
    public const int IsDeletedFieldNumber = 3;
    private bool isDeleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDeleted {
      get { return isDeleted_; }
      set {
        isDeleted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatGroupDetailMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatGroupDetailMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ChatGroupId != other.ChatGroupId) return false;
      if (IsDeleted != other.IsDeleted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ChatGroupId != 0) hash ^= ChatGroupId.GetHashCode();
      if (IsDeleted != false) hash ^= IsDeleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ChatGroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChatGroupId);
      }
      if (IsDeleted != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsDeleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ChatGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatGroupId);
      }
      if (IsDeleted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatGroupDetailMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ChatGroupId != 0) {
        ChatGroupId = other.ChatGroupId;
      }
      if (other.IsDeleted != false) {
        IsDeleted = other.IsDeleted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ChatGroupId = input.ReadInt32();
            break;
          }
          case 24: {
            IsDeleted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatPrivateDetailMessage : pb::IMessage<ChatPrivateDetailMessage> {
    private static readonly pb::MessageParser<ChatPrivateDetailMessage> _parser = new pb::MessageParser<ChatPrivateDetailMessage>(() => new ChatPrivateDetailMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatPrivateDetailMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateDetailMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateDetailMessage(ChatPrivateDetailMessage other) : this() {
      userId_ = other.userId_;
      chatPrivateId_ = other.chatPrivateId_;
      isDeleted_ = other.isDeleted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateDetailMessage Clone() {
      return new ChatPrivateDetailMessage(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatPrivateId" field.</summary>
    public const int ChatPrivateIdFieldNumber = 2;
    private int chatPrivateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChatPrivateId {
      get { return chatPrivateId_; }
      set {
        chatPrivateId_ = value;
      }
    }

    /// <summary>Field number for the "isDeleted" field.</summary>
    public const int IsDeletedFieldNumber = 3;
    private bool isDeleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDeleted {
      get { return isDeleted_; }
      set {
        isDeleted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatPrivateDetailMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatPrivateDetailMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ChatPrivateId != other.ChatPrivateId) return false;
      if (IsDeleted != other.IsDeleted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ChatPrivateId != 0) hash ^= ChatPrivateId.GetHashCode();
      if (IsDeleted != false) hash ^= IsDeleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ChatPrivateId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChatPrivateId);
      }
      if (IsDeleted != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsDeleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ChatPrivateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatPrivateId);
      }
      if (IsDeleted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatPrivateDetailMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ChatPrivateId != 0) {
        ChatPrivateId = other.ChatPrivateId;
      }
      if (other.IsDeleted != false) {
        IsDeleted = other.IsDeleted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ChatPrivateId = input.ReadInt32();
            break;
          }
          case 24: {
            IsDeleted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatGroupDeleteRequest : pb::IMessage<ChatGroupDeleteRequest> {
    private static readonly pb::MessageParser<ChatGroupDeleteRequest> _parser = new pb::MessageParser<ChatGroupDeleteRequest>(() => new ChatGroupDeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatGroupDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupDeleteRequest(ChatGroupDeleteRequest other) : this() {
      userId_ = other.userId_;
      chatGroupId_ = other.chatGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupDeleteRequest Clone() {
      return new ChatGroupDeleteRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatGroupId" field.</summary>
    public const int ChatGroupIdFieldNumber = 2;
    private int chatGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChatGroupId {
      get { return chatGroupId_; }
      set {
        chatGroupId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatGroupDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatGroupDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ChatGroupId != other.ChatGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ChatGroupId != 0) hash ^= ChatGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ChatGroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChatGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ChatGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatGroupDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ChatGroupId != 0) {
        ChatGroupId = other.ChatGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ChatGroupId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatGroupDeleteResponse : pb::IMessage<ChatGroupDeleteResponse> {
    private static readonly pb::MessageParser<ChatGroupDeleteResponse> _parser = new pb::MessageParser<ChatGroupDeleteResponse>(() => new ChatGroupDeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatGroupDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupDeleteResponse(ChatGroupDeleteResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupDeleteResponse Clone() {
      return new ChatGroupDeleteResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatGroupDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatGroupDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatGroupDeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatPrivateDeleteRequest : pb::IMessage<ChatPrivateDeleteRequest> {
    private static readonly pb::MessageParser<ChatPrivateDeleteRequest> _parser = new pb::MessageParser<ChatPrivateDeleteRequest>(() => new ChatPrivateDeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatPrivateDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateDeleteRequest(ChatPrivateDeleteRequest other) : this() {
      userId_ = other.userId_;
      chatPrivateId_ = other.chatPrivateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateDeleteRequest Clone() {
      return new ChatPrivateDeleteRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatPrivateId" field.</summary>
    public const int ChatPrivateIdFieldNumber = 2;
    private int chatPrivateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChatPrivateId {
      get { return chatPrivateId_; }
      set {
        chatPrivateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatPrivateDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatPrivateDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ChatPrivateId != other.ChatPrivateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ChatPrivateId != 0) hash ^= ChatPrivateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ChatPrivateId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChatPrivateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ChatPrivateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatPrivateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatPrivateDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ChatPrivateId != 0) {
        ChatPrivateId = other.ChatPrivateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ChatPrivateId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatPrivateDeleteResponse : pb::IMessage<ChatPrivateDeleteResponse> {
    private static readonly pb::MessageParser<ChatPrivateDeleteResponse> _parser = new pb::MessageParser<ChatPrivateDeleteResponse>(() => new ChatPrivateDeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatPrivateDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateDeleteResponse(ChatPrivateDeleteResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateDeleteResponse Clone() {
      return new ChatPrivateDeleteResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatPrivateDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatPrivateDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatPrivateDeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatPrivateRetractRequest : pb::IMessage<ChatPrivateRetractRequest> {
    private static readonly pb::MessageParser<ChatPrivateRetractRequest> _parser = new pb::MessageParser<ChatPrivateRetractRequest>(() => new ChatPrivateRetractRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatPrivateRetractRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateRetractRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateRetractRequest(ChatPrivateRetractRequest other) : this() {
      userId_ = other.userId_;
      chatPrivateId_ = other.chatPrivateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateRetractRequest Clone() {
      return new ChatPrivateRetractRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatPrivateId" field.</summary>
    public const int ChatPrivateIdFieldNumber = 2;
    private int chatPrivateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChatPrivateId {
      get { return chatPrivateId_; }
      set {
        chatPrivateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatPrivateRetractRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatPrivateRetractRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ChatPrivateId != other.ChatPrivateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ChatPrivateId != 0) hash ^= ChatPrivateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ChatPrivateId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChatPrivateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ChatPrivateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatPrivateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatPrivateRetractRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ChatPrivateId != 0) {
        ChatPrivateId = other.ChatPrivateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ChatPrivateId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatPrivateRetractMessage : pb::IMessage<ChatPrivateRetractMessage> {
    private static readonly pb::MessageParser<ChatPrivateRetractMessage> _parser = new pb::MessageParser<ChatPrivateRetractMessage>(() => new ChatPrivateRetractMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatPrivateRetractMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateRetractMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateRetractMessage(ChatPrivateRetractMessage other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      userId_ = other.userId_;
      chatPrivateId_ = other.chatPrivateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPrivateRetractMessage Clone() {
      return new ChatPrivateRetractMessage(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatPrivateId" field.</summary>
    public const int ChatPrivateIdFieldNumber = 3;
    private int chatPrivateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChatPrivateId {
      get { return chatPrivateId_; }
      set {
        chatPrivateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatPrivateRetractMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatPrivateRetractMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (UserId != other.UserId) return false;
      if (ChatPrivateId != other.ChatPrivateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ChatPrivateId != 0) hash ^= ChatPrivateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (ChatPrivateId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChatPrivateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ChatPrivateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatPrivateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatPrivateRetractMessage other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ChatPrivateId != 0) {
        ChatPrivateId = other.ChatPrivateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 24: {
            ChatPrivateId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatGroupRetractRequest : pb::IMessage<ChatGroupRetractRequest> {
    private static readonly pb::MessageParser<ChatGroupRetractRequest> _parser = new pb::MessageParser<ChatGroupRetractRequest>(() => new ChatGroupRetractRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatGroupRetractRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupRetractRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupRetractRequest(ChatGroupRetractRequest other) : this() {
      userId_ = other.userId_;
      chatGroupId_ = other.chatGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupRetractRequest Clone() {
      return new ChatGroupRetractRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatGroupId" field.</summary>
    public const int ChatGroupIdFieldNumber = 2;
    private int chatGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChatGroupId {
      get { return chatGroupId_; }
      set {
        chatGroupId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatGroupRetractRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatGroupRetractRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ChatGroupId != other.ChatGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ChatGroupId != 0) hash ^= ChatGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ChatGroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChatGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ChatGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatGroupRetractRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ChatGroupId != 0) {
        ChatGroupId = other.ChatGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ChatGroupId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatGroupRetractMessage : pb::IMessage<ChatGroupRetractMessage> {
    private static readonly pb::MessageParser<ChatGroupRetractMessage> _parser = new pb::MessageParser<ChatGroupRetractMessage>(() => new ChatGroupRetractMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatGroupRetractMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatCommunicateProtocolReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupRetractMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupRetractMessage(ChatGroupRetractMessage other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      userId_ = other.userId_;
      chatGroupId_ = other.chatGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatGroupRetractMessage Clone() {
      return new ChatGroupRetractMessage(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatGroupId" field.</summary>
    public const int ChatGroupIdFieldNumber = 3;
    private int chatGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChatGroupId {
      get { return chatGroupId_; }
      set {
        chatGroupId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatGroupRetractMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatGroupRetractMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (UserId != other.UserId) return false;
      if (ChatGroupId != other.ChatGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ChatGroupId != 0) hash ^= ChatGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (ChatGroupId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChatGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ChatGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatGroupRetractMessage other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ChatGroupId != 0) {
        ChatGroupId = other.ChatGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 24: {
            ChatGroupId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
