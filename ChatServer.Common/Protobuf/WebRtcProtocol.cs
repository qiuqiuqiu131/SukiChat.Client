// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/WebRtcProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ChatServer.Common.Protobuf {

  /// <summary>Holder for reflection information generated from Proto/WebRtcProtocol.proto</summary>
  public static partial class WebRtcProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/WebRtcProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WebRtcProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQcm90by9XZWJSdGNQcm90b2NvbC5wcm90bxIaQ2hhdFNlcnZlci5Db21t",
            "b24uUHJvdG9idWYaHFByb3RvL0NoYXRCYXNlUHJvdG9jb2wucHJvdG8iSAoM",
            "SWNlQ2FuZGlkYXRlEhEKCWNhbmRpZGF0ZRgBIAEoCRIOCgZzZHBNaWQYAiAB",
            "KAkSFQoNc2RwTUxpbmVJbmRleBgDIAEoBSKpAQoQU2lnbmFsaW5nTWVzc2Fn",
            "ZRI3CgR0eXBlGAEgASgOMikuQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYu",
            "U2lnbmFsaW5nVHlwZRIMCgRmcm9tGAIgASgJEgoKAnRvGAMgASgJEgsKA3Nk",
            "cBgEIAEoCRI1CgNpY2UYBSABKAsyKC5DaGF0U2VydmVyLkNvbW1vbi5Qcm90",
            "b2J1Zi5JY2VDYW5kaWRhdGUiYQoLQ2FsbFJlcXVlc3QSDgoGY2FsbGVyGAEg",
            "ASgJEg4KBmNhbGxlZRgCIAEoCRIyCgR0eXBlGAMgASgOMiQuQ2hhdFNlcnZl",
            "ci5Db21tb24uUHJvdG9idWYuQ2FsbFR5cGUifAoMQ2FsbFJlc3BvbnNlEjwK",
            "CHJlc3BvbnNlGAEgASgLMiouQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYu",
            "Q29tbW9uUmVzcG9uc2USDgoGY2FsbGVyGAIgASgJEg4KBmNhbGxlZRgDIAEo",
            "CRIOCgZhY2NlcHQYBCABKAgiIgoGSGFuZ1VwEgwKBGZyb20YASABKAkSCgoC",
            "dG8YAiABKAkiRQoRVmlkZW9TdGF0ZUNoYW5nZWQSDgoGdXNlcklkGAEgASgJ",
            "EhAKCHRhcmdldElkGAIgASgJEg4KBmlzT3BlbhgDIAEoCCJFChFBdWRpb1N0",
            "YXRlQ2hhbmdlZBIOCgZ1c2VySWQYASABKAkSEAoIdGFyZ2V0SWQYAiABKAkS",
            "DgoGaXNPcGVuGAMgASgIKkoKDVNpZ25hbGluZ1R5cGUSCQoFT0ZGRVIQABIK",
            "CgZBTlNXRVIQARIRCg1JQ0VfQ0FORElEQVRFEAISDwoLUkVOT0dJVElBVEUQ",
            "AyokCghDYWxsVHlwZRINCglURUxFUEhPTkUQABIJCgVWSURFTxABYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ChatServer.Common.Protobuf.ChatBaseProtocolReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ChatServer.Common.Protobuf.SignalingType), typeof(global::ChatServer.Common.Protobuf.CallType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.IceCandidate), global::ChatServer.Common.Protobuf.IceCandidate.Parser, new[]{ "Candidate", "SdpMid", "SdpMLineIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.SignalingMessage), global::ChatServer.Common.Protobuf.SignalingMessage.Parser, new[]{ "Type", "From", "To", "Sdp", "Ice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.CallRequest), global::ChatServer.Common.Protobuf.CallRequest.Parser, new[]{ "Caller", "Callee", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.CallResponse), global::ChatServer.Common.Protobuf.CallResponse.Parser, new[]{ "Response", "Caller", "Callee", "Accept" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.HangUp), global::ChatServer.Common.Protobuf.HangUp.Parser, new[]{ "From", "To" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.VideoStateChanged), global::ChatServer.Common.Protobuf.VideoStateChanged.Parser, new[]{ "UserId", "TargetId", "IsOpen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.AudioStateChanged), global::ChatServer.Common.Protobuf.AudioStateChanged.Parser, new[]{ "UserId", "TargetId", "IsOpen" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 信令消息类型
  /// </summary>
  public enum SignalingType {
    [pbr::OriginalName("OFFER")] Offer = 0,
    [pbr::OriginalName("ANSWER")] Answer = 1,
    [pbr::OriginalName("ICE_CANDIDATE")] IceCandidate = 2,
    [pbr::OriginalName("RENOGITIATE")] Renogitiate = 3,
  }

  public enum CallType {
    /// <summary>
    /// 电话呼叫
    /// </summary>
    [pbr::OriginalName("TELEPHONE")] Telephone = 0,
    /// <summary>
    /// 视频呼叫
    /// </summary>
    [pbr::OriginalName("VIDEO")] Video = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// ICE 候选信息
  /// </summary>
  public sealed partial class IceCandidate : pb::IMessage<IceCandidate> {
    private static readonly pb::MessageParser<IceCandidate> _parser = new pb::MessageParser<IceCandidate>(() => new IceCandidate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IceCandidate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.WebRtcProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IceCandidate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IceCandidate(IceCandidate other) : this() {
      candidate_ = other.candidate_;
      sdpMid_ = other.sdpMid_;
      sdpMLineIndex_ = other.sdpMLineIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IceCandidate Clone() {
      return new IceCandidate(this);
    }

    /// <summary>Field number for the "candidate" field.</summary>
    public const int CandidateFieldNumber = 1;
    private string candidate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Candidate {
      get { return candidate_; }
      set {
        candidate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sdpMid" field.</summary>
    public const int SdpMidFieldNumber = 2;
    private string sdpMid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SdpMid {
      get { return sdpMid_; }
      set {
        sdpMid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sdpMLineIndex" field.</summary>
    public const int SdpMLineIndexFieldNumber = 3;
    private int sdpMLineIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SdpMLineIndex {
      get { return sdpMLineIndex_; }
      set {
        sdpMLineIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IceCandidate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IceCandidate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Candidate != other.Candidate) return false;
      if (SdpMid != other.SdpMid) return false;
      if (SdpMLineIndex != other.SdpMLineIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Candidate.Length != 0) hash ^= Candidate.GetHashCode();
      if (SdpMid.Length != 0) hash ^= SdpMid.GetHashCode();
      if (SdpMLineIndex != 0) hash ^= SdpMLineIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Candidate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Candidate);
      }
      if (SdpMid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SdpMid);
      }
      if (SdpMLineIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SdpMLineIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Candidate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Candidate);
      }
      if (SdpMid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SdpMid);
      }
      if (SdpMLineIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SdpMLineIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IceCandidate other) {
      if (other == null) {
        return;
      }
      if (other.Candidate.Length != 0) {
        Candidate = other.Candidate;
      }
      if (other.SdpMid.Length != 0) {
        SdpMid = other.SdpMid;
      }
      if (other.SdpMLineIndex != 0) {
        SdpMLineIndex = other.SdpMLineIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Candidate = input.ReadString();
            break;
          }
          case 18: {
            SdpMid = input.ReadString();
            break;
          }
          case 24: {
            SdpMLineIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 信令消息
  /// </summary>
  public sealed partial class SignalingMessage : pb::IMessage<SignalingMessage> {
    private static readonly pb::MessageParser<SignalingMessage> _parser = new pb::MessageParser<SignalingMessage>(() => new SignalingMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignalingMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.WebRtcProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignalingMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignalingMessage(SignalingMessage other) : this() {
      type_ = other.type_;
      from_ = other.from_;
      to_ = other.to_;
      sdp_ = other.sdp_;
      ice_ = other.ice_ != null ? other.ice_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignalingMessage Clone() {
      return new SignalingMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.SignalingType type_ = global::ChatServer.Common.Protobuf.SignalingType.Offer;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.SignalingType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private string from_ = "";
    /// <summary>
    /// 发送方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 3;
    private string to_ = "";
    /// <summary>
    /// 接收方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sdp" field.</summary>
    public const int SdpFieldNumber = 4;
    private string sdp_ = "";
    /// <summary>
    /// 用于OFFER/ANSWER的SDP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sdp {
      get { return sdp_; }
      set {
        sdp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ice" field.</summary>
    public const int IceFieldNumber = 5;
    private global::ChatServer.Common.Protobuf.IceCandidate ice_;
    /// <summary>
    /// ICE候选
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.IceCandidate Ice {
      get { return ice_; }
      set {
        ice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignalingMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignalingMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (From != other.From) return false;
      if (To != other.To) return false;
      if (Sdp != other.Sdp) return false;
      if (!object.Equals(Ice, other.Ice)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::ChatServer.Common.Protobuf.SignalingType.Offer) hash ^= Type.GetHashCode();
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (Sdp.Length != 0) hash ^= Sdp.GetHashCode();
      if (ice_ != null) hash ^= Ice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::ChatServer.Common.Protobuf.SignalingType.Offer) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (From.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(From);
      }
      if (To.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(To);
      }
      if (Sdp.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sdp);
      }
      if (ice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Ice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::ChatServer.Common.Protobuf.SignalingType.Offer) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (Sdp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sdp);
      }
      if (ice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignalingMessage other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::ChatServer.Common.Protobuf.SignalingType.Offer) {
        Type = other.Type;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.Sdp.Length != 0) {
        Sdp = other.Sdp;
      }
      if (other.ice_ != null) {
        if (ice_ == null) {
          Ice = new global::ChatServer.Common.Protobuf.IceCandidate();
        }
        Ice.MergeFrom(other.Ice);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::ChatServer.Common.Protobuf.SignalingType) input.ReadEnum();
            break;
          }
          case 18: {
            From = input.ReadString();
            break;
          }
          case 26: {
            To = input.ReadString();
            break;
          }
          case 34: {
            Sdp = input.ReadString();
            break;
          }
          case 42: {
            if (ice_ == null) {
              Ice = new global::ChatServer.Common.Protobuf.IceCandidate();
            }
            input.ReadMessage(Ice);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 呼叫请求
  /// </summary>
  public sealed partial class CallRequest : pb::IMessage<CallRequest> {
    private static readonly pb::MessageParser<CallRequest> _parser = new pb::MessageParser<CallRequest>(() => new CallRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.WebRtcProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallRequest(CallRequest other) : this() {
      caller_ = other.caller_;
      callee_ = other.callee_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallRequest Clone() {
      return new CallRequest(this);
    }

    /// <summary>Field number for the "caller" field.</summary>
    public const int CallerFieldNumber = 1;
    private string caller_ = "";
    /// <summary>
    /// 呼叫方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Caller {
      get { return caller_; }
      set {
        caller_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "callee" field.</summary>
    public const int CalleeFieldNumber = 2;
    private string callee_ = "";
    /// <summary>
    /// 被呼叫方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Callee {
      get { return callee_; }
      set {
        callee_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::ChatServer.Common.Protobuf.CallType type_ = global::ChatServer.Common.Protobuf.CallType.Telephone;
    /// <summary>
    /// 呼叫类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CallType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Caller != other.Caller) return false;
      if (Callee != other.Callee) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Caller.Length != 0) hash ^= Caller.GetHashCode();
      if (Callee.Length != 0) hash ^= Callee.GetHashCode();
      if (Type != global::ChatServer.Common.Protobuf.CallType.Telephone) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Caller.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Caller);
      }
      if (Callee.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Callee);
      }
      if (Type != global::ChatServer.Common.Protobuf.CallType.Telephone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Caller.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Caller);
      }
      if (Callee.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Callee);
      }
      if (Type != global::ChatServer.Common.Protobuf.CallType.Telephone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallRequest other) {
      if (other == null) {
        return;
      }
      if (other.Caller.Length != 0) {
        Caller = other.Caller;
      }
      if (other.Callee.Length != 0) {
        Callee = other.Callee;
      }
      if (other.Type != global::ChatServer.Common.Protobuf.CallType.Telephone) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Caller = input.ReadString();
            break;
          }
          case 18: {
            Callee = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::ChatServer.Common.Protobuf.CallType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 呼叫响应
  /// </summary>
  public sealed partial class CallResponse : pb::IMessage<CallResponse> {
    private static readonly pb::MessageParser<CallResponse> _parser = new pb::MessageParser<CallResponse>(() => new CallResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.WebRtcProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallResponse(CallResponse other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      caller_ = other.caller_;
      callee_ = other.callee_;
      accept_ = other.accept_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallResponse Clone() {
      return new CallResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "caller" field.</summary>
    public const int CallerFieldNumber = 2;
    private string caller_ = "";
    /// <summary>
    /// 呼叫方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Caller {
      get { return caller_; }
      set {
        caller_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "callee" field.</summary>
    public const int CalleeFieldNumber = 3;
    private string callee_ = "";
    /// <summary>
    /// 被呼叫方ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Callee {
      get { return callee_; }
      set {
        callee_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 4;
    private bool accept_;
    /// <summary>
    /// 是否接受呼叫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accept {
      get { return accept_; }
      set {
        accept_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (Caller != other.Caller) return false;
      if (Callee != other.Callee) return false;
      if (Accept != other.Accept) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (Caller.Length != 0) hash ^= Caller.GetHashCode();
      if (Callee.Length != 0) hash ^= Callee.GetHashCode();
      if (Accept != false) hash ^= Accept.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (Caller.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Caller);
      }
      if (Callee.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Callee);
      }
      if (Accept != false) {
        output.WriteRawTag(32);
        output.WriteBool(Accept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (Caller.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Caller);
      }
      if (Callee.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Callee);
      }
      if (Accept != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallResponse other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.Caller.Length != 0) {
        Caller = other.Caller;
      }
      if (other.Callee.Length != 0) {
        Callee = other.Callee;
      }
      if (other.Accept != false) {
        Accept = other.Accept;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            Caller = input.ReadString();
            break;
          }
          case 26: {
            Callee = input.ReadString();
            break;
          }
          case 32: {
            Accept = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 挂断消息
  /// </summary>
  public sealed partial class HangUp : pb::IMessage<HangUp> {
    private static readonly pb::MessageParser<HangUp> _parser = new pb::MessageParser<HangUp>(() => new HangUp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HangUp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.WebRtcProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HangUp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HangUp(HangUp other) : this() {
      from_ = other.from_;
      to_ = other.to_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HangUp Clone() {
      return new HangUp(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private string from_ = "";
    /// <summary>
    /// 发起挂断的用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private string to_ = "";
    /// <summary>
    /// 对方用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HangUp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HangUp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (To != other.To) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(From);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HangUp other) {
      if (other == null) {
        return;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            From = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 视频状态改变消息
  /// </summary>
  public sealed partial class VideoStateChanged : pb::IMessage<VideoStateChanged> {
    private static readonly pb::MessageParser<VideoStateChanged> _parser = new pb::MessageParser<VideoStateChanged>(() => new VideoStateChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoStateChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.WebRtcProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoStateChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoStateChanged(VideoStateChanged other) : this() {
      userId_ = other.userId_;
      targetId_ = other.targetId_;
      isOpen_ = other.isOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoStateChanged Clone() {
      return new VideoStateChanged(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// 用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private string targetId_ = "";
    /// <summary>
    /// 对方用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetId {
      get { return targetId_; }
      set {
        targetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isOpen" field.</summary>
    public const int IsOpenFieldNumber = 3;
    private bool isOpen_;
    /// <summary>
    /// 是否打开视频
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoStateChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoStateChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (TargetId != other.TargetId) return false;
      if (IsOpen != other.IsOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (TargetId.Length != 0) hash ^= TargetId.GetHashCode();
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (TargetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetId);
      }
      if (IsOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (TargetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetId);
      }
      if (IsOpen != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoStateChanged other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.TargetId.Length != 0) {
        TargetId = other.TargetId;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            TargetId = input.ReadString();
            break;
          }
          case 24: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 音频状态改变消息
  /// </summary>
  public sealed partial class AudioStateChanged : pb::IMessage<AudioStateChanged> {
    private static readonly pb::MessageParser<AudioStateChanged> _parser = new pb::MessageParser<AudioStateChanged>(() => new AudioStateChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AudioStateChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.WebRtcProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioStateChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioStateChanged(AudioStateChanged other) : this() {
      userId_ = other.userId_;
      targetId_ = other.targetId_;
      isOpen_ = other.isOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioStateChanged Clone() {
      return new AudioStateChanged(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// 用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private string targetId_ = "";
    /// <summary>
    /// 对方用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetId {
      get { return targetId_; }
      set {
        targetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isOpen" field.</summary>
    public const int IsOpenFieldNumber = 3;
    private bool isOpen_;
    /// <summary>
    /// 是否打开音频
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AudioStateChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AudioStateChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (TargetId != other.TargetId) return false;
      if (IsOpen != other.IsOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (TargetId.Length != 0) hash ^= TargetId.GetHashCode();
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (TargetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetId);
      }
      if (IsOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (TargetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetId);
      }
      if (IsOpen != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AudioStateChanged other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.TargetId.Length != 0) {
        TargetId = other.TargetId;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            TargetId = input.ReadString();
            break;
          }
          case 24: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
