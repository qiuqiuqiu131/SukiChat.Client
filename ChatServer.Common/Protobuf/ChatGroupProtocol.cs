// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/ChatGroupProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ChatServer.Common.Protobuf {

  /// <summary>Holder for reflection information generated from Proto/ChatGroupProtocol.proto</summary>
  public static partial class ChatGroupProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/ChatGroupProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChatGroupProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1Qcm90by9DaGF0R3JvdXBQcm90b2NvbC5wcm90bxIaQ2hhdFNlcnZlci5D",
            "b21tb24uUHJvdG9idWYaHFByb3RvL0NoYXRCYXNlUHJvdG9jb2wucHJvdG8i",
            "NgoTR3JvdXBNZXNzYWdlUmVxdWVzdBIOCgZ1c2VySWQYASABKAkSDwoHZ3Jv",
            "dXBJZBgCIAEoCSK6AQoMR3JvdXBNZXNzYWdlEjwKCHJlc3BvbnNlGAEgASgL",
            "MiouQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYuQ29tbW9uUmVzcG9uc2US",
            "DwoHZ3JvdXBJZBgCIAEoCRIMCgRuYW1lGAMgASgJEhMKC2Rlc2NyaXB0aW9u",
            "GAQgASgJEhEKCWhlYWRJbmRleBgFIAEoBRISCgpjcmVhdGVUaW1lGAYgASgJ",
            "EhEKCWlzRGlzYmFuZBgHIAEoCCI2ChNHcm91cE1lbWJlcnNSZXF1ZXN0Eg4K",
            "BnVzZXJJZBgBIAEoCRIPCgdncm91cElkGAIgASgJIqUBChNHcm91cE1lbWJl",
            "cnNNZXNzYWdlEjwKCHJlc3BvbnNlGAEgASgLMiouQ2hhdFNlcnZlci5Db21t",
            "b24uUHJvdG9idWYuQ29tbW9uUmVzcG9uc2USDwoHZ3JvdXBJZBgCIAEoCRI/",
            "CgdtZW1iZXJzGAMgAygLMi4uQ2hhdFNlcnZlci5Db21tb24uUHJvdG9idWYu",
            "R3JvdXBNZW1iZXJNZXNzYWdlIjcKEkdyb3VwTWVtYmVyUmVxdWVzdBIPCgdn",
            "cm91cElkGAEgASgJEhAKCG1lbWJlcklkGAIgASgJIpMBChJHcm91cE1lbWJl",
            "ck1lc3NhZ2USDgoGdXNlcklkGAEgASgJEg8KB2dyb3VwSWQYAiABKAkSEAoI",
            "am9pblRpbWUYAyABKAkSFQoNbGFzdFNwZWFrVGltZRgEIAEoCRIOCgZzdGF0",
            "dXMYBSABKAUSEAoIbmlja25hbWUYBiABKAkSEQoJaGVhZEluZGV4GAcgASgF",
            "IjgKFUdyb3VwTWVtYmVySWRzUmVxdWVzdBIOCgZ1c2VySWQYASABKAkSDwoH",
            "Z3JvdXBJZBgCIAEoCSI0Cg5Hcm91cE1lbWJlcklkcxIPCgdncm91cElkGAEg",
            "ASgJEhEKCW1lbWJlcklkcxgCIAMoCSLWAQoRRW50ZXJHcm91cE1lc3NhZ2US",
            "DwoHZ3JvdXBJZBgBIAEoCRIOCgZ1c2VySWQYAiABKAkSDgoGc3RhdHVzGAMg",
            "ASgJEhAKCGdyb3VwaW5nGAQgASgJEhAKCGpvaW5UaW1lGAUgASgJEhAKCE5p",
            "Y2tOYW1lGAYgASgJEg4KBlJlbWFyaxgHIAEoCRITCgtjYW50RGlzdHVyYhgI",
            "IAEoCBINCgVpc1RvcBgJIAEoCBISCgpsYXN0Q2hhdElkGAogASgFEhIKCmlz",
            "Q2hhdHRpbmcYCyABKAgicgoZVXBkYXRlR3JvdXBNZXNzYWdlUmVxdWVzdBIO",
            "CgZ1c2VySWQYASABKAkSDwoHZ3JvdXBJZBgCIAEoCRIMCgRuYW1lGAMgASgJ",
            "EhMKC2Rlc2NyaXB0aW9uGAQgASgJEhEKCWhlYWRJbmRleBgFIAEoBSJjChJV",
            "cGRhdGVHcm91cE1lc3NhZ2USPAoIcmVzcG9uc2UYASABKAsyKi5DaGF0U2Vy",
            "dmVyLkNvbW1vbi5Qcm90b2J1Zi5Db21tb25SZXNwb25zZRIPCgdncm91cElk",
            "GAIgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ChatServer.Common.Protobuf.ChatBaseProtocolReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupMessageRequest), global::ChatServer.Common.Protobuf.GroupMessageRequest.Parser, new[]{ "UserId", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupMessage), global::ChatServer.Common.Protobuf.GroupMessage.Parser, new[]{ "Response", "GroupId", "Name", "Description", "HeadIndex", "CreateTime", "IsDisband" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupMembersRequest), global::ChatServer.Common.Protobuf.GroupMembersRequest.Parser, new[]{ "UserId", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupMembersMessage), global::ChatServer.Common.Protobuf.GroupMembersMessage.Parser, new[]{ "Response", "GroupId", "Members" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupMemberRequest), global::ChatServer.Common.Protobuf.GroupMemberRequest.Parser, new[]{ "GroupId", "MemberId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupMemberMessage), global::ChatServer.Common.Protobuf.GroupMemberMessage.Parser, new[]{ "UserId", "GroupId", "JoinTime", "LastSpeakTime", "Status", "Nickname", "HeadIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupMemberIdsRequest), global::ChatServer.Common.Protobuf.GroupMemberIdsRequest.Parser, new[]{ "UserId", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.GroupMemberIds), global::ChatServer.Common.Protobuf.GroupMemberIds.Parser, new[]{ "GroupId", "MemberIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.EnterGroupMessage), global::ChatServer.Common.Protobuf.EnterGroupMessage.Parser, new[]{ "GroupId", "UserId", "Status", "Grouping", "JoinTime", "NickName", "Remark", "CantDisturb", "IsTop", "LastChatId", "IsChatting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateGroupMessageRequest), global::ChatServer.Common.Protobuf.UpdateGroupMessageRequest.Parser, new[]{ "UserId", "GroupId", "Name", "Description", "HeadIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatServer.Common.Protobuf.UpdateGroupMessage), global::ChatServer.Common.Protobuf.UpdateGroupMessage.Parser, new[]{ "Response", "GroupId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端请求 群聊信息
  /// </summary>
  public sealed partial class GroupMessageRequest : pb::IMessage<GroupMessageRequest> {
    private static readonly pb::MessageParser<GroupMessageRequest> _parser = new pb::MessageParser<GroupMessageRequest>(() => new GroupMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMessageRequest(GroupMessageRequest other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMessageRequest Clone() {
      return new GroupMessageRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 群聊信息
  /// </summary>
  public sealed partial class GroupMessage : pb::IMessage<GroupMessage> {
    private static readonly pb::MessageParser<GroupMessage> _parser = new pb::MessageParser<GroupMessage>(() => new GroupMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMessage(GroupMessage other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      groupId_ = other.groupId_;
      name_ = other.name_;
      description_ = other.description_;
      headIndex_ = other.headIndex_;
      createTime_ = other.createTime_;
      isDisband_ = other.isDisband_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMessage Clone() {
      return new GroupMessage(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headIndex" field.</summary>
    public const int HeadIndexFieldNumber = 5;
    private int headIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeadIndex {
      get { return headIndex_; }
      set {
        headIndex_ = value;
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private string createTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isDisband" field.</summary>
    public const int IsDisbandFieldNumber = 7;
    private bool isDisband_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDisband {
      get { return isDisband_; }
      set {
        isDisband_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (GroupId != other.GroupId) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (HeadIndex != other.HeadIndex) return false;
      if (CreateTime != other.CreateTime) return false;
      if (IsDisband != other.IsDisband) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (HeadIndex != 0) hash ^= HeadIndex.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (IsDisband != false) hash ^= IsDisband.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HeadIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(HeadIndex);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreateTime);
      }
      if (IsDisband != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsDisband);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HeadIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadIndex);
      }
      if (CreateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (IsDisband != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMessage other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.HeadIndex != 0) {
        HeadIndex = other.HeadIndex;
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.IsDisband != false) {
        IsDisband = other.IsDisband;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            HeadIndex = input.ReadInt32();
            break;
          }
          case 50: {
            CreateTime = input.ReadString();
            break;
          }
          case 56: {
            IsDisband = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端请求 群聊列表
  /// </summary>
  public sealed partial class GroupMembersRequest : pb::IMessage<GroupMembersRequest> {
    private static readonly pb::MessageParser<GroupMembersRequest> _parser = new pb::MessageParser<GroupMembersRequest>(() => new GroupMembersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMembersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersRequest(GroupMembersRequest other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersRequest Clone() {
      return new GroupMembersRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMembersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMembersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMembersRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 群聊列表
  /// </summary>
  public sealed partial class GroupMembersMessage : pb::IMessage<GroupMembersMessage> {
    private static readonly pb::MessageParser<GroupMembersMessage> _parser = new pb::MessageParser<GroupMembersMessage>(() => new GroupMembersMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMembersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersMessage(GroupMembersMessage other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      groupId_ = other.groupId_;
      members_ = other.members_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersMessage Clone() {
      return new GroupMembersMessage(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ChatServer.Common.Protobuf.GroupMemberMessage> _repeated_members_codec
        = pb::FieldCodec.ForMessage(26, global::ChatServer.Common.Protobuf.GroupMemberMessage.Parser);
    private readonly pbc::RepeatedField<global::ChatServer.Common.Protobuf.GroupMemberMessage> members_ = new pbc::RepeatedField<global::ChatServer.Common.Protobuf.GroupMemberMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ChatServer.Common.Protobuf.GroupMemberMessage> Members {
      get { return members_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMembersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMembersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (GroupId != other.GroupId) return false;
      if(!members_.Equals(other.members_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      hash ^= members_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMembersMessage other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      members_.Add(other.members_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端请求 群聊成员信息
  /// </summary>
  public sealed partial class GroupMemberRequest : pb::IMessage<GroupMemberRequest> {
    private static readonly pb::MessageParser<GroupMemberRequest> _parser = new pb::MessageParser<GroupMemberRequest>(() => new GroupMemberRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMemberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberRequest(GroupMemberRequest other) : this() {
      groupId_ = other.groupId_;
      memberId_ = other.memberId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberRequest Clone() {
      return new GroupMemberRequest(this);
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 2;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMemberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMemberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (MemberId != other.MemberId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMemberRequest other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            MemberId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 群聊成员信息
  /// </summary>
  public sealed partial class GroupMemberMessage : pb::IMessage<GroupMemberMessage> {
    private static readonly pb::MessageParser<GroupMemberMessage> _parser = new pb::MessageParser<GroupMemberMessage>(() => new GroupMemberMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMemberMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberMessage(GroupMemberMessage other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      joinTime_ = other.joinTime_;
      lastSpeakTime_ = other.lastSpeakTime_;
      status_ = other.status_;
      nickname_ = other.nickname_;
      headIndex_ = other.headIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberMessage Clone() {
      return new GroupMemberMessage(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "joinTime" field.</summary>
    public const int JoinTimeFieldNumber = 3;
    private string joinTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JoinTime {
      get { return joinTime_; }
      set {
        joinTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastSpeakTime" field.</summary>
    public const int LastSpeakTimeFieldNumber = 4;
    private string lastSpeakTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastSpeakTime {
      get { return lastSpeakTime_; }
      set {
        lastSpeakTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 6;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headIndex" field.</summary>
    public const int HeadIndexFieldNumber = 7;
    private int headIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeadIndex {
      get { return headIndex_; }
      set {
        headIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMemberMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMemberMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (JoinTime != other.JoinTime) return false;
      if (LastSpeakTime != other.LastSpeakTime) return false;
      if (Status != other.Status) return false;
      if (Nickname != other.Nickname) return false;
      if (HeadIndex != other.HeadIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (JoinTime.Length != 0) hash ^= JoinTime.GetHashCode();
      if (LastSpeakTime.Length != 0) hash ^= LastSpeakTime.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (HeadIndex != 0) hash ^= HeadIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (JoinTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JoinTime);
      }
      if (LastSpeakTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LastSpeakTime);
      }
      if (Status != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Status);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Nickname);
      }
      if (HeadIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HeadIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (JoinTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JoinTime);
      }
      if (LastSpeakTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastSpeakTime);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (HeadIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMemberMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.JoinTime.Length != 0) {
        JoinTime = other.JoinTime;
      }
      if (other.LastSpeakTime.Length != 0) {
        LastSpeakTime = other.LastSpeakTime;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.HeadIndex != 0) {
        HeadIndex = other.HeadIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            JoinTime = input.ReadString();
            break;
          }
          case 34: {
            LastSpeakTime = input.ReadString();
            break;
          }
          case 40: {
            Status = input.ReadInt32();
            break;
          }
          case 50: {
            Nickname = input.ReadString();
            break;
          }
          case 56: {
            HeadIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端请求 所有群聊成员的id
  /// </summary>
  public sealed partial class GroupMemberIdsRequest : pb::IMessage<GroupMemberIdsRequest> {
    private static readonly pb::MessageParser<GroupMemberIdsRequest> _parser = new pb::MessageParser<GroupMemberIdsRequest>(() => new GroupMemberIdsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMemberIdsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberIdsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberIdsRequest(GroupMemberIdsRequest other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberIdsRequest Clone() {
      return new GroupMemberIdsRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMemberIdsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMemberIdsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMemberIdsRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 所有群聊成员的id
  /// </summary>
  public sealed partial class GroupMemberIds : pb::IMessage<GroupMemberIds> {
    private static readonly pb::MessageParser<GroupMemberIds> _parser = new pb::MessageParser<GroupMemberIds>(() => new GroupMemberIds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMemberIds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberIds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberIds(GroupMemberIds other) : this() {
      groupId_ = other.groupId_;
      memberIds_ = other.memberIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMemberIds Clone() {
      return new GroupMemberIds(this);
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberIds" field.</summary>
    public const int MemberIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_memberIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> memberIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MemberIds {
      get { return memberIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMemberIds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMemberIds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if(!memberIds_.Equals(other.memberIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      hash ^= memberIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      memberIds_.WriteTo(output, _repeated_memberIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      size += memberIds_.CalculateSize(_repeated_memberIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMemberIds other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      memberIds_.Add(other.memberIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            memberIds_.AddEntriesFrom(input, _repeated_memberIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Entity 群聊关系信息->GroupRelation
  /// </summary>
  public sealed partial class EnterGroupMessage : pb::IMessage<EnterGroupMessage> {
    private static readonly pb::MessageParser<EnterGroupMessage> _parser = new pb::MessageParser<EnterGroupMessage>(() => new EnterGroupMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterGroupMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterGroupMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterGroupMessage(EnterGroupMessage other) : this() {
      groupId_ = other.groupId_;
      userId_ = other.userId_;
      status_ = other.status_;
      grouping_ = other.grouping_;
      joinTime_ = other.joinTime_;
      nickName_ = other.nickName_;
      remark_ = other.remark_;
      cantDisturb_ = other.cantDisturb_;
      isTop_ = other.isTop_;
      lastChatId_ = other.lastChatId_;
      isChatting_ = other.isChatting_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterGroupMessage Clone() {
      return new EnterGroupMessage(this);
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "grouping" field.</summary>
    public const int GroupingFieldNumber = 4;
    private string grouping_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Grouping {
      get { return grouping_; }
      set {
        grouping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "joinTime" field.</summary>
    public const int JoinTimeFieldNumber = 5;
    private string joinTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JoinTime {
      get { return joinTime_; }
      set {
        joinTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NickName" field.</summary>
    public const int NickNameFieldNumber = 6;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Remark" field.</summary>
    public const int RemarkFieldNumber = 7;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cantDisturb" field.</summary>
    public const int CantDisturbFieldNumber = 8;
    private bool cantDisturb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CantDisturb {
      get { return cantDisturb_; }
      set {
        cantDisturb_ = value;
      }
    }

    /// <summary>Field number for the "isTop" field.</summary>
    public const int IsTopFieldNumber = 9;
    private bool isTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTop {
      get { return isTop_; }
      set {
        isTop_ = value;
      }
    }

    /// <summary>Field number for the "lastChatId" field.</summary>
    public const int LastChatIdFieldNumber = 10;
    private int lastChatId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastChatId {
      get { return lastChatId_; }
      set {
        lastChatId_ = value;
      }
    }

    /// <summary>Field number for the "isChatting" field.</summary>
    public const int IsChattingFieldNumber = 11;
    private bool isChatting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChatting {
      get { return isChatting_; }
      set {
        isChatting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterGroupMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterGroupMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (UserId != other.UserId) return false;
      if (Status != other.Status) return false;
      if (Grouping != other.Grouping) return false;
      if (JoinTime != other.JoinTime) return false;
      if (NickName != other.NickName) return false;
      if (Remark != other.Remark) return false;
      if (CantDisturb != other.CantDisturb) return false;
      if (IsTop != other.IsTop) return false;
      if (LastChatId != other.LastChatId) return false;
      if (IsChatting != other.IsChatting) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (Grouping.Length != 0) hash ^= Grouping.GetHashCode();
      if (JoinTime.Length != 0) hash ^= JoinTime.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (CantDisturb != false) hash ^= CantDisturb.GetHashCode();
      if (IsTop != false) hash ^= IsTop.GetHashCode();
      if (LastChatId != 0) hash ^= LastChatId.GetHashCode();
      if (IsChatting != false) hash ^= IsChatting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Status);
      }
      if (Grouping.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Grouping);
      }
      if (JoinTime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(JoinTime);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NickName);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Remark);
      }
      if (CantDisturb != false) {
        output.WriteRawTag(64);
        output.WriteBool(CantDisturb);
      }
      if (IsTop != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsTop);
      }
      if (LastChatId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(LastChatId);
      }
      if (IsChatting != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsChatting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (Grouping.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Grouping);
      }
      if (JoinTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JoinTime);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (CantDisturb != false) {
        size += 1 + 1;
      }
      if (IsTop != false) {
        size += 1 + 1;
      }
      if (LastChatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastChatId);
      }
      if (IsChatting != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterGroupMessage other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      if (other.Grouping.Length != 0) {
        Grouping = other.Grouping;
      }
      if (other.JoinTime.Length != 0) {
        JoinTime = other.JoinTime;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.CantDisturb != false) {
        CantDisturb = other.CantDisturb;
      }
      if (other.IsTop != false) {
        IsTop = other.IsTop;
      }
      if (other.LastChatId != 0) {
        LastChatId = other.LastChatId;
      }
      if (other.IsChatting != false) {
        IsChatting = other.IsChatting;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Grouping = input.ReadString();
            break;
          }
          case 42: {
            JoinTime = input.ReadString();
            break;
          }
          case 50: {
            NickName = input.ReadString();
            break;
          }
          case 58: {
            Remark = input.ReadString();
            break;
          }
          case 64: {
            CantDisturb = input.ReadBool();
            break;
          }
          case 72: {
            IsTop = input.ReadBool();
            break;
          }
          case 80: {
            LastChatId = input.ReadInt32();
            break;
          }
          case 88: {
            IsChatting = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端请求 更新群聊信息
  /// </summary>
  public sealed partial class UpdateGroupMessageRequest : pb::IMessage<UpdateGroupMessageRequest> {
    private static readonly pb::MessageParser<UpdateGroupMessageRequest> _parser = new pb::MessageParser<UpdateGroupMessageRequest>(() => new UpdateGroupMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateGroupMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupMessageRequest(UpdateGroupMessageRequest other) : this() {
      userId_ = other.userId_;
      groupId_ = other.groupId_;
      name_ = other.name_;
      description_ = other.description_;
      headIndex_ = other.headIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupMessageRequest Clone() {
      return new UpdateGroupMessageRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headIndex" field.</summary>
    public const int HeadIndexFieldNumber = 5;
    private int headIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeadIndex {
      get { return headIndex_; }
      set {
        headIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateGroupMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateGroupMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GroupId != other.GroupId) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (HeadIndex != other.HeadIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (HeadIndex != 0) hash ^= HeadIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HeadIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(HeadIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HeadIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateGroupMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.HeadIndex != 0) {
        HeadIndex = other.HeadIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            HeadIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 群聊信息发生改变通知
  /// </summary>
  public sealed partial class UpdateGroupMessage : pb::IMessage<UpdateGroupMessage> {
    private static readonly pb::MessageParser<UpdateGroupMessage> _parser = new pb::MessageParser<UpdateGroupMessage>(() => new UpdateGroupMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateGroupMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatServer.Common.Protobuf.ChatGroupProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupMessage(UpdateGroupMessage other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroupMessage Clone() {
      return new UpdateGroupMessage(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::ChatServer.Common.Protobuf.CommonResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatServer.Common.Protobuf.CommonResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateGroupMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateGroupMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateGroupMessage other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::ChatServer.Common.Protobuf.CommonResponse();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::ChatServer.Common.Protobuf.CommonResponse();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
